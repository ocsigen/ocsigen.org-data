=Module type <<a_api_type subproject="client" | module type Ot_page_transition.PAGE_TRANSITION_CONF >> =
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module type>> <<span class="ocsforge_color_uid"|PAGE_TRANSITION_CONF>> <<span class="ocsforge_color_delimiter"|~=>> <<span class="ocsforge_color_keyword"|sig>><<a_api subproject="client" text=".." | module type Ot_page_transition.PAGE_TRANSITION_CONF >><<span class="ocsforge_color_keyword"|end>>>>~Suppose that screenshots are stored in objects of type <<span class="odocwiki_inlinecode"|screenshot>>~.
    ~Users need to provide a module which specifies the type screenshot
    ~(e~.g~. string~) and a function <<span class="odocwiki_inlinecode"|screenshot~_container>> that creates
    a html element from the screenshot~.

----
<<pre class="ocsforge_color odocwiki_code" id="TYPEscreenshot"|<<span class="ocsforge_color_keyword"|type>> <<span class="odocwiki_name"|screenshot>>>><<pre id="VALscreenshot_container" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|screenshot~_container>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<a_api subproject="client" text="screenshot" | type Ot_page_transition.PAGE_TRANSITION_CONF.screenshot >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_uid"|Html_types>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|div_content>> <<span class="ocsforge_color_uid"|Eliom_content>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_uid"|Html>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|elt>>>>>>