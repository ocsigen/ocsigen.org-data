=Module <<a_api_type subproject="server" | module Os_notif >> =
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<span class="ocsforge_color_uid"|<<span class="ocsforge_color_uid"|Os_notif>>>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="ocsforge_color_keyword"|sig>><<a_api subproject="server" text=".." | module Os_notif >><<span class="ocsforge_color_keyword"|end>>>>~Server to client notifications~.


    ~This module makes possible for client side applications to be
    notified of changes on some indexed data on the server~.


    ~Apply functor <<span class="odocwiki_inlinecode"|~Make>> or <<span class="odocwiki_inlinecode"|~Simple>> for each type of data you want to be able
    to listen on~. ~Each client starts listening on one piece of data by calling
    function <<span class="odocwiki_inlinecode"|listen>> with the index of that piece of data as parameter~. ~Client
    stops listening by calling function <<span class="odocwiki_inlinecode"|unlisten>>~, or when the client side
    state is closed ~(by timeout or when the user logs out for example~)~.


    ~When the data is modified on server side~, call function <<span class="odocwiki_inlinecode"|notify>>
    with the index of the data~, and all clients listening to that piece
    of data will receive a notification~. ~Function <<span class="odocwiki_inlinecode"|notify>> takes as parameter
    the function that will build a customize notification for each user~.
    ~(~Be careful to check that user has right to see this data at this moment~)~.


    ~The functor will also create a client side react signal that will
    be updated every time the client is notified~.

----
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module type>> <<a_api subproject="server" text="S" | module type Os_notif.S >> <<span class="ocsforge_color_delimiter"|~=>> <<span class="ocsforge_color_keyword"|sig>><<a_api subproject="server" text=".." | module type Os_notif.S >><<span class="ocsforge_color_keyword"|end>>>><<div class="odocwiki_info"|~Signature for server~-to~-client notifications~.
>>
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<a_api subproject="server" text="Make" | module Os_notif.Make >> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_sig_block"|<<span class="ocsforge_color_keyword"|functor>> <<span class="ocsforge_color_delimiter"|(>>A <<span class="ocsforge_color_delimiter"|~:>> <<span class="ocsforge_color_keyword"|sig>><<span class="odocwiki_sig_block"|<<span class="ocsforge_color odocwiki_code" id="TYPEkey"|      <<span class="ocsforge_color_keyword"|type>> <<span class="odocwiki_name"|key>>>><<span class="ocsforge_color odocwiki_code" id="TYPEserver_notif"|      <<span class="ocsforge_color_keyword"|type>> <<span class="odocwiki_name"|server~_notif>>>><<span class="ocsforge_color odocwiki_code" id="TYPEclient_notif"|      <<span class="ocsforge_color_keyword"|type>> <<span class="odocwiki_name"|client~_notif>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|prepare f>> transforms server notifications into client notifications~.
          ~It provides the userid as a parameter~, if a user is connected for this
          client process~. ~If you do not want to send the notification for this
          user~, for example because he is not allowed to see this data~, make
          <<span class="odocwiki_inlinecode"|f>> return <<span class="odocwiki_inlinecode"|~None>>~.
>>
<<span id="VALprepare" class="ocsforge_color odocwiki_code"|      <<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|prepare>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\        int64 option <<span class="ocsforge_color_delimiter"| -> >>\\        <<span class="ocsforge_color_lid"|server_notif>> <<span class="ocsforge_color_delimiter"| -> >>\\        <<span class="ocsforge_color_lid"|client_notif>> option <<span class="ocsforge_color_uid"|Lwt>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>>>>>>>><<span class="ocsforge_color_keyword"|end>><<span class="ocsforge_color_delimiter"|)>> <<span class="ocsforge_color_delimiter"|-~>>> \\  \\  <<span class="odocwiki_type"|<<a_api subproject="server" text="S" | module Os_notif.S >>>><<span class="odocwiki_type"|  with type key = A.key\\     and type server_notif = A.server_notif\\     and type client_notif = A.client_notif>>>>>><<div class="odocwiki_info"|~Use this functor if you have a multi~-server set~-up~, use <<span class="odocwiki_inlinecode"|~Simple>> otherwise~.
>>
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<a_api subproject="server" text="Simple" | module Os_notif.Simple >> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_sig_block"|<<span class="ocsforge_color_keyword"|functor>> <<span class="ocsforge_color_delimiter"|(>>A <<span class="ocsforge_color_delimiter"|~:>> <<span class="ocsforge_color_keyword"|sig>><<span class="odocwiki_sig_block"|<<span class="ocsforge_color odocwiki_code" id="TYPEkey"|      <<span class="ocsforge_color_keyword"|type>> <<span class="odocwiki_name"|key>>>><<span class="ocsforge_color odocwiki_code" id="TYPEnotification"|      <<span class="ocsforge_color_keyword"|type>> <<span class="odocwiki_name"|notification>>>>>><<span class="ocsforge_color_keyword"|end>><<span class="ocsforge_color_delimiter"|)>> <<span class="ocsforge_color_delimiter"|-~>>> \\  \\  <<span class="odocwiki_type"|<<a_api subproject="server" text="S" | module Os_notif.S >>>><<span class="odocwiki_type"|  with type key = A.key\\     and type server_notif = A.notification\\     and type client_notif = A.notification>>>>>><<div class="odocwiki_info"|~Use this functor in case messages are to be delivered only to clients
    connected to the current server~, as is always the case in a single~-server
    set~-up~.
>>
