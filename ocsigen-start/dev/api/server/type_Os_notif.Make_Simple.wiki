<<code language="ocaml" | functor (A : ARG_SIMPLE) ->
  sig
    type identity = Os_types.User.id option
    type key = A.key
    type server_notif = A.notification
    type client_notif = A.notification
    val init : unit -> unit Lwt.t
    val deinit : unit -> unit
    val listen : key -> unit
    val unlisten : key -> unit
    module Ext :
      sig
        val unlisten :
          ?sitedata:Eliom_common.sitedata ->
          ([< `Client_process ], [< `Data ]) Eliom_state.Ext.state ->
          key -> unit
      end
    val client_ev : unit -> (key * client_notif) Eliom_react.Down.t
    val clean : unit -> unit
    val unlisten_user :
      ?sitedata:Eliom_common.sitedata ->
      userid:Os_types.User.id -> key -> unit
    val notify :
      ?notfor:[ `Me | `User of Os_types.User.id ] ->
      key -> server_notif -> unit
  end >>