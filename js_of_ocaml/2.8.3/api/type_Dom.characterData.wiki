<<code language="ocaml" | object
  method appendChild : node Js.t -> node Js.t Js.meth
  method appendData : Js.js_string Js.t -> unit Js.meth
  method childNodes : node nodeList Js.t Js.prop
  method cloneNode : bool Js.t -> node Js.t Js.meth
  method compareDocumentPosition : node Js.t -> DocumentPosition.t Js.meth
  method data : Js.js_string Js.t Js.prop
  method deleteData : int -> int -> unit Js.meth
  method firstChild : node Js.t Js.opt Js.prop
  method hasChildNodes : bool Js.t Js.meth
  method insertBefore : node Js.t -> node Js.t Js.opt -> node Js.t Js.meth
  method insertData : int -> Js.js_string Js.t -> unit Js.meth
  method lastChild : node Js.t Js.opt Js.prop
  method length : int Js.readonly_prop
  method lookupNamespaceURI :
    Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth
  method lookupPrefix : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth
  method namespaceURI : Js.js_string Js.t Js.opt Js.prop
  method nextSibling : node Js.t Js.opt Js.prop
  method nodeName : Js.js_string Js.t Js.readonly_prop
  method nodeType : nodeType Js.readonly_prop
  method nodeValue : Js.js_string Js.t Js.opt Js.readonly_prop
  method parentNode : node Js.t Js.opt Js.prop
  method previousSibling : node Js.t Js.opt Js.prop
  method removeChild : node Js.t -> node Js.t Js.meth
  method replaceChild : node Js.t -> node Js.t -> node Js.t Js.meth
  method replaceData : int -> int -> Js.js_string Js.t -> unit Js.meth
  method subjs_stringData : int -> int -> Js.js_string Js.t Js.meth
end >>