=Index of modules=

|@@ @style="tet-align: left;"@@\\C|
|@@class="odocwiki_index"@ @@<<a_api text="Current"| module Url.Current >> ~[<<a_api | module Url >>~]|<<div class="odocwiki_info"|~This module can be used to handle the ~Url associated to the current
    document~.
>>
|
|@@ @style="tet-align: left;"@@\\D|
|@@class="odocwiki_index"@ @@<<a_api text="Deriving_Json_lexer"| module Deriving_Json_lexer >> |<<div class="odocwiki_info"|~Create a fresh lexbuf record~.
>>
|
|@@ @style="tet-align: left;"@@\\J|
|@@class="odocwiki_index"@ @@<<a_api text="Js"| module Js >> |<<div class="odocwiki_info"|~Javascript binding
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="JsooTop"| module JsooTop >> |<<div class="odocwiki_info"|~Helper for ~Js~_of~_ocaml ~Toplevel~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="JsooTopError"| module JsooTopError >> ||
|@@class="odocwiki_index"@ @@<<a_api text="JsooTopPpx"| module JsooTopPpx >> |<<div class="odocwiki_info"|~One can add a ppx rewriter to a toplevel by registering it
    
<<code language='ocaml'|      open Migrate_parsetree

      let init () =
        let module Converter =
          Migrate_parsetree.Versions.Convert
            (Migrate_parsetree.OCaml_405)
            (Migrate_parsetree.OCaml_current)
        in
        let mapper = Converter.copy_mapper Ppx_js.mapper in
        Compiler_libs.Ast_mapper.register "js_of_ocaml" (fun _ -> mapper)
    >>

>>
|
|@@ @style="tet-align: left;"@@\\L|
|@@class="odocwiki_index"@ @@<<a_api text="Lwt_js"| module Lwt_js >> |<<div class="odocwiki_info"|~Javascript specific ~Lwt functions~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="Lwt_jsonp"| module Lwt_jsonp >> |<<div class="odocwiki_info"|~This module provides helpers to perform ~J~S~O~N~P calls
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="Lwt_log_js"| module Lwt_log_js >> |<<div class="odocwiki_info"|~Lwt logger for js~_of~_ocaml
>>
|
|@@ @style="tet-align: left;"@@\\O|
|@@class="odocwiki_index"@ @@<<a_api text="Ocamlbuild_js_of_ocaml"| module Ocamlbuild_js_of_ocaml >> |<<div class="odocwiki_info"|~Ocamlbuild plugin to build with js~_of~_ocaml
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="Opt"| module Js.Opt >> ~[<<a_api | module Js >>~]|<<div class="odocwiki_info"|~Standard functions for manipulating possibly null values~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="Optdef"| module Js.Optdef >> ~[<<a_api | module Js >>~]|<<div class="odocwiki_info"|~Standard functions for manipulating possibly undefined values~.
>>
|
|@@ @style="tet-align: left;"@@\\P|
|@@class="odocwiki_index"@ @@<<a_api text="Pa_deriving_Json"| module Pa_deriving_Json >> |<<div class="odocwiki_info"|~Deriving~_json syntax extension ~(based on the //deriving// library~)~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="Ppx_js"| module Ppx_js >> |<<div class="odocwiki_info"|~/~*
>>
|
|@@ @style="tet-align: left;"@@\\R|
|@@class="odocwiki_index"@ @@<<a_api text="Regexp"| module Regexp >> |<<div class="odocwiki_info"|~Types for regexps~.
>>
|
|@@ @style="tet-align: left;"@@\\S|
|@@class="odocwiki_index"@ @@<<a_api text="Sys_js"| module Sys_js >> |<<div class="odocwiki_info"|~Javascript specific ~Sys functions~.
>>
|
|@@ @style="tet-align: left;"@@\\U|
|@@class="odocwiki_index"@ @@<<a_api text="Unsafe"| module Js.Unsafe >> ~[<<a_api | module Js >>~]|<<div class="odocwiki_info"|~Unsafe ~Javascript operations
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="Url"| module Url >> |<<div class="odocwiki_info"|~This module provides functions for tampering with ~Url~.
>>
|
\\
