<<code language="ocaml" | sig
  type +'a opt
  type +'a optdef
  val null : 'a Js.opt
  val some : 'a -> 'a Js.opt
  val undefined : 'a Js.optdef
  val def : 'a -> 'a Js.optdef
  module type OPT =
    sig
      type 'a t
      val empty : 'a Js.OPT.t
      val return : 'a -> 'a Js.OPT.t
      val map : 'a Js.OPT.t -> ('a -> 'b) -> 'b Js.OPT.t
      val bind : 'a Js.OPT.t -> ('a -> 'b Js.OPT.t) -> 'b Js.OPT.t
      val test : 'a Js.OPT.t -> bool
      val iter : 'a Js.OPT.t -> ('a -> unit) -> unit
      val case : 'a Js.OPT.t -> (unit -> 'b) -> ('a -> 'b) -> 'b
      val get : 'a Js.OPT.t -> (unit -> 'a) -> 'a
      val option : 'a option -> 'a Js.OPT.t
      val to_option : 'a Js.OPT.t -> 'a option
    end
  module Opt :
    sig
      type 'a t = 'a opt
      val empty : 'a t
      val return : 'a -> 'a t
      val map : 'a t -> ('a -> 'b) -> 'b t
      val bind : 'a t -> ('a -> 'b t) -> 'b t
      val test : 'a t -> bool
      val iter : 'a t -> ('a -> unit) -> unit
      val case : 'a t -> (unit -> 'b) -> ('a -> 'b) -> 'b
      val get : 'a t -> (unit -> 'a) -> 'a
      val option : 'a option -> 'a t
      val to_option : 'a t -> 'a option
    end
  module Optdef :
    sig
      type 'a t = 'a optdef
      val empty : 'a t
      val return : 'a -> 'a t
      val map : 'a t -> ('a -> 'b) -> 'b t
      val bind : 'a t -> ('a -> 'b t) -> 'b t
      val test : 'a t -> bool
      val iter : 'a t -> ('a -> unit) -> unit
      val case : 'a t -> (unit -> 'b) -> ('a -> 'b) -> 'b
      val get : 'a t -> (unit -> 'a) -> 'a
      val option : 'a option -> 'a t
      val to_option : 'a t -> 'a option
    end
  type +'a t
  type +'a meth
  type +'a gen_prop
  type 'a readonly_prop = < get : 'a > Js.gen_prop
  type 'a writeonly_prop = < set : 'a -> unit > Js.gen_prop
  type 'a prop = < get : 'a; set : 'a -> unit > Js.gen_prop
  type 'a optdef_prop = < get : 'a Js.optdef; set : 'a -> unit > Js.gen_prop
  type +'a constr
  type (-'a, +'b) meth_callback
  type 'a callback = (unit, 'a) Js.meth_callback
  external wrap_callback : ('a -> 'b) -> ('c, 'a -> 'b) Js.meth_callback
    = "caml_js_wrap_callback"
  external wrap_meth_callback : ('b -> 'a) -> ('b, 'a) Js.meth_callback
    = "caml_js_wrap_meth_callback"
  val _true : bool Js.t
  val _false : bool Js.t
  type match_result_handle
  type string_array
  class type js_string =
    object
      method _match :
        Js.regExp Js.t -> Js.match_result_handle Js.t Js.opt Js.meth
      method charAt : int -> Js.js_string Js.t Js.meth
      method charCodeAt : int -> float Js.meth
      method concat : Js.js_string Js.t -> Js.js_string Js.t Js.meth
      method concat_2 :
        Js.js_string Js.t -> Js.js_string Js.t -> Js.js_string Js.t Js.meth
      method concat_3 :
        Js.js_string Js.t ->
        Js.js_string Js.t -> Js.js_string Js.t -> Js.js_string Js.t Js.meth
      method concat_4 :
        Js.js_string Js.t ->
        Js.js_string Js.t ->
        Js.js_string Js.t -> Js.js_string Js.t -> Js.js_string Js.t Js.meth
      method indexOf : Js.js_string Js.t -> int Js.meth
      method indexOf_from : Js.js_string Js.t -> int -> int Js.meth
      method lastIndexOf : Js.js_string Js.t -> int Js.meth
      method lastIndexOf_from : Js.js_string Js.t -> int -> int Js.meth
      method length : int Js.readonly_prop
      method localeCompare : Js.js_string Js.t -> float Js.meth
      method replace :
        Js.regExp Js.t -> Js.js_string Js.t -> Js.js_string Js.t Js.meth
      method replace_string :
        Js.js_string Js.t -> Js.js_string Js.t -> Js.js_string Js.t Js.meth
      method search : Js.regExp Js.t -> int Js.meth
      method slice : int -> int -> Js.js_string Js.t Js.meth
      method slice_end : int -> Js.js_string Js.t Js.meth
      method split : Js.js_string Js.t -> Js.string_array Js.t Js.meth
      method split_limited :
        Js.js_string Js.t -> int -> Js.string_array Js.t Js.meth
      method split_regExp : Js.regExp Js.t -> Js.string_array Js.t Js.meth
      method split_regExpLimited :
        Js.regExp Js.t -> int -> Js.string_array Js.t Js.meth
      method substring : int -> int -> Js.js_string Js.t Js.meth
      method substring_toEnd : int -> Js.js_string Js.t Js.meth
      method toLocaleLowerCase : Js.js_string Js.t Js.meth
      method toLocaleUpperCase : Js.js_string Js.t Js.meth
      method toLowerCase : Js.js_string Js.t Js.meth
      method toString : Js.js_string Js.t Js.meth
      method toUpperCase : Js.js_string Js.t Js.meth
      method trim : Js.js_string Js.t Js.meth
      method valueOf : Js.js_string Js.t Js.meth
    end
  and regExp =
    object
      method exec :
        Js.js_string Js.t -> Js.match_result_handle Js.t Js.opt Js.meth
      method global : bool Js.t Js.readonly_prop
      method ignoreCase : bool Js.t Js.readonly_prop
      method lastIndex : int Js.prop
      method multiline : bool Js.t Js.readonly_prop
      method source : Js.js_string Js.t Js.readonly_prop
      method test : Js.js_string Js.t -> bool Js.t Js.meth
      method toString : Js.js_string Js.t Js.meth
    end
  class type string_constr =
    object method fromCharCode : int -> Js.js_string Js.t Js.meth end
  val string_constr : Js.string_constr Js.t
  val regExp : (Js.js_string Js.t -> Js.regExp Js.t) Js.constr
  val regExp_withFlags :
    (Js.js_string Js.t -> Js.js_string Js.t -> Js.regExp Js.t) Js.constr
  val regExp_copy : (Js.regExp Js.t -> Js.regExp Js.t) Js.constr
  class type ['a] js_array =
    object
      method concat : 'a Js.js_array Js.t -> 'a Js.js_array Js.t Js.meth
      method every :
        ('a -> int -> 'a Js.js_array Js.t -> bool Js.t) Js.callback ->
        bool Js.t Js.meth
      method filter :
        ('a -> int -> 'a Js.js_array Js.t -> bool Js.t) Js.callback ->
        'a Js.js_array Js.t Js.meth
      method forEach :
        ('a -> int -> 'a Js.js_array Js.t -> unit) Js.callback ->
        unit Js.meth
      method join : Js.js_string Js.t -> Js.js_string Js.t Js.meth
      method length : int Js.prop
      method map :
        ('a -> int -> 'a Js.js_array Js.t -> 'a) Js.callback ->
        'a Js.js_array Js.t Js.meth
      method pop : 'a Js.optdef Js.meth
      method push : 'a -> int Js.meth
      method push_2 : 'a -> 'a -> int Js.meth
      method push_3 : 'a -> 'a -> 'a -> int Js.meth
      method push_4 : 'a -> 'a -> 'a -> 'a -> int Js.meth
      method reduce :
        ('a -> 'a -> int -> 'a Js.js_array Js.t -> 'a) Js.callback ->
        'a Js.meth
      method reduceRight :
        ('a -> 'a -> int -> 'a Js.js_array Js.t -> 'a) Js.callback ->
        'a Js.meth
      method reduceRight_init :
        ('b -> 'a -> int -> 'a Js.js_array Js.t -> 'b) Js.callback ->
        'b -> 'b Js.meth
      method reduce_init :
        ('b -> 'a -> int -> 'a Js.js_array Js.t -> 'b) Js.callback ->
        'b -> 'b Js.meth
      method reverse : 'a Js.js_array Js.t Js.meth
      method shift : 'a Js.optdef Js.meth
      method slice : int -> int -> 'a Js.js_array Js.t Js.meth
      method slice_end : int -> 'a Js.js_array Js.t Js.meth
      method some :
        ('a -> int -> 'a Js.js_array Js.t -> bool Js.t) Js.callback ->
        bool Js.t Js.meth
      method sort :
        ('a -> 'a -> float) Js.callback -> 'a Js.js_array Js.t Js.meth
      method sort_asStrings : 'a Js.js_array Js.t Js.meth
      method splice : int -> int -> 'a Js.js_array Js.t Js.meth
      method splice_1 : int -> int -> 'a -> 'a Js.js_array Js.t Js.meth
      method splice_2 : int -> int -> 'a -> 'a -> 'a Js.js_array Js.t Js.meth
      method splice_3 :
        int -> int -> 'a -> 'a -> 'a -> 'a Js.js_array Js.t Js.meth
      method splice_4 :
        int -> int -> 'a -> 'a -> 'a -> 'a -> 'a Js.js_array Js.t Js.meth
      method toLocaleString : Js.js_string Js.t Js.meth
      method toString : Js.js_string Js.t Js.meth
      method unshift : 'a -> int Js.meth
      method unshift_2 : 'a -> 'a -> int Js.meth
      method unshift_3 : 'a -> 'a -> 'a -> int Js.meth
      method unshift_4 : 'a -> 'a -> 'a -> 'a -> int Js.meth
    end
  val object_keys : 'a Js.t -> Js.js_string Js.t Js.js_array Js.t
  val array_empty : 'a Js.js_array Js.t Js.constr
  val array_length : (int -> 'a Js.js_array Js.t) Js.constr
  val array_get : 'a #Js.js_array Js.t -> int -> 'a Js.optdef
  val array_set : 'a #Js.js_array Js.t -> int -> 'a -> unit
  val array_map : ('a -> 'b) -> 'a #Js.js_array Js.t -> 'b #Js.js_array Js.t
  val array_mapi :
    (int -> 'a -> 'b) -> 'a #Js.js_array Js.t -> 'b #Js.js_array Js.t
  class type match_result =
    object
      method concat : js_string t js_array t -> js_string t js_array t meth
      method every :
        (js_string t -> int -> js_string t js_array t -> bool t) callback ->
        bool t meth
      method filter :
        (js_string t -> int -> js_string t js_array t -> bool t) callback ->
        js_string t js_array t meth
      method forEach :
        (js_string t -> int -> js_string t js_array t -> unit) callback ->
        unit meth
      method index : int Js.readonly_prop
      method input : Js.js_string Js.t Js.readonly_prop
      method join : js_string t -> js_string t meth
      method length : int prop
      method map :
        (js_string t -> int -> js_string t js_array t -> js_string t)
        callback -> js_string t js_array t meth
      method pop : js_string t optdef meth
      method push : js_string t -> int meth
      method push_2 : js_string t -> js_string t -> int meth
      method push_3 : js_string t -> js_string t -> js_string t -> int meth
      method push_4 :
        js_string t -> js_string t -> js_string t -> js_string t -> int meth
      method reduce :
        (js_string t ->
         js_string t -> int -> js_string t js_array t -> js_string t)
        callback -> js_string t meth
      method reduceRight :
        (js_string t ->
         js_string t -> int -> js_string t js_array t -> js_string t)
        callback -> js_string t meth
      method reduceRight_init :
        ('b -> js_string t -> int -> js_string t js_array t -> 'b) callback ->
        'b -> 'b meth
      method reduce_init :
        ('b -> js_string t -> int -> js_string t js_array t -> 'b) callback ->
        'b -> 'b meth
      method reverse : js_string t js_array t meth
      method shift : js_string t optdef meth
      method slice : int -> int -> js_string t js_array t meth
      method slice_end : int -> js_string t js_array t meth
      method some :
        (js_string t -> int -> js_string t js_array t -> bool t) callback ->
        bool t meth
      method sort :
        (js_string t -> js_string t -> float) callback ->
        js_string t js_array t meth
      method sort_asStrings : js_string t js_array t meth
      method splice : int -> int -> js_string t js_array t meth
      method splice_1 :
        int -> int -> js_string t -> js_string t js_array t meth
      method splice_2 :
        int ->
        int -> js_string t -> js_string t -> js_string t js_array t meth
      method splice_3 :
        int ->
        int ->
        js_string t ->
        js_string t -> js_string t -> js_string t js_array t meth
      method splice_4 :
        int ->
        int ->
        js_string t ->
        js_string t ->
        js_string t -> js_string t -> js_string t js_array t meth
      method toLocaleString : js_string t meth
      method toString : js_string t meth
      method unshift : js_string t -> int meth
      method unshift_2 : js_string t -> js_string t -> int meth
      method unshift_3 :
        js_string t -> js_string t -> js_string t -> int meth
      method unshift_4 :
        js_string t -> js_string t -> js_string t -> js_string t -> int meth
    end
  val str_array : Js.string_array Js.t -> Js.js_string Js.t Js.js_array Js.t
  val match_result : Js.match_result_handle Js.t -> Js.match_result Js.t
  class type number =
    object
      method toExponential : Js.js_string Js.t Js.meth
      method toExponential_digits : int -> Js.js_string Js.t Js.meth
      method toFixed : int -> Js.js_string Js.t Js.meth
      method toLocaleString : Js.js_string Js.t Js.meth
      method toPrecision : int -> Js.js_string Js.t Js.meth
      method toString : Js.js_string Js.t Js.meth
      method toString_radix : int -> Js.js_string Js.t Js.meth
    end
  external number_of_float : float -> Js.number Js.t = "caml_js_from_float"
  external float_of_number : Js.number Js.t -> float = "caml_js_to_float"
  class type date =
    object
      method getDate : int Js.meth
      method getDay : int Js.meth
      method getFullYear : int Js.meth
      method getHours : int Js.meth
      method getMilliseconds : int Js.meth
      method getMinutes : int Js.meth
      method getMonth : int Js.meth
      method getSeconds : int Js.meth
      method getTime : float Js.meth
      method getTimezoneOffset : int Js.meth
      method getUTCDate : int Js.meth
      method getUTCDay : int Js.meth
      method getUTCFullYear : int Js.meth
      method getUTCHours : int Js.meth
      method getUTCMilliseconds : int Js.meth
      method getUTCMinutes : int Js.meth
      method getUTCMonth : int Js.meth
      method getUTCSeconds : int Js.meth
      method setDate : int -> float Js.meth
      method setDay : int -> float Js.meth
      method setFullYear : int -> float Js.meth
      method setHours : int -> float Js.meth
      method setMilliseconds : int -> float Js.meth
      method setMinutes : int -> float Js.meth
      method setMonth : int -> float Js.meth
      method setSeconds : int -> float Js.meth
      method setTime : float -> float Js.meth
      method setUTCDate : int -> float Js.meth
      method setUTCDay : int -> float Js.meth
      method setUTCFullYear : int -> float Js.meth
      method setUTCHours : int -> float Js.meth
      method setUTCMilliseconds : int -> float Js.meth
      method setUTCMinutes : int -> float Js.meth
      method setUTCMonth : int -> float Js.meth
      method setUTCSeconds : int -> float Js.meth
      method toDateString : Js.js_string Js.t Js.meth
      method toISOString : Js.js_string Js.t Js.meth
      method toJSON : 'a -> Js.js_string Js.t Js.meth
      method toLocaleDateString : Js.js_string Js.t Js.meth
      method toLocaleString : Js.js_string Js.t Js.meth
      method toLocaleTimeString : Js.js_string Js.t Js.meth
      method toString : Js.js_string Js.t Js.meth
      method toTimeString : Js.js_string Js.t Js.meth
      method toUTCString : Js.js_string Js.t Js.meth
      method valueOf : float Js.meth
    end
  val date_now : Js.date Js.t Js.constr
  val date_fromTimeValue : (float -> Js.date Js.t) Js.constr
  val date_month : (int -> int -> Js.date Js.t) Js.constr
  val date_day : (int -> int -> int -> Js.date Js.t) Js.constr
  val date_hour : (int -> int -> int -> int -> Js.date Js.t) Js.constr
  val date_min : (int -> int -> int -> int -> int -> Js.date Js.t) Js.constr
  val date_sec :
    (int -> int -> int -> int -> int -> int -> Js.date Js.t) Js.constr
  val date_ms :
    (int -> int -> int -> int -> int -> int -> int -> Js.date Js.t) Js.constr
  class type date_constr =
    object
      method _UTC_day : int -> int -> float Js.meth
      method _UTC_hour : int -> int -> int -> int -> float Js.meth
      method _UTC_min : int -> int -> int -> int -> int -> float Js.meth
      method _UTC_month : int -> int -> float Js.meth
      method _UTC_ms :
        int -> int -> int -> int -> int -> int -> int -> float Js.meth
      method _UTC_sec :
        int -> int -> int -> int -> int -> int -> float Js.meth
      method parse : Js.js_string Js.t -> float Js.meth
    end
  val date : Js.date_constr Js.t
  class type math =
    object
      method _E : float Js.readonly_prop
      method _LN10 : float Js.readonly_prop
      method _LN2 : float Js.readonly_prop
      method _LOG10E : float Js.readonly_prop
      method _LOG2E : float Js.readonly_prop
      method _PI : float Js.readonly_prop
      method _SQRT1_2_ : float Js.readonly_prop
      method _SQRT2 : float Js.readonly_prop
      method abs : float -> float Js.meth
      method acos : float -> float Js.meth
      method asin : float -> float Js.meth
      method atan : float -> float Js.meth
      method atan2 : float -> float -> float Js.meth
      method ceil : float -> float Js.meth
      method cos : float -> float Js.meth
      method exp : float -> float Js.meth
      method floor : float -> float Js.meth
      method log : float -> float Js.meth
      method max : float -> float -> float Js.meth
      method max_3 : float -> float -> float -> float Js.meth
      method max_4 : float -> float -> float -> float -> float Js.meth
      method min : float -> float -> float Js.meth
      method min_3 : float -> float -> float -> float Js.meth
      method min_4 : float -> float -> float -> float -> float Js.meth
      method pow : float -> float -> float Js.meth
      method random : float Js.meth
      method round : float -> float Js.meth
      method sin : float -> float Js.meth
      method sqrt : float -> float Js.meth
      method tan : float -> float Js.meth
    end
  val math : Js.math Js.t
  class type error =
    object
      method message : Js.js_string Js.t Js.prop
      method name : Js.js_string Js.t Js.prop
      method stack : Js.js_string Js.t Js.optdef Js.prop
      method toString : Js.js_string Js.t Js.meth
    end
  val error_constr : (Js.js_string Js.t -> Js.error Js.t) Js.constr
  val string_of_error : Js.error Js.t -> string
  val raise_js_error : Js.error Js.t -> 'a
  exception Error of Js.error Js.t
  class type json =
    object
      method parse : Js.js_string Js.t -> 'a Js.meth
      method stringify : 'a -> Js.js_string Js.t Js.meth
    end
  val _JSON : Js.json Js.t
  val decodeURI : Js.js_string Js.t -> Js.js_string Js.t
  val decodeURIComponent : Js.js_string Js.t -> Js.js_string Js.t
  val encodeURI : Js.js_string Js.t -> Js.js_string Js.t
  val encodeURIComponent : Js.js_string Js.t -> Js.js_string Js.t
  val escape : Js.js_string Js.t -> Js.js_string Js.t
  val unescape : Js.js_string Js.t -> Js.js_string Js.t
  val isNaN : 'a -> bool
  val parseInt : Js.js_string Js.t -> int
  val parseFloat : Js.js_string Js.t -> float
  external bool : bool -> bool Js.t = "caml_js_from_bool"
  external to_bool : bool Js.t -> bool = "caml_js_to_bool"
  external string : string -> Js.js_string Js.t = "caml_js_from_string"
  external to_string : Js.js_string Js.t -> string = "caml_js_to_string"
  external array : 'a array -> 'a Js.js_array Js.t = "caml_js_from_array"
  external to_array : 'a Js.js_array Js.t -> 'a array = "caml_js_to_array"
  external bytestring : string -> Js.js_string Js.t = "caml_bytes_of_string"
  external to_bytestring : Js.js_string Js.t -> string
    = "caml_js_to_byte_string"
  val coerce : 'a -> ('a -> 'b Js.Opt.t) -> ('a -> 'b) -> 'b
  val coerce_opt : 'a Js.Opt.t -> ('a -> 'b Js.Opt.t) -> ('a -> 'b) -> 'b
  external typeof : 'a Js.t -> Js.js_string Js.t = "caml_js_typeof"
  external instanceof : 'a Js.t -> 'b Js.constr -> bool
    = "caml_js_instanceof"
  external debugger : unit -> unit = "debugger"
  val export : string -> 'a -> unit
  val export_all : 'a Js.t -> unit
  module Unsafe :
    sig
      type any
      type any_js_array = Js.Unsafe.any
      external inject : 'a -> Js.Unsafe.any = "%identity"
      external coerce : 'a Js.t -> 'b Js.t = "%identity"
      external get : 'a -> 'b -> 'c = "caml_js_get"
      external set : 'a -> 'b -> 'c -> unit = "caml_js_set"
      external delete : 'a -> 'b -> unit = "caml_js_delete"
      external call : 'a -> 'b -> Js.Unsafe.any array -> 'c = "caml_js_call"
      external fun_call : 'a -> Js.Unsafe.any array -> 'b
        = "caml_js_fun_call"
      external meth_call : 'a -> string -> Js.Unsafe.any array -> 'b
        = "caml_js_meth_call"
      external new_obj : 'a -> Js.Unsafe.any array -> 'b = "caml_js_new"
      external new_obj_arr : 'a -> Js.Unsafe.any_js_array -> 'b
        = "caml_ojs_new_arr"
      external obj : (string * Js.Unsafe.any) array -> 'a = "caml_js_object"
      external pure_expr : (unit -> 'a) -> 'a = "caml_js_pure_expr"
      external eval_string : string -> 'a = "caml_js_eval_string"
      external js_expr : string -> 'a = "caml_js_expr"
      external pure_js_expr : string -> 'a = "caml_pure_js_expr"
      val global : < .. > Js.t
      external callback : ('a -> 'b) -> ('c, 'a -> 'b) Js.meth_callback
        = "%identity"
      external callback_with_arguments :
        (Js.Unsafe.any_js_array -> 'b) ->
        ('c, Js.Unsafe.any_js_array -> 'b) Js.meth_callback
        = "caml_js_wrap_callback_arguments"
      external callback_with_arity :
        int -> ('a -> 'b) -> ('c, 'a -> 'b) Js.meth_callback
        = "caml_js_wrap_callback_strict"
      external meth_callback : ('b -> 'a) -> ('b, 'a) Js.meth_callback
        = "caml_js_wrap_meth_callback_unsafe"
      external meth_callback_with_arguments :
        ('b -> Js.Unsafe.any_js_array -> 'a) ->
        ('b, Js.Unsafe.any_js_array -> 'a) Js.meth_callback
        = "caml_js_wrap_meth_callback_arguments"
      external meth_callback_with_arity :
        int -> ('b -> 'a) -> ('b, 'a) Js.meth_callback
        = "caml_js_wrap_meth_callback_strict"
      external variable : string -> 'a = "caml_js_var"
    end
  external float : float -> float = "%identity"
  external to_float : float -> float = "%identity"
  type float_prop = float Js.prop
end >>