// Generated by js_of_ocaml 2.8.3
(function(joo_global_object)
   {"use strict";
    function raw_array_sub(a,i,l)
     {var b=new Array(l);for(var j=0;j < l;j++)b[j] = a[i + j];return b}
    function caml_subarray_to_string(a,i,len)
     {var f=String.fromCharCode;
      if(i == 0 && len <= 4096 && len == a.length)return f.apply(null,a);
      var s="";
      for(;0 < len;i += 1024,len -= 1024)
       s += f.apply(null,raw_array_sub(a,i,Math.min(len,1024)));
      return s}
    function caml_convert_string_to_array(s)
     {if(joo_global_object.Uint8Array)
       var a=new (joo_global_object.Uint8Array)(s.l);
      else
       var a=new Array(s.l);
      var b=s.c,l=b.length,i=0;
      for(;i < l;i++)a[i] = b.charCodeAt(i);
      for(l = s.l;i < l;i++)a[i] = 0;
      s.c = a;
      s.t = 4;
      return a}
    function caml_blit_string(s1,i1,s2,i2,len)
     {if(len == 0)return 0;
      if(i2 == 0 && (len >= s2.l || s2.t == 2 && len >= s2.c.length))
       {s2.c
        =
        s1.t == 4
         ?caml_subarray_to_string(s1.c,i1,len)
         :i1 == 0 && s1.c.length == len?s1.c:s1.c.substr(i1,len);
        s2.t = s2.c.length == s2.l?0:2}
      else
       if(s2.t == 2 && i2 == s2.c.length)
        {s2.c
         +=
         s1.t == 4
          ?caml_subarray_to_string(s1.c,i1,len)
          :i1 == 0 && s1.c.length == len?s1.c:s1.c.substr(i1,len);
         s2.t = s2.c.length == s2.l?0:2}
       else
        {if(s2.t != 4)caml_convert_string_to_array(s2);
         var c1=s1.c,c2=s2.c;
         if(s1.t == 4)
          if(i2 <= i1)
           for(var i=0;i < len;i++)c2[i2 + i] = c1[i1 + i];
          else
           for(var i=len - 1;i >= 0;i--)c2[i2 + i] = c1[i1 + i];
         else
          {var l=Math.min(len,c1.length - i1);
           for(var i=0;i < l;i++)c2[i2 + i] = c1.charCodeAt(i1 + i);
           for(;i < len;i++)c2[i2 + i] = 0}}
      return 0}
    function raw_array_append_one(a,x)
     {var l=a.length,b=new Array(l + 1),i=0;
      for(;i < l;i++)b[i] = a[i];
      b[i] = x;
      return b}
    function caml_call_gen(f,args)
     {if(f.fun)return caml_call_gen(f.fun,args);
      var n=f.length,argsLen=args.length,d=n - argsLen;
      if(d == 0)
       return f.apply(null,args);
      else
       if(d < 0)
        return caml_call_gen
                (f.apply(null,raw_array_sub(args,0,n)),
                 raw_array_sub(args,n,argsLen - n));
       else
        return function(x)
         {return caml_call_gen(f,raw_array_append_one(args,x))}}
    function caml_raise_with_arg(tag,arg){throw [0,tag,arg]}
    function caml_str_repeat(n,s)
     {if(s.repeat)return s.repeat(n);
      var r="",l=0;
      if(n == 0)return r;
      for(;;)
       {if(n & 1)r += s;
        n >>= 1;
        if(n == 0)return r;
        s += s;
        l++;
        if(l == 9)s.slice(0,1)}}
    function caml_convert_string_to_bytes(s)
     {if(s.t == 2)
       s.c += caml_str_repeat(s.l - s.c.length,"\0");
      else
       s.c = caml_subarray_to_string(s.c,0,s.c.length);
      s.t = 0}
    function caml_is_ascii(s)
     {if(s.length < 24)
       {for(var i=0;i < s.length;i++)if(s.charCodeAt(i) > 127)return false;
        return true}
      else
       return !/[^\x00-\x7f]/.test(s)}
    function caml_utf16_of_utf8(s)
     {for(var b="",t="",c,c1,c2,v,i=0,l=s.length;i < l;i++)
       {c1 = s.charCodeAt(i);
        if(c1 < 128)
         {for(var j=i + 1;j < l && (c1 = s.charCodeAt(j)) < 128;j++);
          if(j - i > 512)
           {t.substr(0,1);b += t;t = "";b += s.slice(i,j)}
          else
           t += s.slice(i,j);
          if(j == l)break;
          i = j}
        v = 1;
        if(++i < l && ((c2 = s.charCodeAt(i)) & -64) == 128)
         {c = c2 + (c1 << 6);
          if(c1 < 224)
           {v = c - 12416;if(v < 128)v = 1}
          else
           {v = 2;
            if(++i < l && ((c2 = s.charCodeAt(i)) & -64) == 128)
             {c = c2 + (c << 6);
              if(c1 < 240)
               {v = c - 925824;if(v < 2048 || v >= 55295 && v < 57344)v = 2}
              else
               {v = 3;
                if
                 (++i
                  <
                  l
                  &&
                  ((c2 = s.charCodeAt(i)) & -64)
                  ==
                  128
                  &&
                  c1
                  <
                  245)
                 {v = c2 - 63447168 + (c << 6);
                  if(v < 65536 || v > 1114111)v = 3}}}}}
        if(v < 4)
         {i -= v;t += "\ufffd"}
        else
         if(v > 65535)
          t += String.fromCharCode(55232 + (v >> 10),56320 + (v & 1023));
         else
          t += String.fromCharCode(v);
        if(t.length > 1024){t.substr(0,1);b += t;t = ""}}
      return b + t}
    function caml_to_js_string(s)
     {switch(s.t)
       {case 9:return s.c;
        default:caml_convert_string_to_bytes(s);case 0:
         if(caml_is_ascii(s.c)){s.t = 9;return s.c}s.t = 8;
        case 8:return caml_utf16_of_utf8(s.c)
        }}
    function MlString(tag,contents,length)
     {this.t = tag;this.c = contents;this.l = length}
    MlString.prototype.toString = function(){return caml_to_js_string(this)};
    function caml_new_string(s){return new MlString(0,s,s.length)}
    function caml_raise_with_string(tag,msg)
     {caml_raise_with_arg(tag,caml_new_string(msg))}
    var caml_global_data=[0];
    function caml_invalid_argument(msg)
     {caml_raise_with_string(caml_global_data.Invalid_argument,msg)}
    function caml_array_bound_error()
     {caml_invalid_argument("index out of bounds")}
    function caml_check_bound(array,index)
     {if(index >>> 0 >= array.length - 1)caml_array_bound_error();
      return array}
    function caml_classify_float(x)
     {if(isFinite(x))
       {if(Math.abs(x) >= 2.22507385850720138e-308)return 0;
        if(x != 0)return 1;
        return 2}
      return isNaN(x)?4:3}
    function caml_int64_compare(x,y)
     {var x3=x[3] << 16,y3=y[3] << 16;
      if(x3 > y3)return 1;
      if(x3 < y3)return -1;
      if(x[2] > y[2])return 1;
      if(x[2] < y[2])return -1;
      if(x[1] > y[1])return 1;
      if(x[1] < y[1])return -1;
      return 0}
    function caml_int_compare(a,b)
     {if(a < b)return -1;if(a == b)return 0;return 1}
    function caml_string_compare(s1,s2)
     {s1.t & 6 && caml_convert_string_to_bytes(s1);
      s2.t & 6 && caml_convert_string_to_bytes(s2);
      return s1.c < s2.c?-1:s1.c > s2.c?1:0}
    function caml_compare_val(a,b,total)
     {var stack=[];
      for(;;)
       {if(!(total && a === b))
         if(a instanceof MlString)
          if(b instanceof MlString)
           {if(a !== b){var x=caml_string_compare(a,b);if(x != 0)return x}}
          else
           return 1;
         else
          if(a instanceof Array && a[0] === (a[0] | 0))
           {var ta=a[0];
            if(ta === 254)ta = 0;
            if(ta === 250)
             {a = a[1];continue}
            else
             if(b instanceof Array && b[0] === (b[0] | 0))
              {var tb=b[0];
               if(tb === 254)tb = 0;
               if(tb === 250)
                {b = b[1];continue}
               else
                if(ta != tb)
                 return ta < tb?-1:1;
                else
                 switch(ta)
                  {case 248:
                    var x=caml_int_compare(a[2],b[2]);if(x != 0)return x;break;
                   case 251:caml_invalid_argument("equal: abstract value");
                   case 255:
                    var x=caml_int64_compare(a,b);if(x != 0)return x;break;
                   default:
                    if(a.length != b.length)return a.length < b.length?-1:1;
                    if(a.length > 1)stack.push(a,b,1)}}
             else
              return 1}
          else
           if
            (b instanceof MlString
             ||
             b instanceof Array
             &&
             b[0]
             ===
             (b[0] | 0))
            return -1;
           else
            if(typeof a != "number" && a && a.compare)
             return a.compare(b,total);
            else
             if(typeof a == "function")
              caml_invalid_argument("equal: functional value");
             else
              {if(a < b)return -1;
               if(a > b)return 1;
               if(a != b)
                {if(!total)return NaN;if(a == a)return 1;if(b == b)return -1}}
        if(stack.length == 0)return 0;
        var i=stack.pop();
        b = stack.pop();
        a = stack.pop();
        if(i + 1 < a.length)stack.push(a,b,i + 1);
        a = a[i];
        b = b[i]}}
    function caml_compare(a,b){return caml_compare_val(a,b,true)}
    function caml_failwith(msg)
     {caml_raise_with_string(caml_global_data.Failure,msg)}
    function caml_convert_raw_backtrace_slot()
     {caml_failwith("caml_convert_raw_backtrace_slot")}
    function caml_create_string(len)
     {if(len < 0)caml_invalid_argument("String.create");
      return new MlString(len?2:9,"",len)}
    function caml_fill_string(s,i,l,c)
     {if(l > 0)
       if(i == 0 && (l >= s.l || s.t == 2 && l >= s.c.length))
        if(c == 0)
         {s.c = "";s.t = 2}
        else
         {s.c = caml_str_repeat(l,String.fromCharCode(c));s.t = l == s.l?0:2}
       else
        {if(s.t != 4)caml_convert_string_to_array(s);
         for(l += i;i < l;i++)s.c[i] = c}
      return 0}
    function caml_bytes_of_string(s)
     {if((s.t & 6) != 0)caml_convert_string_to_bytes(s);return s.c}
    function caml_parse_format(fmt)
     {fmt = caml_bytes_of_string(fmt);
      var len=fmt.length;
      if(len > 31)caml_invalid_argument("format_int: format too long");
      var
       f=
        {justify:"+",
         signstyle:"-",
         filler:" ",
         alternate:false,
         base:0,
         signedconv:false,
         width:0,
         uppercase:false,
         sign:1,
         prec:-1,
         conv:"f"};
      for(var i=0;i < len;i++)
       {var c=fmt.charAt(i);
        switch(c)
         {case "-":f.justify = "-";break;
          case "+":
          case " ":f.signstyle = c;break;
          case "0":f.filler = "0";break;
          case "#":f.alternate = true;break;
          case "1":
          case "2":
          case "3":
          case "4":
          case "5":
          case "6":
          case "7":
          case "8":
          case "9":
           f.width = 0;
           while(c = fmt.charCodeAt(i) - 48,c >= 0 && c <= 9)
            {f.width = f.width * 10 + c;i++}
           i--;
           break;
          case ".":
           f.prec = 0;
           i++;
           while(c = fmt.charCodeAt(i) - 48,c >= 0 && c <= 9)
            {f.prec = f.prec * 10 + c;i++}
           i--;
          case "d":
          case "i":f.signedconv = true;
          case "u":f.base = 10;break;
          case "x":f.base = 16;break;
          case "X":f.base = 16;f.uppercase = true;break;
          case "o":f.base = 8;break;
          case "e":
          case "f":
          case "g":f.signedconv = true;f.conv = c;break;
          case "E":
          case "F":
          case "G":
           f.signedconv = true;
           f.uppercase = true;
           f.conv = c.toLowerCase();
           break
          }}
      return f}
    function caml_finish_formatting(f,rawbuffer)
     {if(f.uppercase)rawbuffer = rawbuffer.toUpperCase();
      var len=rawbuffer.length;
      if(f.signedconv && (f.sign < 0 || f.signstyle != "-"))len++;
      if(f.alternate){if(f.base == 8)len += 1;if(f.base == 16)len += 2}
      var buffer="";
      if(f.justify == "+" && f.filler == " ")
       for(var i=len;i < f.width;i++)buffer += " ";
      if(f.signedconv)
       if(f.sign < 0)
        buffer += "-";
       else
        if(f.signstyle != "-")buffer += f.signstyle;
      if(f.alternate && f.base == 8)buffer += "0";
      if(f.alternate && f.base == 16)buffer += "0x";
      if(f.justify == "+" && f.filler == "0")
       for(var i=len;i < f.width;i++)buffer += "0";
      buffer += rawbuffer;
      if(f.justify == "-")for(var i=len;i < f.width;i++)buffer += " ";
      return caml_new_string(buffer)}
    function caml_format_float(fmt,x)
     {var s,f=caml_parse_format(fmt),prec=f.prec < 0?6:f.prec;
      if(x < 0 || x == 0 && 1 / x == -Infinity){f.sign = -1;x = -x}
      if(isNaN(x))
       {s = "nan";f.filler = " "}
      else
       if(!isFinite(x))
        {s = "inf";f.filler = " "}
       else
        switch(f.conv)
         {case "e":
           var s=x.toExponential(prec),i=s.length;
           if(s.charAt(i - 3) == "e")
            s = s.slice(0,i - 1) + "0" + s.slice(i - 1);
           break;
          case "f":s = x.toFixed(prec);break;
          case "g":
           prec = prec?prec:1;
           s = x.toExponential(prec - 1);
           var j=s.indexOf("e"),exp=+s.slice(j + 1);
           if(exp < -4 || x >= 1e+21 || x.toFixed(0).length > prec)
            {var i=j - 1;
             while(s.charAt(i) == "0")i--;
             if(s.charAt(i) == ".")i--;
             s = s.slice(0,i + 1) + s.slice(j);
             i = s.length;
             if(s.charAt(i - 3) == "e")
              s = s.slice(0,i - 1) + "0" + s.slice(i - 1);
             break}
           else
            {var p=prec;
             if(exp < 0)
              {p -= exp + 1;s = x.toFixed(p)}
             else
              while(s = x.toFixed(p),s.length > prec + 1)p--;
             if(p)
              {var i=s.length - 1;
               while(s.charAt(i) == "0")i--;
               if(s.charAt(i) == ".")i--;
               s = s.slice(0,i + 1)}}
           break
          }
      return caml_finish_formatting(f,s)}
    function caml_format_int(fmt,i)
     {if(caml_bytes_of_string(fmt) == "%d")return caml_new_string("" + i);
      var f=caml_parse_format(fmt);
      if(i < 0)if(f.signedconv){f.sign = -1;i = -i}else i >>>= 0;
      var s=i.toString(f.base);
      if(f.prec >= 0)
       {f.filler = " ";
        var n=f.prec - s.length;
        if(n > 0)s = caml_str_repeat(n,"0") + s}
      return caml_finish_formatting(f,s)}
    function caml_get_exception_raw_backtrace(){return [0]}
    function caml_greaterequal(x,y)
     {return +(caml_compare_val(x,y,false) >= 0)}
    function caml_int64_is_zero(x){return (x[3] | x[2] | x[1]) == 0}
    function caml_int64_of_int32(x)
     {return [255,x & 16777215,x >> 24 & 16777215,x >> 31 & 65535]}
    function caml_obj_dup(x)
     {var l=x.length,a=new Array(l);
      for(var i=0;i < l;i++)a[i] = x[i];
      return a}
    function caml_int64_sub(x,y)
     {var
       z1=x[1] - y[1],
       z2=x[2] - y[2] + (z1 >> 24),
       z3=x[3] - y[3] + (z2 >> 24);
      return [255,z1 & 16777215,z2 & 16777215,z3 & 65535]}
    function caml_int64_ucompare(x,y)
     {if(x[3] > y[3])return 1;
      if(x[3] < y[3])return -1;
      if(x[2] > y[2])return 1;
      if(x[2] < y[2])return -1;
      if(x[1] > y[1])return 1;
      if(x[1] < y[1])return -1;
      return 0}
    function caml_int64_lsl1(x)
     {x[3] = x[3] << 1 | x[2] >> 23;
      x[2] = (x[2] << 1 | x[1] >> 23) & 16777215;
      x[1] = x[1] << 1 & 16777215}
    function caml_int64_lsr1(x)
     {x[1] = (x[1] >>> 1 | x[2] << 23) & 16777215;
      x[2] = (x[2] >>> 1 | x[3] << 23) & 16777215;
      x[3] = x[3] >>> 1}
    function caml_int64_udivmod(x,y)
     {var
       offset=0,
       modulus=caml_obj_dup(x),
       divisor=caml_obj_dup(y),
       quotient=[255,0,0,0];
      while(caml_int64_ucompare(modulus,divisor) > 0)
       {offset++;caml_int64_lsl1(divisor)}
      while(offset >= 0)
       {offset--;
        caml_int64_lsl1(quotient);
        if(caml_int64_ucompare(modulus,divisor) >= 0)
         {quotient[1]++;modulus = caml_int64_sub(modulus,divisor)}
        caml_int64_lsr1(divisor)}
      return [0,quotient,modulus]}
    function caml_int64_to_int32(x){return x[1] | x[2] << 24}
    function caml_int64_is_negative(x){return x[3] << 16 < 0}
    function caml_int64_neg(x)
     {var y1=-x[1],y2=-x[2] + (y1 >> 24),y3=-x[3] + (y2 >> 24);
      return [255,y1 & 16777215,y2 & 16777215,y3 & 65535]}
    function caml_int64_format(fmt,x)
     {var f=caml_parse_format(fmt);
      if(f.signedconv && caml_int64_is_negative(x))
       {f.sign = -1;x = caml_int64_neg(x)}
      var
       buffer="",
       wbase=caml_int64_of_int32(f.base),
       cvtbl="0123456789abcdef";
      do
       {var p=caml_int64_udivmod(x,wbase);
        x = p[1];
        buffer = cvtbl.charAt(caml_int64_to_int32(p[2])) + buffer}
      while
       (!caml_int64_is_zero(x));
      if(f.prec >= 0)
       {f.filler = " ";
        var n=f.prec - buffer.length;
        if(n > 0)buffer = caml_str_repeat(n,"0") + buffer}
      return caml_finish_formatting(f,buffer)}
    function caml_is_printable(c){return +(c > 31 && c < 127)}
    function caml_js_from_array(a){return raw_array_sub(a,1,a.length - 1)}
    function caml_js_call(f,o,args)
     {return f.apply(o,caml_js_from_array(args))}
    function caml_js_get_console()
     {var
       c=joo_global_object.console?joo_global_object.console:{},
       m=
        ["log",
         "debug",
         "info",
         "warn",
         "error",
         "assert",
         "dir",
         "dirxml",
         "trace",
         "group",
         "groupCollapsed",
         "groupEnd",
         "time",
         "timeEnd"];
      function f(){}
      for(var i=0;i < m.length;i++)if(!c[m[i]])c[m[i]] = f;
      return c}
    var caml_js_regexps={amp:/&/g,lt:/</g,quot:/\"/g,all:/[&<\"]/};
    function caml_js_html_escape(s)
     {if(!caml_js_regexps.all.test(s))return s;
      return s.replace(caml_js_regexps.amp,"&amp;").replace
               (caml_js_regexps.lt,"&lt;").replace
              (caml_js_regexps.quot,"&quot;")}
    function caml_utf8_of_utf16(s)
     {for(var b="",t=b,c,d,i=0,l=s.length;i < l;i++)
       {c = s.charCodeAt(i);
        if(c < 128)
         {for(var j=i + 1;j < l && (c = s.charCodeAt(j)) < 128;j++);
          if(j - i > 512)
           {t.substr(0,1);b += t;t = "";b += s.slice(i,j)}
          else
           t += s.slice(i,j);
          if(j == l)break;
          i = j}
        if(c < 2048)
         {t += String.fromCharCode(192 | c >> 6);
          t += String.fromCharCode(128 | c & 63)}
        else
         if(c < 55296 || c >= 57343)
          t
          +=
          String.fromCharCode(224 | c >> 12,128 | c >> 6 & 63,128 | c & 63);
         else
          if
           (c
            >=
            56319
            ||
            i
            +
            1
            ==
            l
            ||
            (d = s.charCodeAt(i + 1))
            <
            56320
            ||
            d
            >
            57343)
           t += "\xef\xbf\xbd";
          else
           {i++;
            c = (c << 10) + d - 56613888;
            t
            +=
            String.fromCharCode
             (240 | c >> 18,128 | c >> 12 & 63,128 | c >> 6 & 63,128 | c & 63)}
        if(t.length > 1024){t.substr(0,1);b += t;t = ""}}
      return b + t}
    function caml_js_to_string(s)
     {var tag=9;
      if(!caml_is_ascii(s))tag = 8,s = caml_utf8_of_utf16(s);
      return new MlString(tag,s,s.length)}
    function raw_array_copy(a)
     {var l=a.length,b=new Array(l);
      for(var i=0;i < l;i++)b[i] = a[i];
      return b}
    function caml_js_wrap_callback(f)
     {return function()
       {return arguments.length > 0
                ?caml_call_gen(f,raw_array_copy(arguments))
                :caml_call_gen(f,[undefined])}}
    function caml_lessequal(x,y){return +(caml_compare_val(x,y,false) <= 0)}
    function caml_lessthan(x,y){return +(caml_compare_val(x,y,false) < 0)}
    function caml_make_vect(len,init)
     {var len=len + 1 | 0,b=new Array(len);
      b[0] = 0;
      for(var i=1;i < len;i++)b[i] = init;
      return b}
    function caml_raise_sys_error(msg)
     {caml_raise_with_string(caml_global_data.Sys_error,msg)}
    function caml_ml_flush(oc)
     {if(!oc.opened)caml_raise_sys_error("Cannot flush a closed channel");
      if(oc.buffer == "")return 0;
      if(oc.output)
       switch(oc.output.length)
        {case 2:oc.output(oc,oc.buffer);break;default:oc.output(oc.buffer)}
      oc.buffer = "";
      return 0}
    var file_inode=0;
    function unix_gettimeofday(){return new Date().getTime() / 1e3}
    function unix_time(){return Math.floor(unix_gettimeofday())}
    function MlFile(content)
     {this.data = content;
      this.inode = file_inode++;
      var now=unix_time();
      this.atime = now;
      this.mtime = now;
      this.ctime = now}
    MlFile.prototype
    =
    {truncate:function(){this.data = caml_create_string(0);this.modified()},
     modified:
     function(){var now=unix_time();this.atime = now;this.mtime = now}};
    function caml_ml_string_length(s){return s.l}
    function caml_raise_no_such_file(name)
     {name = name instanceof MlString?name.toString():name;
      caml_raise_sys_error(name + ": No such file or directory")}
    var caml_current_dir="/";
    function caml_make_path(name)
     {name = name instanceof MlString?name.toString():name;
      if(name.charCodeAt(0) != 47)name = caml_current_dir + name;
      var comp=name.split("/"),ncomp=[];
      for(var i=0;i < comp.length;i++)
       switch(comp[i])
        {case "..":if(ncomp.length > 1)ncomp.pop();break;
         case ".":break;
         case "":if(ncomp.length == 0)ncomp.push("");break;
         default:ncomp.push(comp[i]);break}
      ncomp.orig = name;
      return ncomp}
    function MlDir()
     {this.content = {};
      this.inode = file_inode++;
      var now=unix_time();
      this.atime = now;
      this.mtime = now;
      this.ctime = now}
    MlDir.prototype
    =
    {exists:function(name){return this.content[name]?1:0},
     mk:function(name,c){this.content[name] = c},
     get:function(name){return this.content[name]},
     list:function(){var a=[];for(var n in this.content)a.push(n);return a},
     remove:function(name){delete this.content[name]}};
    var caml_root_dir=new MlDir();
    caml_root_dir.mk("",new MlDir());
    function caml_fs_content(path)
     {var dir=caml_root_dir;
      for(var i=0;i < path.length;i++)
       {if(!(dir.exists && dir.exists(path[i])))
         caml_raise_no_such_file(path.orig);
        dir = dir.get(path[i])}
      return dir}
    function caml_sys_is_directory(name)
     {var path=caml_make_path(name),dir=caml_fs_content(path);
      return dir instanceof MlDir?1:0}
    function caml_string_of_array(a){return new MlString(4,a,a.length)}
    function caml_array_of_string(s)
     {if(s.t != 4)caml_convert_string_to_array(s);return s.c}
    function caml_fs_register(name,content)
     {var path=caml_make_path(name),dir=caml_root_dir;
      for(var i=0;i < path.length - 1;i++)
       {var d=path[i];
        if(!dir.exists(d))dir.mk(d,new MlDir());
        dir = dir.get(d);
        if(!(dir instanceof MlDir))
         caml_raise_sys_error(path.orig + " : file already exists")}
      var d=path[path.length - 1];
      if(dir.exists(d))
       caml_raise_sys_error(path.orig + " : file already exists");
      if(content instanceof MlDir)
       dir.mk(d,content);
      else
       if(content instanceof MlFile)
        dir.mk(d,content);
       else
        if(content instanceof MlString)
         dir.mk(d,new MlFile(content));
        else
         if(content instanceof Array)
          dir.mk(d,new MlFile(caml_string_of_array(content)));
         else
          if(content.toString)
           {var mlstring=caml_new_string(content.toString());
            dir.mk(d,new MlFile(mlstring))}
          else
           caml_invalid_argument("caml_fs_register");
      return 0}
    function caml_sys_file_exists(name)
     {var dir=caml_root_dir,path=caml_make_path(name),auto_load,pos;
      for(var i=0;i < path.length;i++)
       {if(dir.auto){auto_load = dir.auto;pos = i}
        if(!(dir.exists && dir.exists(path[i])))
         return auto_load?auto_load(path,pos):0;
        dir = dir.get(path[i])}
      return 1}
    function caml_sys_open_internal(idx,file,flags)
     {if(caml_global_data.fds === undefined)
       caml_global_data.fds = new Array();
      flags = flags?flags:{};
      var info={};
      info.file = file;
      info.offset = flags.append?caml_ml_string_length(file.data):0;
      info.flags = flags;
      caml_global_data.fds[idx] = info;
      caml_global_data.fd_last_idx = idx;
      return idx}
    function caml_sys_open(name,flags,_perms)
     {var f={};
      while(flags)
       {switch(flags[1])
         {case 0:f.rdonly = 1;break;
          case 1:f.wronly = 1;break;
          case 2:f.append = 1;break;
          case 3:f.create = 1;break;
          case 4:f.truncate = 1;break;
          case 5:f.excl = 1;break;
          case 6:f.binary = 1;break;
          case 7:f.text = 1;break;
          case 8:f.nonblock = 1;break
          }
        flags = flags[2]}
      var name2=name.toString(),path=caml_make_path(name);
      if(f.rdonly && f.wronly)
       caml_raise_sys_error
        (name2 + " : flags Open_rdonly and Open_wronly are not compatible");
      if(f.text && f.binary)
       caml_raise_sys_error
        (name2 + " : flags Open_text and Open_binary are not compatible");
      if(caml_sys_file_exists(name))
       {if(caml_sys_is_directory(name))
         caml_raise_sys_error(name2 + " : is a directory");
        if(f.create && f.excl)
         caml_raise_sys_error(name2 + " : file already exists");
        var
         idx=caml_global_data.fd_last_idx?caml_global_data.fd_last_idx:0,
         file=caml_fs_content(path);
        if(f.truncate)file.truncate();
        return caml_sys_open_internal(idx + 1,file,f)}
      else
       if(f.create)
        {var idx=caml_global_data.fd_last_idx?caml_global_data.fd_last_idx:0;
         caml_fs_register(name,caml_create_string(0));
         var file=caml_fs_content(path);
         return caml_sys_open_internal(idx + 1,file,f)}
       else
        caml_raise_no_such_file(name)}
    caml_sys_open_internal(0,new MlFile(caml_create_string(0)));
    caml_sys_open_internal(1,new MlFile(caml_create_string(0)));
    caml_sys_open_internal(2,new MlFile(caml_create_string(0)));
    function caml_ml_open_descriptor_in(fd)
     {var data=caml_global_data.fds[fd];
      if(data.flags.wronly)caml_raise_sys_error("fd " + fd + " is writeonly");
      return {file:data.file,offset:data.offset,fd:fd,opened:true,refill:null}}
    function js_print_stderr(s)
     {var g=joo_global_object;
      if(g.process && g.process.stdout && g.process.stdout.write)
       g.process.stderr.write(s);
      else
       {if(s.charCodeAt(s.length - 1) == 10)s = s.substr(0,s.length - 1);
        var v=g.console;
        v && v.error && v.error(s)}}
    function js_print_stdout(s)
     {var g=joo_global_object;
      if(g.process && g.process.stdout && g.process.stdout.write)
       g.process.stdout.write(s);
      else
       {if(s.charCodeAt(s.length - 1) == 10)s = s.substr(0,s.length - 1);
        var v=g.console;
        v && v.log && v.log(s)}}
    var caml_ml_out_channels=new Array();
    function caml_std_output(chan,s)
     {var
       str=caml_new_string(s),
       slen=caml_ml_string_length(str),
       clen=caml_ml_string_length(chan.file.data),
       offset=chan.offset;
      if(offset + slen >= clen)
       {var new_str=caml_create_string(offset + slen);
        caml_blit_string(chan.file.data,0,new_str,0,clen);
        caml_blit_string(str,0,new_str,offset,slen);
        chan.file.data = new_str}
      chan.offset += slen;
      chan.file.modified();
      return 0}
    function caml_ml_open_descriptor_out(fd)
     {var output;
      switch(fd)
       {case 1:output = js_print_stdout;break;
        case 2:output = js_print_stderr;break;
        default:output = caml_std_output}
      var data=caml_global_data.fds[fd];
      if(data.flags.rdonly)caml_raise_sys_error("fd " + fd + " is readonly");
      var
       channel=
        {file:data.file,
         offset:data.offset,
         fd:fd,
         opened:true,
         buffer:"",
         output:output};
      caml_ml_out_channels[channel.fd] = channel;
      return channel}
    function caml_ml_out_channels_list()
     {var l=0;
      for(var c=0;c < caml_ml_out_channels.length;c++)
       if(caml_ml_out_channels[c] && caml_ml_out_channels[c].opened)
        l = [0,caml_ml_out_channels[c],l];
      return l}
    function caml_ml_output(oc,buffer,offset,len)
     {if(!oc.opened)caml_raise_sys_error("Cannot output to a closed channel");
      var string;
      if(offset == 0 && caml_ml_string_length(buffer) == len)
       string = buffer;
      else
       {string = caml_create_string(len);
        caml_blit_string(buffer,offset,string,0,len)}
      var jsstring=string.toString(),id=jsstring.lastIndexOf("\n");
      if(id < 0)
       oc.buffer += jsstring;
      else
       {oc.buffer += jsstring.substr(0,id + 1);
        caml_ml_flush(oc);
        oc.buffer += jsstring.substr(id + 1)}
      return 0}
    function caml_ml_output_char(oc,c)
     {var s=caml_new_string(String.fromCharCode(c));
      caml_ml_output(oc,s,0,1);
      return 0}
    function caml_raise_constant(tag){throw tag}
    function caml_raise_zero_divide()
     {caml_raise_constant(caml_global_data.Division_by_zero)}
    function caml_mod(x,y){if(y == 0)caml_raise_zero_divide();return x % y}
    if(!Math.imul)
     Math.imul
     =
     function(x,y){y |= 0;return ((x >> 16) * y << 16) + (x & 65535) * y | 0};
    var caml_mul=Math.imul;
    function caml_notequal(x,y){return +(caml_compare_val(x,y,false) != 0)}
    function caml_obj_is_block(x){return +(x instanceof Array)}
    function caml_obj_tag(x)
     {return x instanceof Array?x[0]:x instanceof MlString?252:1e3}
    function caml_register_global(n,v,name_opt)
     {caml_global_data[n + 1] = v;if(name_opt)caml_global_data[name_opt] = v}
    var caml_named_values={};
    function caml_register_named_value(nm,v)
     {caml_named_values[caml_bytes_of_string(nm)] = v;return 0}
    var caml_oo_last_id=0;
    function caml_set_oo_id(b){b[2] = caml_oo_last_id++;return b}
    function caml_string_bound_error()
     {caml_invalid_argument("index out of bounds")}
    function caml_string_unsafe_get(s,i)
     {switch(s.t & 6)
       {default:if(i >= s.c.length)return 0;case 0:return s.c.charCodeAt(i);
        case 4:return s.c[i]
        }}
    function caml_string_get(s,i)
     {if(i >>> 0 >= s.l)caml_string_bound_error();
      return caml_string_unsafe_get(s,i)}
    function caml_string_unsafe_set(s,i,c)
     {c &= 255;
      if(s.t != 4)
       {if(i == s.c.length)
         {s.c += String.fromCharCode(c);if(i + 1 == s.l)s.t = 0;return 0}
        caml_convert_string_to_array(s)}
      s.c[i] = c;
      return 0}
    function caml_string_set(s,i,c)
     {if(i >>> 0 >= s.l)caml_string_bound_error();
      return caml_string_unsafe_set(s,i,c)}
    function caml_sys_exit(code)
     {var g=joo_global_object;
      if(g.quit)g.quit(code);
      if(g.process && g.process.exit)g.process.exit(code);
      caml_invalid_argument("Function 'exit' not implemented")}
    function caml_raise_not_found()
     {caml_raise_constant(caml_global_data.Not_found)}
    function caml_sys_getenv(name)
     {var g=joo_global_object,n=name.toString();
      if(g.process && g.process.env && g.process.env[n] != undefined)
       return caml_js_to_string(g.process.env[n]);
      caml_raise_not_found()}
    function caml_trampoline(res)
     {var c=1;
      while(res && res.joo_tramp)
       {res = res.joo_tramp.apply(null,res.joo_args);c++}
      return res}
    function caml_trampoline_return(f,args)
     {return {joo_tramp:f,joo_args:args}}
    function caml_update_dummy(x,y)
     {if(typeof y === "function"){x.fun = y;return 0}
      if(y.fun){x.fun = y.fun;return 0}
      var i=y.length;
      while(i--)x[i] = y[i];
      return 0}
    function caml_return_exn_constant(tag){return tag}
    function caml_named_value(nm){return caml_named_values[nm]}
    function caml_wrap_exception(e)
     {if(e instanceof Array)return e;
      if
       (joo_global_object.RangeError
        &&
        e instanceof joo_global_object.RangeError
        &&
        e.message
        &&
        e.message.match(/maximum call stack/i))
       return caml_return_exn_constant(caml_global_data.Stack_overflow);
      if
       (joo_global_object.InternalError
        &&
        e instanceof joo_global_object.InternalError
        &&
        e.message
        &&
        e.message.match(/too much recursion/i))
       return caml_return_exn_constant(caml_global_data.Stack_overflow);
      if(e instanceof joo_global_object.Error)
       return [0,caml_named_value("jsError"),e];
      return [0,caml_global_data.Failure,caml_js_to_string(String(e))]}
    function caml_call1(f,a0)
     {return f.length == 1?f(a0):caml_call_gen(f,[a0])}
    function caml_call2(f,a0,a1)
     {return f.length == 2?f(a0,a1):caml_call_gen(f,[a0,a1])}
    function caml_call3(f,a0,a1,a2)
     {return f.length == 3?f(a0,a1,a2):caml_call_gen(f,[a0,a1,a2])}
    function caml_call5(f,a0,a1,a2,a3,a4)
     {return f.length == 5?f(a0,a1,a2,a3,a4):caml_call_gen(f,[a0,a1,a2,a3,a4])}
    var
     Out_of_memory=[248,caml_new_string("Out_of_memory"),-1],
     Sys_error=[248,caml_new_string("Sys_error"),-2],
     Failure=[248,caml_new_string("Failure"),-3],
     Invalid_argument=[248,caml_new_string("Invalid_argument"),-4],
     End_of_file=[248,caml_new_string("End_of_file"),-5],
     Division_by_zero=[248,caml_new_string("Division_by_zero"),-6],
     Not_found=[248,caml_new_string("Not_found"),-7],
     Match_failure=[248,caml_new_string("Match_failure"),-8],
     Stack_overflow=[248,caml_new_string("Stack_overflow"),-9],
     Sys_blocked_io=[248,caml_new_string("Sys_blocked_io"),-10],
     Assert_failure=[248,caml_new_string("Assert_failure"),-11],
     Undefined_recursive_module=
      [248,caml_new_string("Undefined_recursive_module"),-12],
     s=caml_new_string("Buffer.add: cannot grow buffer"),
     locfmt=
      [0,
       [11,
        caml_new_string('File "'),
        [2,
         0,
         [11,
          caml_new_string('", line '),
          [4,
           0,
           0,
           0,
           [11,
            caml_new_string(", characters "),
            [4,0,0,0,[12,45,[4,0,0,0,[11,caml_new_string(": "),[2,0,0]]]]]]]]]],
       caml_new_string('File "%s", line %d, characters %d-%d: %s')],
     v=[254,0,0,1];
    caml_register_global
     (11,Undefined_recursive_module,"Undefined_recursive_module");
    caml_register_global(10,Assert_failure,"Assert_failure");
    caml_register_global(9,Sys_blocked_io,"Sys_blocked_io");
    caml_register_global(8,Stack_overflow,"Stack_overflow");
    caml_register_global(7,Match_failure,"Match_failure");
    caml_register_global(6,Not_found,"Not_found");
    caml_register_global(5,Division_by_zero,"Division_by_zero");
    caml_register_global(4,End_of_file,"End_of_file");
    caml_register_global(3,Invalid_argument,"Invalid_argument");
    caml_register_global(2,Failure,"Failure");
    caml_register_global(1,Sys_error,"Sys_error");
    caml_register_global(0,Out_of_memory,"Out_of_memory");
    var
     _j_=caml_new_string("output_substring"),
     _i_=caml_new_string("%.12g"),
     _h_=caml_new_string("."),
     _f_=caml_new_string("true"),
     _g_=caml_new_string("false"),
     _d_=caml_new_string("Pervasives.Exit"),
     _l_=caml_new_string("Array.Bottom"),
     _p_=caml_new_string("\\b"),
     _q_=caml_new_string("\\t"),
     _r_=caml_new_string("\\n"),
     _s_=caml_new_string("\\r"),
     _o_=caml_new_string("\\\\"),
     _n_=caml_new_string("\\'"),
     _B_=caml_new_string("String.contains_from / Bytes.contains_from"),
     _y_=caml_new_string("String.blit / Bytes.blit_string"),
     _w_=caml_new_string("Bytes.blit"),
     _t_=caml_new_string("String.sub / Bytes.sub"),
     _E_=caml_new_string(""),
     _H_=caml_new_string("Sys.Break"),
     _M_=caml_new_string("Map.remove_min_elt"),
     _N_=[0,0,0,0],
     _O_=[0,caml_new_string("map.ml"),270,10],
     _P_=[0,0,0],
     _I_=caml_new_string("Map.bal"),
     _J_=caml_new_string("Map.bal"),
     _K_=caml_new_string("Map.bal"),
     _L_=caml_new_string("Map.bal"),
     _R_=caml_new_string("Queue.Empty"),
     _U_=caml_new_string("CamlinternalLazy.Undefined"),
     _X_=caml_new_string("Buffer.add_substring/add_subbytes"),
     _an_=caml_new_string("%c"),
     _ao_=caml_new_string("%s"),
     _ap_=caml_new_string("%i"),
     _aq_=caml_new_string("%li"),
     _ar_=caml_new_string("%ni"),
     _as_=caml_new_string("%Li"),
     _at_=caml_new_string("%f"),
     _au_=caml_new_string("%B"),
     _av_=caml_new_string("%{"),
     _aw_=caml_new_string("%}"),
     _ax_=caml_new_string("%("),
     _ay_=caml_new_string("%)"),
     _az_=caml_new_string("%a"),
     _aA_=caml_new_string("%t"),
     _aB_=caml_new_string("%?"),
     _aC_=caml_new_string("%r"),
     _aD_=caml_new_string("%_r"),
     _aH_=[0,caml_new_string("camlinternalFormat.ml"),816,23],
     _aS_=[0,caml_new_string("camlinternalFormat.ml"),780,21],
     _aK_=[0,caml_new_string("camlinternalFormat.ml"),781,21],
     _aT_=[0,caml_new_string("camlinternalFormat.ml"),784,21],
     _aL_=[0,caml_new_string("camlinternalFormat.ml"),785,21],
     _aU_=[0,caml_new_string("camlinternalFormat.ml"),788,19],
     _aM_=[0,caml_new_string("camlinternalFormat.ml"),789,19],
     _aV_=[0,caml_new_string("camlinternalFormat.ml"),792,22],
     _aN_=[0,caml_new_string("camlinternalFormat.ml"),793,22],
     _aW_=[0,caml_new_string("camlinternalFormat.ml"),797,30],
     _aO_=[0,caml_new_string("camlinternalFormat.ml"),798,30],
     _aQ_=[0,caml_new_string("camlinternalFormat.ml"),802,26],
     _aI_=[0,caml_new_string("camlinternalFormat.ml"),803,26],
     _aR_=[0,caml_new_string("camlinternalFormat.ml"),812,28],
     _aJ_=[0,caml_new_string("camlinternalFormat.ml"),813,28],
     _aP_=[0,caml_new_string("camlinternalFormat.ml"),817,23],
     _bP_=caml_new_string("%u"),
     _bN_=[0,caml_new_string("camlinternalFormat.ml"),1449,4],
     _bO_=caml_new_string("Printf: bad conversion %["),
     _bQ_=[0,caml_new_string("camlinternalFormat.ml"),1517,39],
     _bR_=[0,caml_new_string("camlinternalFormat.ml"),1540,31],
     _bS_=[0,caml_new_string("camlinternalFormat.ml"),1541,31],
     _bT_=caml_new_string("Printf: bad conversion %_"),
     _bV_=caml_new_string("@{"),
     _bW_=caml_new_string("@["),
     _bY_=caml_new_string("@{"),
     _bZ_=caml_new_string("@["),
     _bH_=[0,caml_new_string("'"),[0,caml_new_string("'"),0]],
     _bF_=caml_new_string("nan"),
     _bG_=caml_new_string("."),
     _bD_=caml_new_string("neg_infinity"),
     _bE_=caml_new_string("infinity"),
     _bx_=caml_new_string("%.12g"),
     _bk_=[0,caml_new_string("%"),[0,caml_new_string("d"),0]],
     _bl_=[0,caml_new_string("%+"),[0,caml_new_string("d"),0]],
     _bm_=[0,caml_new_string("% "),[0,caml_new_string("d"),0]],
     _bn_=[0,caml_new_string("%"),[0,caml_new_string("i"),0]],
     _bo_=[0,caml_new_string("%+"),[0,caml_new_string("i"),0]],
     _bp_=[0,caml_new_string("% "),[0,caml_new_string("i"),0]],
     _bq_=[0,caml_new_string("%"),[0,caml_new_string("x"),0]],
     _br_=[0,caml_new_string("%#"),[0,caml_new_string("x"),0]],
     _bs_=[0,caml_new_string("%"),[0,caml_new_string("X"),0]],
     _bt_=[0,caml_new_string("%#"),[0,caml_new_string("X"),0]],
     _bu_=[0,caml_new_string("%"),[0,caml_new_string("o"),0]],
     _bv_=[0,caml_new_string("%#"),[0,caml_new_string("o"),0]],
     _bw_=[0,caml_new_string("%"),[0,caml_new_string("u"),0]],
     _a8_=caml_new_string("%d"),
     _a9_=caml_new_string("%+d"),
     _a__=caml_new_string("% d"),
     _a$_=caml_new_string("%i"),
     _ba_=caml_new_string("%+i"),
     _bb_=caml_new_string("% i"),
     _bc_=caml_new_string("%x"),
     _bd_=caml_new_string("%#x"),
     _be_=caml_new_string("%X"),
     _bf_=caml_new_string("%#X"),
     _bg_=caml_new_string("%o"),
     _bh_=caml_new_string("%#o"),
     _bi_=caml_new_string("%u"),
     _a7_=[0,caml_new_string('"'),[0,caml_new_string('"'),0]],
     _ae_=caml_new_string("@]"),
     _af_=caml_new_string("@}"),
     _ag_=caml_new_string("@?"),
     _ah_=caml_new_string("@\n"),
     _ai_=caml_new_string("@."),
     _aj_=caml_new_string("@@"),
     _ak_=caml_new_string("@%"),
     _al_=caml_new_string("@"),
     _aX_=caml_new_string("CamlinternalFormat.Type_mismatch"),
     _b5_=caml_new_string(""),
     _b6_=
      [0,[11,caml_new_string(", "),[2,0,[2,0,0]]],caml_new_string(", %s%s")],
     _ck_=[0,[2,0,[12,10,0]],caml_new_string("%s\n")],
     _cl_=
      [0,
       [11,
        caml_new_string
         ("(Program not linked with -g, cannot print stack backtrace)\n"),
        0],
       caml_new_string
        ("(Program not linked with -g, cannot print stack backtrace)\n")],
     _ce_=caml_new_string("Raised at"),
     _cf_=caml_new_string("Re-raised at"),
     _cg_=caml_new_string("Raised by primitive operation at"),
     _ch_=caml_new_string("Called from"),
     _ci_=
      [0,
       [2,
        0,
        [11,
         caml_new_string(' file "'),
         [2,
          0,
          [11,
           caml_new_string('", line '),
           [4,
            0,
            0,
            0,
            [11,
             caml_new_string(", characters "),
             [4,0,0,0,[12,45,[4,0,0,0,0]]]]]]]]],
       caml_new_string('%s file "%s", line %d, characters %d-%d')],
     _cj_=
      [0,
       [2,0,[11,caml_new_string(" unknown location"),0]],
       caml_new_string("%s unknown location")],
     _b$_=caml_new_string("Out of memory"),
     _ca_=caml_new_string("Stack overflow"),
     _cb_=caml_new_string("Pattern matching failed"),
     _cc_=caml_new_string("Assertion failed"),
     _cd_=caml_new_string("Undefined recursive module"),
     _b7_=[0,[12,40,[2,0,[2,0,[12,41,0]]]],caml_new_string("(%s%s)")],
     _b8_=caml_new_string(""),
     _b9_=caml_new_string(""),
     _b__=[0,[12,40,[2,0,[12,41,0]]],caml_new_string("(%s)")],
     _b4_=[0,[4,0,0,0,0],caml_new_string("%d")],
     _b2_=[0,[3,0,0],caml_new_string("%S")],
     _b3_=caml_new_string("_"),
     _df_=caml_new_string("OCAMLRUNPARAM"),
     _dd_=caml_new_string("CAMLRUNPARAM"),
     _cm_=caml_new_string(""),
     _cv_=[3,0,3],
     _cw_=caml_new_string("."),
     _ct_=caml_new_string(">"),
     _cu_=caml_new_string("</"),
     _cr_=caml_new_string(">"),
     _cs_=caml_new_string("<"),
     _cq_=caml_new_string("\n"),
     _co_=caml_new_string("Format.Empty_queue"),
     _cp_=[0,caml_new_string("")],
     _cy_=caml_new_string("Lwt_sequence.Empty"),
     _cH_=[0,caml_new_string("src/core/lwt.ml"),833,20],
     _cI_=[0,caml_new_string("src/core/lwt.ml"),835,8],
     _cF_=[0,caml_new_string("src/core/lwt.ml"),667,20],
     _cG_=[0,caml_new_string("src/core/lwt.ml"),670,8],
     _cE_=[0,caml_new_string("src/core/lwt.ml"),508,8],
     _cD_=[0,caml_new_string("src/core/lwt.ml"),497,9],
     _cC_=caml_new_string("Lwt.wakeup_result"),
     _cB_=caml_new_string("Fatal error: exception "),
     _cA_=caml_new_string("Lwt.Canceled"),
     _cN_=caml_new_string("Js.Error"),
     _cO_=caml_new_string("jsError"),
     _cY_=caml_new_string("canvas"),
     _cW_=caml_new_string("img"),
     _cV_=caml_new_string("br"),
     _cU_=caml_new_string("p"),
     _cT_=caml_new_string("div"),
     _cS_=caml_new_string("label"),
     _cR_=caml_new_string("input"),
     _cQ_=caml_new_string("select"),
     _cP_=caml_new_string("option"),
     _cX_=caml_new_string("Dom_html.Canvas_not_available"),
     _c2_=caml_new_string("Exception during Lwt.async: "),
     _dc_=[0,[8,2,[0,1,2],[0,0],0],caml_new_string("% 2.f")],
     _c7_=caml_new_string("Resume"),
     _c8_=caml_new_string("Pause"),
     _c9_=caml_new_string("Fixed position"),
     _c__=caml_new_string("Follow rotation"),
     _c$_=
      [0,
       caml_new_string("December solstice"),
       [0,caml_new_string("Equinox"),[0,caml_new_string("June solstice"),0]]],
     _da_=caml_new_string("Lighting"),
     _db_=caml_new_string("Clip"),
     _c6_=[0,caml_new_string("planet.ml"),415,0],
     _c5_=[0,caml_new_string("planet.ml"),416,0],
     _c4_=[0,caml_new_string("planet.ml"),417,0],
     _c3_=[0,caml_new_string("planet.ml"),418,0];
    function _a_(param)
     {if(typeof param === "number")
       return 0;
      else
       switch(param[0])
        {case 0:var rest=param[1];return [0,_a_(rest)];
         case 1:var rest$0=param[1];return [1,_a_(rest$0)];
         case 2:var rest$1=param[1];return [2,_a_(rest$1)];
         case 3:var rest$2=param[1];return [3,_a_(rest$2)];
         case 4:var rest$3=param[1];return [4,_a_(rest$3)];
         case 5:var rest$4=param[1];return [5,_a_(rest$4)];
         case 6:var rest$5=param[1];return [6,_a_(rest$5)];
         case 7:var rest$6=param[1];return [7,_a_(rest$6)];
         case 8:var rest$7=param[2],ty=param[1];return [8,ty,_a_(rest$7)];
         case 9:
          var rest$8=param[3],ty1=param[1];return [9,ty1,ty1,_a_(rest$8)];
         case 10:var rest$9=param[1];return [10,_a_(rest$9)];
         case 11:var rest$10=param[1];return [11,_a_(rest$10)];
         case 12:var rest$11=param[1];return [12,_a_(rest$11)];
         case 13:var rest$12=param[1];return [13,_a_(rest$12)];
         default:var rest$13=param[1];return [14,_a_(rest$13)]}}
    function _b_(fmtty1,fmtty2)
     {if(typeof fmtty1 === "number")
       return fmtty2;
      else
       switch(fmtty1[0])
        {case 0:var rest=fmtty1[1];return [0,_b_(rest,fmtty2)];
         case 1:var rest$0=fmtty1[1];return [1,_b_(rest$0,fmtty2)];
         case 2:var rest$1=fmtty1[1];return [2,_b_(rest$1,fmtty2)];
         case 3:var rest$2=fmtty1[1];return [3,_b_(rest$2,fmtty2)];
         case 4:var rest$3=fmtty1[1];return [4,_b_(rest$3,fmtty2)];
         case 5:var rest$4=fmtty1[1];return [5,_b_(rest$4,fmtty2)];
         case 6:var rest$5=fmtty1[1];return [6,_b_(rest$5,fmtty2)];
         case 7:var rest$6=fmtty1[1];return [7,_b_(rest$6,fmtty2)];
         case 8:
          var rest$7=fmtty1[2],ty=fmtty1[1];return [8,ty,_b_(rest$7,fmtty2)];
         case 9:
          var rest$8=fmtty1[3],ty2=fmtty1[2],ty1=fmtty1[1];
          return [9,ty1,ty2,_b_(rest$8,fmtty2)];
         case 10:var rest$9=fmtty1[1];return [10,_b_(rest$9,fmtty2)];
         case 11:var rest$10=fmtty1[1];return [11,_b_(rest$10,fmtty2)];
         case 12:var rest$11=fmtty1[1];return [12,_b_(rest$11,fmtty2)];
         case 13:var rest$12=fmtty1[1];return [13,_b_(rest$12,fmtty2)];
         default:var rest$13=fmtty1[1];return [14,_b_(rest$13,fmtty2)]}}
    function _c_(fmt1,fmt2)
     {if(typeof fmt1 === "number")
       return fmt2;
      else
       switch(fmt1[0])
        {case 0:var rest=fmt1[1];return [0,_c_(rest,fmt2)];
         case 1:var rest$0=fmt1[1];return [1,_c_(rest$0,fmt2)];
         case 2:
          var rest$1=fmt1[2],pad=fmt1[1];return [2,pad,_c_(rest$1,fmt2)];
         case 3:
          var rest$2=fmt1[2],pad$0=fmt1[1];return [3,pad$0,_c_(rest$2,fmt2)];
         case 4:
          var rest$3=fmt1[4],prec=fmt1[3],pad$1=fmt1[2],iconv=fmt1[1];
          return [4,iconv,pad$1,prec,_c_(rest$3,fmt2)];
         case 5:
          var rest$4=fmt1[4],prec$0=fmt1[3],pad$2=fmt1[2],iconv$0=fmt1[1];
          return [5,iconv$0,pad$2,prec$0,_c_(rest$4,fmt2)];
         case 6:
          var rest$5=fmt1[4],prec$1=fmt1[3],pad$3=fmt1[2],iconv$1=fmt1[1];
          return [6,iconv$1,pad$3,prec$1,_c_(rest$5,fmt2)];
         case 7:
          var rest$6=fmt1[4],prec$2=fmt1[3],pad$4=fmt1[2],iconv$2=fmt1[1];
          return [7,iconv$2,pad$4,prec$2,_c_(rest$6,fmt2)];
         case 8:
          var rest$7=fmt1[4],prec$3=fmt1[3],pad$5=fmt1[2],fconv=fmt1[1];
          return [8,fconv,pad$5,prec$3,_c_(rest$7,fmt2)];
         case 9:var rest$8=fmt1[1];return [9,_c_(rest$8,fmt2)];
         case 10:var rest$9=fmt1[1];return [10,_c_(rest$9,fmt2)];
         case 11:
          var rest$10=fmt1[2],str=fmt1[1];return [11,str,_c_(rest$10,fmt2)];
         case 12:
          var rest$11=fmt1[2],chr=fmt1[1];return [12,chr,_c_(rest$11,fmt2)];
         case 13:
          var rest$12=fmt1[3],fmtty=fmt1[2],pad$6=fmt1[1];
          return [13,pad$6,fmtty,_c_(rest$12,fmt2)];
         case 14:
          var rest$13=fmt1[3],fmtty$0=fmt1[2],pad$7=fmt1[1];
          return [14,pad$7,fmtty$0,_c_(rest$13,fmt2)];
         case 15:var rest$14=fmt1[1];return [15,_c_(rest$14,fmt2)];
         case 16:var rest$15=fmt1[1];return [16,_c_(rest$15,fmt2)];
         case 17:
          var rest$16=fmt1[2],fmting_lit=fmt1[1];
          return [17,fmting_lit,_c_(rest$16,fmt2)];
         case 18:
          var rest$17=fmt1[2],fmting_gen=fmt1[1];
          return [18,fmting_gen,_c_(rest$17,fmt2)];
         case 19:var rest$18=fmt1[1];return [19,_c_(rest$18,fmt2)];
         case 20:
          var rest$19=fmt1[3],char_set=fmt1[2],width_opt=fmt1[1];
          return [20,width_opt,char_set,_c_(rest$19,fmt2)];
         case 21:
          var rest$20=fmt1[2],counter=fmt1[1];
          return [21,counter,_c_(rest$20,fmt2)];
         case 22:var rest$21=fmt1[1];return [22,_c_(rest$21,fmt2)];
         case 23:
          var rest$22=fmt1[2],ign=fmt1[1];return [23,ign,_c_(rest$22,fmt2)];
         default:
          var rest$23=fmt1[3],f=fmt1[2],arity=fmt1[1];
          return [24,arity,f,_c_(rest$23,fmt2)]}}
    function invalid_arg(s){throw [0,Invalid_argument,s]}
    caml_set_oo_id([248,_d_,0]);
    function abs(x){return 0 <= x?x:-x | 0}
    var max_int=2147483647;
    function _e_(s1,s2)
     {var
       l1=caml_ml_string_length(s1),
       l2=caml_ml_string_length(s2),
       s=caml_create_string(l1 + l2 | 0);
      caml_blit_string(s1,0,s,0,l1);
      caml_blit_string(s2,0,s,l1,l2);
      return s}
    caml_ml_open_descriptor_in(0);
    var
     stdout=caml_ml_open_descriptor_out(1),
     stderr=caml_ml_open_descriptor_out(2);
    function flush_all(param)
     {function iter(param)
       {var param$0=param;
        for(;;)
         {if(param$0)
           {var l=param$0[2],a=param$0[1];
            try {caml_ml_flush(a)}catch(_ii_){}
            var param$0=l;
            continue}
          return 0}}
      return iter(caml_ml_out_channels_list(0))}
    function output_string(oc,s)
     {return caml_ml_output(oc,s,0,caml_ml_string_length(s))}
    function prerr_string(s){return output_string(stderr,s)}
    var exit_function=[0,flush_all];
    function at_exit(f)
     {var g=exit_function[1];
      exit_function[1]
      =
      function(param){caml_call1(f,0);return caml_call1(g,0)};
      return 0}
    function do_at_exit(param){return caml_call1(exit_function[1],0)}
    function _k_(f,a)
     {var l=a.length - 1;
      if(0 === l)return [0];
      var r=caml_make_vect(l,caml_call1(f,a[1])),_ig_=l - 1 | 0,_if_=1;
      if(!(_ig_ < 1))
       {var i=_if_;
        for(;;)
         {r[i + 1] = caml_call1(f,a[i + 1]);
          var _ih_=i + 1 | 0;
          if(_ig_ !== i){var i=_ih_;continue}
          break}}
      return r}
    caml_set_oo_id([248,_l_,0]);
    function _m_(f,param)
     {var param$0=param;
      for(;;)
       {if(param$0)
         {var l=param$0[2],a=param$0[1];
          caml_call1(f,a);
          var param$0=l;
          continue}
        return 0}}
    function make(n,c)
     {var s=caml_create_string(n);caml_fill_string(s,0,n,c);return s}
    function _u_(b,ofs,len)
     {if(0 <= ofs)
       if(0 <= len)
        if(!((caml_ml_string_length(b) - len | 0) < ofs))
         {var r=caml_create_string(len);
          caml_blit_string(b,ofs,r,0,len);
          return r}
      return invalid_arg(_t_)}
    function _v_(s1,ofs1,s2,ofs2,len)
     {if(0 <= len)
       if(0 <= ofs1)
        if(!((caml_ml_string_length(s1) - len | 0) < ofs1))
         if(0 <= ofs2)
          if(!((caml_ml_string_length(s2) - len | 0) < ofs2))
           return caml_blit_string(s1,ofs1,s2,ofs2,len);
      return invalid_arg(_w_)}
    function _x_(s1,ofs1,s2,ofs2,len)
     {if(0 <= len)
       if(0 <= ofs1)
        if(!((caml_ml_string_length(s1) - len | 0) < ofs1))
         if(0 <= ofs2)
          if(!((caml_ml_string_length(s2) - len | 0) < ofs2))
           return caml_blit_string(s1,ofs1,s2,ofs2,len);
      return invalid_arg(_y_)}
    function _z_(s,lim,i,c)
     {var i$0=i;
      for(;;)
       {if(lim <= i$0)throw Not_found;
        if(caml_string_unsafe_get(s,i$0) === c)return i$0;
        var i$1=i$0 + 1 | 0,i$0=i$1;
        continue}}
    function _A_(s,i,c)
     {var l=caml_ml_string_length(s);
      if(0 <= i)
       if(!(l < i))
        try
         {_z_(s,l,i,c);var _id_=1;return _id_}
        catch(_ie_)
         {_ie_ = caml_wrap_exception(_ie_);
          if(_ie_ === Not_found)return 0;
          throw _ie_}
      return invalid_arg(_B_)}
    function _C_(n,c){return make(n,c)}
    function _D_(sep,l)
     {if(l)
       {var tl=l[2],hd=l[1],num=[0,0],len=[0,0];
        _m_
         (function(s)
           {num[1]++;len[1] = len[1] + caml_ml_string_length(s) | 0;return 0},
          l);
        var
         r=
          caml_create_string
           (len[1] + caml_mul(caml_ml_string_length(sep),num[1] - 1 | 0) | 0);
        caml_blit_string(hd,0,r,0,caml_ml_string_length(hd));
        var pos=[0,caml_ml_string_length(hd)];
        _m_
         (function(s)
           {caml_blit_string(sep,0,r,pos[1],caml_ml_string_length(sep));
            pos[1] = pos[1] + caml_ml_string_length(sep) | 0;
            caml_blit_string(s,0,r,pos[1],caml_ml_string_length(s));
            pos[1] = pos[1] + caml_ml_string_length(s) | 0;
            return 0},
          tl);
        return r}
      return _E_}
    function _F_(s,c){return _A_(s,0,c)}
    caml_set_oo_id([248,_H_,0]);
    var _G_=16777211;
    function _Q_(_hM_)
     {function _hf_(param){if(param){var h=param[5];return h}return 0}
      function _hg_(l,x,d,r)
       {var hl=_hf_(l),hr=_hf_(r),_ic_=hr <= hl?hl + 1 | 0:hr + 1 | 0;
        return [0,l,x,d,r,_ic_]}
      function _hh_(x,d){return [0,0,x,d,0,1]}
      function _hi_(l,x,d,r)
       {if(l)var h=l[5],hl=h;else var hl=0;
        if(r)var h$0=r[5],hr=h$0;else var hr=0;
        if((hr + 2 | 0) < hl)
         {if(l)
           {var lr=l[4],ld=l[3],lv=l[2],ll=l[1],_h9_=_hf_(lr);
            if(_h9_ <= _hf_(ll))return _hg_(ll,lv,ld,_hg_(lr,x,d,r));
            if(lr)
             {var
               lrr=lr[4],
               lrd=lr[3],
               lrv=lr[2],
               lrl=lr[1],
               _h__=_hg_(lrr,x,d,r);
              return _hg_(_hg_(ll,lv,ld,lrl),lrv,lrd,_h__)}
            return invalid_arg(_I_)}
          return invalid_arg(_J_)}
        if((hl + 2 | 0) < hr)
         {if(r)
           {var rr=r[4],rd=r[3],rv=r[2],rl=r[1],_h$_=_hf_(rl);
            if(_h$_ <= _hf_(rr))return _hg_(_hg_(l,x,d,rl),rv,rd,rr);
            if(rl)
             {var
               rlr=rl[4],
               rld=rl[3],
               rlv=rl[2],
               rll=rl[1],
               _ia_=_hg_(rlr,rv,rd,rr);
              return _hg_(_hg_(l,x,d,rll),rlv,rld,_ia_)}
            return invalid_arg(_K_)}
          return invalid_arg(_L_)}
        var _ib_=hr <= hl?hl + 1 | 0:hr + 1 | 0;
        return [0,l,x,d,r,_ib_]}
      var _hj_=0;
      function _hk_(param){return param?0:1}
      function _hl_(x,data,param)
       {if(param)
         {var
           h=param[5],
           r=param[4],
           d=param[3],
           v=param[2],
           l=param[1],
           c=caml_call2(_hM_[1],x,v);
          return 0 === c
                  ?[0,l,x,data,r,h]
                  :0 <= c
                    ?_hi_(l,v,d,_hl_(x,data,r))
                    :_hi_(_hl_(x,data,l),v,d,r)}
        return [0,0,x,data,0,1]}
      function _hm_(x,param)
       {var param$0=param;
        for(;;)
         {if(param$0)
           {var
             r=param$0[4],
             d=param$0[3],
             v=param$0[2],
             l=param$0[1],
             c=caml_call2(_hM_[1],x,v);
            if(0 === c)return d;
            var param$1=0 <= c?r:l,param$0=param$1;
            continue}
          throw Not_found}}
      function _hn_(x,param)
       {var param$0=param;
        for(;;)
         {if(param$0)
           {var
             r=param$0[4],
             v=param$0[2],
             l=param$0[1],
             c=caml_call2(_hM_[1],x,v),
             _h8_=0 === c?1:0;
            if(_h8_)return _h8_;
            var param$1=0 <= c?r:l,param$0=param$1;
            continue}
          return 0}}
      function _ho_(param)
       {var param$0=param;
        for(;;)
         {if(param$0)
           {var _h7_=param$0[1];
            if(_h7_){var param$0=_h7_;continue}
            var d=param$0[3],x=param$0[2];
            return [0,x,d]}
          throw Not_found}}
      function _hp_(param)
       {var param$0=param;
        for(;;)
         {if(param$0)
           {var _h4_=param$0[4],_h5_=param$0[3],_h6_=param$0[2];
            if(_h4_){var param$0=_h4_;continue}
            return [0,_h6_,_h5_]}
          throw Not_found}}
      function _hq_(param)
       {if(param)
         {var _h3_=param[1];
          if(_h3_)
           {var r=param[4],d=param[3],x=param[2];
            return _hi_(_hq_(_h3_),x,d,r)}
          var r$0=param[4];
          return r$0}
        return invalid_arg(_M_)}
      function _hr_(x$0,param)
       {if(param)
         {var
           r=param[4],
           d$0=param[3],
           v=param[2],
           l=param[1],
           c=caml_call2(_hM_[1],x$0,v);
          if(0 === c)
           {if(l)
             {if(r)
               {var match=_ho_(r),d=match[2],x=match[1];
                return _hi_(l,x,d,_hq_(r))}
              return l}
            return r}
          return 0 <= c?_hi_(l,v,d$0,_hr_(x$0,r)):_hi_(_hr_(x$0,l),v,d$0,r)}
        return 0}
      function _hs_(f,param)
       {var param$0=param;
        for(;;)
         {if(param$0)
           {var r=param$0[4],d=param$0[3],v=param$0[2],l=param$0[1];
            _hs_(f,l);
            caml_call2(f,v,d);
            var param$0=r;
            continue}
          return 0}}
      function _ht_(f,param)
       {if(param)
         {var
           h=param[5],
           r=param[4],
           d=param[3],
           v=param[2],
           l=param[1],
           l$0=_ht_(f,l),
           d$0=caml_call1(f,d),
           r$0=_ht_(f,r);
          return [0,l$0,v,d$0,r$0,h]}
        return 0}
      function _hu_(f,param)
       {if(param)
         {var
           h=param[5],
           r=param[4],
           d=param[3],
           v=param[2],
           l=param[1],
           l$0=_hu_(f,l),
           d$0=caml_call2(f,v,d),
           r$0=_hu_(f,r);
          return [0,l$0,v,d$0,r$0,h]}
        return 0}
      function _hv_(f,m,accu)
       {var m$0=m,accu$0=accu;
        for(;;)
         {if(m$0)
           {var
             r=m$0[4],
             d=m$0[3],
             v=m$0[2],
             l=m$0[1],
             accu$1=caml_call3(f,v,d,_hv_(f,l,accu$0)),
             m$0=r,
             accu$0=accu$1;
            continue}
          return accu$0}}
      function _hw_(p,param)
       {var param$0=param;
        for(;;)
         {if(param$0)
           {var
             r=param$0[4],
             d=param$0[3],
             v=param$0[2],
             l=param$0[1],
             _h0_=caml_call2(p,v,d);
            if(_h0_)
             {var _h1_=_hw_(p,l);
              if(_h1_){var param$0=r;continue}
              var _h2_=_h1_}
            else
             var _h2_=_h0_;
            return _h2_}
          return 1}}
      function _hx_(p,param)
       {var param$0=param;
        for(;;)
         {if(param$0)
           {var
             r=param$0[4],
             d=param$0[3],
             v=param$0[2],
             l=param$0[1],
             _hX_=caml_call2(p,v,d);
            if(_hX_)
             var _hY_=_hX_;
            else
             {var _hZ_=_hx_(p,l);
              if(!_hZ_){var param$0=r;continue}
              var _hY_=_hZ_}
            return _hY_}
          return 0}}
      function _hy_(k,v,param)
       {if(param)
         {var r=param[4],d=param[3],x=param[2],l=param[1];
          return _hi_(_hy_(k,v,l),x,d,r)}
        return _hh_(k,v)}
      function _hz_(k,v,param)
       {if(param)
         {var r=param[4],d=param[3],x=param[2],l=param[1];
          return _hi_(l,x,d,_hz_(k,v,r))}
        return _hh_(k,v)}
      function _hA_(l,v,d,r)
       {if(l)
         {if(r)
           {var
             rh=r[5],
             rr=r[4],
             rd=r[3],
             rv=r[2],
             rl=r[1],
             lh=l[5],
             lr=l[4],
             ld=l[3],
             lv=l[2],
             ll=l[1];
            return (rh + 2 | 0) < lh
                    ?_hi_(ll,lv,ld,_hA_(lr,v,d,r))
                    :(lh + 2 | 0) < rh
                      ?_hi_(_hA_(l,v,d,rl),rv,rd,rr)
                      :_hg_(l,v,d,r)}
          return _hz_(v,d,l)}
        return _hy_(v,d,r)}
      function _hB_(t,match)
       {if(t)
         {if(match)
           {var match$0=_ho_(match),d=match$0[2],x=match$0[1];
            return _hA_(t,x,d,_hq_(match))}
          return t}
        return match}
      function _hC_(t1,v,d,t2)
       {if(d){var d$0=d[1];return _hA_(t1,v,d$0,t2)}return _hB_(t1,t2)}
      function _hD_(x,param)
       {if(param)
         {var
           r=param[4],
           d=param[3],
           v=param[2],
           l=param[1],
           c=caml_call2(_hM_[1],x,v);
          if(0 === c)return [0,l,[0,d],r];
          if(0 <= c)
           {var match=_hD_(x,r),rr=match[3],pres=match[2],lr=match[1];
            return [0,_hA_(l,v,d,lr),pres,rr]}
          var match$0=_hD_(x,l),rl=match$0[3],pres$0=match$0[2],ll=match$0[1];
          return [0,ll,pres$0,_hA_(rl,v,d,r)]}
        return _N_}
      function _hE_(f,s1,s2)
       {if(s1)
         {var h1=s1[5],r1=s1[4],d1=s1[3],v1=s1[2],l1=s1[1];
          if(_hf_(s2) <= h1)
           {var
             match=_hD_(v1,s2),
             r2=match[3],
             d2=match[2],
             l2=match[1],
             _hT_=_hE_(f,r1,r2),
             _hU_=caml_call3(f,v1,[0,d1],d2);
            return _hC_(_hE_(f,l1,l2),v1,_hU_,_hT_)}}
        else
         if(!s2)return 0;
        if(s2)
         {var
           r2$0=s2[4],
           d2$0=s2[3],
           v2=s2[2],
           l2$0=s2[1],
           match$0=_hD_(v2,s1),
           r1$0=match$0[3],
           d1$0=match$0[2],
           l1$0=match$0[1],
           _hV_=_hE_(f,r1$0,r2$0),
           _hW_=caml_call3(f,v2,d1$0,[0,d2$0]);
          return _hC_(_hE_(f,l1$0,l2$0),v2,_hW_,_hV_)}
        throw [0,Assert_failure,_O_]}
      function _hF_(p,param)
       {if(param)
         {var
           r=param[4],
           d=param[3],
           v=param[2],
           l=param[1],
           l$0=_hF_(p,l),
           pvd=caml_call2(p,v,d),
           r$0=_hF_(p,r);
          return pvd?_hA_(l$0,v,d,r$0):_hB_(l$0,r$0)}
        return 0}
      function _hG_(p,param)
       {if(param)
         {var
           r=param[4],
           d=param[3],
           v=param[2],
           l=param[1],
           match=_hG_(p,l),
           lf=match[2],
           lt=match[1],
           pvd=caml_call2(p,v,d),
           match$0=_hG_(p,r),
           rf=match$0[2],
           rt=match$0[1];
          if(pvd){var _hR_=_hB_(lf,rf);return [0,_hA_(lt,v,d,rt),_hR_]}
          var _hS_=_hA_(lf,v,d,rf);
          return [0,_hB_(lt,rt),_hS_]}
        return _P_}
      function _hH_(m,e)
       {var m$0=m,e$0=e;
        for(;;)
         {if(m$0)
           {var
             r=m$0[4],
             d=m$0[3],
             v=m$0[2],
             l=m$0[1],
             e$1=[0,v,d,r,e$0],
             m$0=l,
             e$0=e$1;
            continue}
          return e$0}}
      function _hI_(cmp,m1,m2)
       {var e2$2=_hH_(m2,0),e1$2=_hH_(m1,0),e1=e1$2,e2=e2$2;
        for(;;)
         {if(e1)
           {if(e2)
             {var
               e2$0=e2[4],
               r2=e2[3],
               d2=e2[2],
               v2=e2[1],
               e1$0=e1[4],
               r1=e1[3],
               d1=e1[2],
               v1=e1[1],
               c=caml_call2(_hM_[1],v1,v2);
              if(0 === c)
               {var c$0=caml_call2(cmp,d1,d2);
                if(0 === c$0)
                 {var e2$1=_hH_(r2,e2$0),e1$1=_hH_(r1,e1$0),e1=e1$1,e2=e2$1;
                  continue}
                return c$0}
              return c}
            return 1}
          return e2?-1:0}}
      function _hJ_(cmp,m1,m2)
       {var e2$2=_hH_(m2,0),e1$2=_hH_(m1,0),e1=e1$2,e2=e2$2;
        for(;;)
         {if(e1)
           {if(e2)
             {var
               e2$0=e2[4],
               r2=e2[3],
               d2=e2[2],
               v2=e2[1],
               e1$0=e1[4],
               r1=e1[3],
               d1=e1[2],
               v1=e1[1],
               _hO_=0 === caml_call2(_hM_[1],v1,v2)?1:0;
              if(_hO_)
               {var _hP_=caml_call2(cmp,d1,d2);
                if(_hP_)
                 {var e2$1=_hH_(r2,e2$0),e1$1=_hH_(r1,e1$0),e1=e1$1,e2=e2$1;
                  continue}
                var _hQ_=_hP_}
              else
               var _hQ_=_hO_;
              return _hQ_}
            return 0}
          return e2?0:1}}
      function _hK_(param)
       {if(param)
         {var r=param[4],l=param[1],_hN_=_hK_(r);
          return (_hK_(l) + 1 | 0) + _hN_ | 0}
        return 0}
      function _hL_(accu,param)
       {var accu$0=accu,param$0=param;
        for(;;)
         {if(param$0)
           {var
             r=param$0[4],
             d=param$0[3],
             v=param$0[2],
             l=param$0[1],
             accu$1=[0,[0,v,d],_hL_(accu$0,r)],
             accu$0=accu$1,
             param$0=l;
            continue}
          return accu$0}}
      return [0,
              _hj_,
              _hk_,
              _hn_,
              _hl_,
              _hh_,
              _hr_,
              _hE_,
              _hI_,
              _hJ_,
              _hs_,
              _hv_,
              _hw_,
              _hx_,
              _hF_,
              _hG_,
              _hK_,
              function(s){return _hL_(0,s)},
              _ho_,
              _hp_,
              _ho_,
              _hD_,
              _hm_,
              _ht_,
              _hu_]}
    var _S_=caml_set_oo_id([248,_R_,0]);
    function _T_(param){return [0,0,0]}
    caml_set_oo_id([248,_U_,0]);
    function _V_(n)
     {var n$0=1 <= n?n:1,n$1=16777211 < n$0?_G_:n$0,s=caml_create_string(n$1);
      return [0,s,0,n$1,s]}
    function _W_(b,more)
     {var len=b[3],new_len=[0,len];
      for(;;)
       {if(new_len[1] < (b[2] + more | 0))
         {new_len[1] = 2 * new_len[1] | 0;continue}
        if(16777211 < new_len[1])
         {if(!((b[2] + more | 0) <= 16777211))throw [0,Failure,s];
          new_len[1] = _G_}
        var new_buffer=caml_create_string(new_len[1]);
        _v_(b[1],0,new_buffer,0,b[2]);
        b[1] = new_buffer;
        b[3] = new_len[1];
        return 0}}
    function _Y_(b,s)
     {var len=caml_ml_string_length(s),new_position=b[2] + len | 0;
      if(b[3] < new_position)_W_(b,len);
      _x_(s,0,b[1],b[2],len);
      b[2] = new_position;
      return 0}
    var _Z_=6;
    function ___(init_size){return [0,0,caml_create_string(init_size)]}
    function _$_(buf,overhead)
     {var
       len=caml_ml_string_length(buf[2]),
       y=buf[1] + overhead | 0,
       _hd_=len < y?1:0;
      if(_hd_)
       {var
         x=len * 2 | 0,
         new_len=caml_greaterequal(x,y)?x:y,
         new_str=caml_create_string(new_len);
        _v_(buf[2],0,new_str,0,len);
        buf[2] = new_str;
        var _he_=0}
      else
       var _he_=_hd_;
      return _he_}
    function _aa_(buf,c)
     {_$_(buf,1);
      caml_string_set(buf[2],buf[1],c);
      buf[1] = buf[1] + 1 | 0;
      return 0}
    function _ab_(buf,s)
     {var str_len=caml_ml_string_length(s);
      _$_(buf,str_len);
      _x_(s,0,buf[2],buf[1],str_len);
      buf[1] = buf[1] + str_len | 0;
      return 0}
    function _ac_(buf){return _u_(buf[2],0,buf[1])}
    function _ad_(formatting_lit)
     {if(typeof formatting_lit === "number")
       switch(formatting_lit)
        {case 0:return _ae_;
         case 1:return _af_;
         case 2:return _ag_;
         case 3:return _ah_;
         case 4:return _ai_;
         case 5:return _aj_;
         default:return _ak_}
      else
       switch(formatting_lit[0])
        {case 0:var str=formatting_lit[1];return str;
         case 1:var str$0=formatting_lit[1];return str$0;
         default:var c=formatting_lit[1];return _e_(_al_,_C_(1,c))}}
    function _am_(buf,fmtty)
     {var fmtty$0=fmtty;
      for(;;)
       if(typeof fmtty$0 === "number")
        return 0;
       else
        switch(fmtty$0[0])
         {case 0:var rest=fmtty$0[1];_ab_(buf,_an_);var fmtty$0=rest;continue;
          case 1:
           var rest$0=fmtty$0[1];_ab_(buf,_ao_);var fmtty$0=rest$0;continue;
          case 2:
           var rest$1=fmtty$0[1];_ab_(buf,_ap_);var fmtty$0=rest$1;continue;
          case 3:
           var rest$2=fmtty$0[1];_ab_(buf,_aq_);var fmtty$0=rest$2;continue;
          case 4:
           var rest$3=fmtty$0[1];_ab_(buf,_ar_);var fmtty$0=rest$3;continue;
          case 5:
           var rest$4=fmtty$0[1];_ab_(buf,_as_);var fmtty$0=rest$4;continue;
          case 6:
           var rest$5=fmtty$0[1];_ab_(buf,_at_);var fmtty$0=rest$5;continue;
          case 7:
           var rest$6=fmtty$0[1];_ab_(buf,_au_);var fmtty$0=rest$6;continue;
          case 8:
           var rest$7=fmtty$0[2],sub_fmtty=fmtty$0[1];
           _ab_(buf,_av_);
           _am_(buf,sub_fmtty);
           _ab_(buf,_aw_);
           var fmtty$0=rest$7;
           continue;
          case 9:
           var rest$8=fmtty$0[3],sub_fmtty$0=fmtty$0[1];
           _ab_(buf,_ax_);
           _am_(buf,sub_fmtty$0);
           _ab_(buf,_ay_);
           var fmtty$0=rest$8;
           continue;
          case 10:
           var rest$9=fmtty$0[1];_ab_(buf,_az_);var fmtty$0=rest$9;continue;
          case 11:
           var rest$10=fmtty$0[1];_ab_(buf,_aA_);var fmtty$0=rest$10;continue;
          case 12:
           var rest$11=fmtty$0[1];_ab_(buf,_aB_);var fmtty$0=rest$11;continue;
          case 13:
           var rest$12=fmtty$0[1];_ab_(buf,_aC_);var fmtty$0=rest$12;continue;
          default:
           var rest$13=fmtty$0[1];_ab_(buf,_aD_);var fmtty$0=rest$13;continue}}
    function _aE_(param)
     {if(typeof param === "number")
       return 0;
      else
       switch(param[0])
        {case 0:var rest=param[1];return [0,_aE_(rest)];
         case 1:var rest$0=param[1];return [1,_aE_(rest$0)];
         case 2:var rest$1=param[1];return [2,_aE_(rest$1)];
         case 3:var rest$2=param[1];return [3,_aE_(rest$2)];
         case 4:var rest$3=param[1];return [4,_aE_(rest$3)];
         case 5:var rest$4=param[1];return [5,_aE_(rest$4)];
         case 6:var rest$5=param[1];return [6,_aE_(rest$5)];
         case 7:var rest$6=param[1];return [7,_aE_(rest$6)];
         case 8:var rest$7=param[2],ty=param[1];return [8,ty,_aE_(rest$7)];
         case 9:
          var rest$8=param[3],ty2=param[2],ty1=param[1];
          return [9,ty2,ty1,_aE_(rest$8)];
         case 10:var rest$9=param[1];return [10,_aE_(rest$9)];
         case 11:var rest$10=param[1];return [11,_aE_(rest$10)];
         case 12:var rest$11=param[1];return [12,_aE_(rest$11)];
         case 13:var rest$12=param[1];return [13,_aE_(rest$12)];
         default:var rest$13=param[1];return [14,_aE_(rest$13)]}}
    function _aF_(param)
     {if(typeof param === "number")
       {var
         _gR_=function(param){return 0},
         _gS_=function(param){return 0},
         _gT_=function(param){return 0};
        return [0,function(param){return 0},_gT_,_gS_,_gR_]}
      else
       switch(param[0])
        {case 0:
          var
           rest=param[1],
           match=_aF_(rest),
           de=match[4],
           ed=match[3],
           af=match[2],
           fa=match[1],
           _gU_=function(param){caml_call1(af,0);return 0};
          return [0,function(param){caml_call1(fa,0);return 0},_gU_,ed,de];
         case 1:
          var
           rest$0=param[1],
           match$0=_aF_(rest$0),
           de$0=match$0[4],
           ed$0=match$0[3],
           af$0=match$0[2],
           fa$0=match$0[1],
           _gV_=function(param){caml_call1(af$0,0);return 0};
          return [0,
                  function(param){caml_call1(fa$0,0);return 0},
                  _gV_,
                  ed$0,
                  de$0];
         case 2:
          var
           rest$1=param[1],
           match$1=_aF_(rest$1),
           de$1=match$1[4],
           ed$1=match$1[3],
           af$1=match$1[2],
           fa$1=match$1[1],
           _gW_=function(param){caml_call1(af$1,0);return 0};
          return [0,
                  function(param){caml_call1(fa$1,0);return 0},
                  _gW_,
                  ed$1,
                  de$1];
         case 3:
          var
           rest$2=param[1],
           match$2=_aF_(rest$2),
           de$2=match$2[4],
           ed$2=match$2[3],
           af$2=match$2[2],
           fa$2=match$2[1],
           _gX_=function(param){caml_call1(af$2,0);return 0};
          return [0,
                  function(param){caml_call1(fa$2,0);return 0},
                  _gX_,
                  ed$2,
                  de$2];
         case 4:
          var
           rest$3=param[1],
           match$3=_aF_(rest$3),
           de$3=match$3[4],
           ed$3=match$3[3],
           af$3=match$3[2],
           fa$3=match$3[1],
           _gY_=function(param){caml_call1(af$3,0);return 0};
          return [0,
                  function(param){caml_call1(fa$3,0);return 0},
                  _gY_,
                  ed$3,
                  de$3];
         case 5:
          var
           rest$4=param[1],
           match$4=_aF_(rest$4),
           de$4=match$4[4],
           ed$4=match$4[3],
           af$4=match$4[2],
           fa$4=match$4[1],
           _gZ_=function(param){caml_call1(af$4,0);return 0};
          return [0,
                  function(param){caml_call1(fa$4,0);return 0},
                  _gZ_,
                  ed$4,
                  de$4];
         case 6:
          var
           rest$5=param[1],
           match$5=_aF_(rest$5),
           de$5=match$5[4],
           ed$5=match$5[3],
           af$5=match$5[2],
           fa$5=match$5[1],
           _g0_=function(param){caml_call1(af$5,0);return 0};
          return [0,
                  function(param){caml_call1(fa$5,0);return 0},
                  _g0_,
                  ed$5,
                  de$5];
         case 7:
          var
           rest$6=param[1],
           match$6=_aF_(rest$6),
           de$6=match$6[4],
           ed$6=match$6[3],
           af$6=match$6[2],
           fa$6=match$6[1],
           _g1_=function(param){caml_call1(af$6,0);return 0};
          return [0,
                  function(param){caml_call1(fa$6,0);return 0},
                  _g1_,
                  ed$6,
                  de$6];
         case 8:
          var
           rest$7=param[2],
           match$7=_aF_(rest$7),
           de$7=match$7[4],
           ed$7=match$7[3],
           af$7=match$7[2],
           fa$7=match$7[1],
           _g2_=function(param){caml_call1(af$7,0);return 0};
          return [0,
                  function(param){caml_call1(fa$7,0);return 0},
                  _g2_,
                  ed$7,
                  de$7];
         case 9:
          var
           rest$8=param[3],
           ty2=param[2],
           ty1=param[1],
           match$8=_aF_(rest$8),
           de$8=match$8[4],
           ed$8=match$8[3],
           af$8=match$8[2],
           fa$8=match$8[1],
           ty=_aG_(_aE_(ty1),ty2),
           match$9=_aF_(ty),
           jd=match$9[4],
           dj=match$9[3],
           ga=match$9[2],
           ag=match$9[1],
           _g3_=function(param){caml_call1(jd,0);caml_call1(de$8,0);return 0},
           _g4_=function(param){caml_call1(ed$8,0);caml_call1(dj,0);return 0},
           _g5_=function(param){caml_call1(ga,0);caml_call1(af$8,0);return 0};
          return [0,
                  function(param)
                   {caml_call1(fa$8,0);caml_call1(ag,0);return 0},
                  _g5_,
                  _g4_,
                  _g3_];
         case 10:
          var
           rest$9=param[1],
           match$10=_aF_(rest$9),
           de$9=match$10[4],
           ed$9=match$10[3],
           af$9=match$10[2],
           fa$9=match$10[1],
           _g6_=function(param){caml_call1(af$9,0);return 0};
          return [0,
                  function(param){caml_call1(fa$9,0);return 0},
                  _g6_,
                  ed$9,
                  de$9];
         case 11:
          var
           rest$10=param[1],
           match$11=_aF_(rest$10),
           de$10=match$11[4],
           ed$10=match$11[3],
           af$10=match$11[2],
           fa$10=match$11[1],
           _g7_=function(param){caml_call1(af$10,0);return 0};
          return [0,
                  function(param){caml_call1(fa$10,0);return 0},
                  _g7_,
                  ed$10,
                  de$10];
         case 12:
          var
           rest$11=param[1],
           match$12=_aF_(rest$11),
           de$11=match$12[4],
           ed$11=match$12[3],
           af$11=match$12[2],
           fa$11=match$12[1],
           _g8_=function(param){caml_call1(af$11,0);return 0};
          return [0,
                  function(param){caml_call1(fa$11,0);return 0},
                  _g8_,
                  ed$11,
                  de$11];
         case 13:
          var
           rest$12=param[1],
           match$13=_aF_(rest$12),
           de$12=match$13[4],
           ed$12=match$13[3],
           af$12=match$13[2],
           fa$12=match$13[1],
           _g9_=function(param){caml_call1(de$12,0);return 0},
           _g__=function(param){caml_call1(ed$12,0);return 0},
           _g$_=function(param){caml_call1(af$12,0);return 0};
          return [0,
                  function(param){caml_call1(fa$12,0);return 0},
                  _g$_,
                  _g__,
                  _g9_];
         default:
          var
           rest$13=param[1],
           match$14=_aF_(rest$13),
           de$13=match$14[4],
           ed$13=match$14[3],
           af$13=match$14[2],
           fa$13=match$14[1],
           _ha_=function(param){caml_call1(de$13,0);return 0},
           _hb_=function(param){caml_call1(ed$13,0);return 0},
           _hc_=function(param){caml_call1(af$13,0);return 0};
          return [0,
                  function(param){caml_call1(fa$13,0);return 0},
                  _hc_,
                  _hb_,
                  _ha_]}}
    function _aG_(ty1,match)
     {if(typeof ty1 === "number")
       if(typeof match === "number")
        return 0;
       else
        switch(match[0])
         {case 10:var switch$0=0;break;
          case 11:var switch$0=1;break;
          case 12:var switch$0=2;break;
          case 13:var switch$0=3;break;
          case 14:var switch$0=4;break;
          case 8:var switch$0=5;break;
          case 9:var switch$0=6;break;
          default:throw [0,Assert_failure,_aH_]}
      else
       switch(ty1[0])
        {case 0:
          var _gy_=ty1[1];
          if(typeof match === "number")
           var switch$1=1;
          else
           switch(match[0])
            {case 0:var rest2=match[1];return [0,_aG_(_gy_,rest2)];
             case 8:var switch$0=5,switch$1=0;break;
             case 9:var switch$0=6,switch$1=0;break;
             case 10:var switch$0=0,switch$1=0;break;
             case 11:var switch$0=1,switch$1=0;break;
             case 12:var switch$0=2,switch$1=0;break;
             case 13:var switch$0=3,switch$1=0;break;
             case 14:var switch$0=4,switch$1=0;break;
             default:var switch$1=1}
          if(switch$1)var switch$0=7;
          break;
         case 1:
          var _gz_=ty1[1];
          if(typeof match === "number")
           var switch$2=1;
          else
           switch(match[0])
            {case 1:var rest2$0=match[1];return [1,_aG_(_gz_,rest2$0)];
             case 8:var switch$0=5,switch$2=0;break;
             case 9:var switch$0=6,switch$2=0;break;
             case 10:var switch$0=0,switch$2=0;break;
             case 11:var switch$0=1,switch$2=0;break;
             case 12:var switch$0=2,switch$2=0;break;
             case 13:var switch$0=3,switch$2=0;break;
             case 14:var switch$0=4,switch$2=0;break;
             default:var switch$2=1}
          if(switch$2)var switch$0=7;
          break;
         case 2:
          var _gA_=ty1[1];
          if(typeof match === "number")
           var switch$3=1;
          else
           switch(match[0])
            {case 2:var rest2$1=match[1];return [2,_aG_(_gA_,rest2$1)];
             case 8:var switch$0=5,switch$3=0;break;
             case 9:var switch$0=6,switch$3=0;break;
             case 10:var switch$0=0,switch$3=0;break;
             case 11:var switch$0=1,switch$3=0;break;
             case 12:var switch$0=2,switch$3=0;break;
             case 13:var switch$0=3,switch$3=0;break;
             case 14:var switch$0=4,switch$3=0;break;
             default:var switch$3=1}
          if(switch$3)var switch$0=7;
          break;
         case 3:
          var _gB_=ty1[1];
          if(typeof match === "number")
           var switch$4=1;
          else
           switch(match[0])
            {case 3:var rest2$2=match[1];return [3,_aG_(_gB_,rest2$2)];
             case 8:var switch$0=5,switch$4=0;break;
             case 9:var switch$0=6,switch$4=0;break;
             case 10:var switch$0=0,switch$4=0;break;
             case 11:var switch$0=1,switch$4=0;break;
             case 12:var switch$0=2,switch$4=0;break;
             case 13:var switch$0=3,switch$4=0;break;
             case 14:var switch$0=4,switch$4=0;break;
             default:var switch$4=1}
          if(switch$4)var switch$0=7;
          break;
         case 4:
          var _gC_=ty1[1];
          if(typeof match === "number")
           var switch$5=1;
          else
           switch(match[0])
            {case 4:var rest2$3=match[1];return [4,_aG_(_gC_,rest2$3)];
             case 8:var switch$0=5,switch$5=0;break;
             case 9:var switch$0=6,switch$5=0;break;
             case 10:var switch$0=0,switch$5=0;break;
             case 11:var switch$0=1,switch$5=0;break;
             case 12:var switch$0=2,switch$5=0;break;
             case 13:var switch$0=3,switch$5=0;break;
             case 14:var switch$0=4,switch$5=0;break;
             default:var switch$5=1}
          if(switch$5)var switch$0=7;
          break;
         case 5:
          var _gD_=ty1[1];
          if(typeof match === "number")
           var switch$6=1;
          else
           switch(match[0])
            {case 5:var rest2$4=match[1];return [5,_aG_(_gD_,rest2$4)];
             case 8:var switch$0=5,switch$6=0;break;
             case 9:var switch$0=6,switch$6=0;break;
             case 10:var switch$0=0,switch$6=0;break;
             case 11:var switch$0=1,switch$6=0;break;
             case 12:var switch$0=2,switch$6=0;break;
             case 13:var switch$0=3,switch$6=0;break;
             case 14:var switch$0=4,switch$6=0;break;
             default:var switch$6=1}
          if(switch$6)var switch$0=7;
          break;
         case 6:
          var _gE_=ty1[1];
          if(typeof match === "number")
           var switch$7=1;
          else
           switch(match[0])
            {case 6:var rest2$5=match[1];return [6,_aG_(_gE_,rest2$5)];
             case 8:var switch$0=5,switch$7=0;break;
             case 9:var switch$0=6,switch$7=0;break;
             case 10:var switch$0=0,switch$7=0;break;
             case 11:var switch$0=1,switch$7=0;break;
             case 12:var switch$0=2,switch$7=0;break;
             case 13:var switch$0=3,switch$7=0;break;
             case 14:var switch$0=4,switch$7=0;break;
             default:var switch$7=1}
          if(switch$7)var switch$0=7;
          break;
         case 7:
          var _gF_=ty1[1];
          if(typeof match === "number")
           var switch$8=1;
          else
           switch(match[0])
            {case 7:var rest2$6=match[1];return [7,_aG_(_gF_,rest2$6)];
             case 8:var switch$0=5,switch$8=0;break;
             case 9:var switch$0=6,switch$8=0;break;
             case 10:var switch$0=0,switch$8=0;break;
             case 11:var switch$0=1,switch$8=0;break;
             case 12:var switch$0=2,switch$8=0;break;
             case 13:var switch$0=3,switch$8=0;break;
             case 14:var switch$0=4,switch$8=0;break;
             default:var switch$8=1}
          if(switch$8)var switch$0=7;
          break;
         case 8:
          var _gG_=ty1[2],_gH_=ty1[1];
          if(typeof match === "number")
           var switch$9=1;
          else
           switch(match[0])
            {case 8:
              var rest2$7=match[2],ty2=match[1],_gI_=_aG_(_gG_,rest2$7);
              return [8,_aG_(_gH_,ty2),_gI_];
             case 10:var switch$0=0,switch$9=0;break;
             case 11:var switch$0=1,switch$9=0;break;
             case 12:var switch$0=2,switch$9=0;break;
             case 13:var switch$0=3,switch$9=0;break;
             case 14:var switch$0=4,switch$9=0;break;
             default:var switch$9=1}
          if(switch$9)throw [0,Assert_failure,_aQ_];
          break;
         case 9:
          var _gJ_=ty1[3],_gK_=ty1[2],_gL_=ty1[1];
          if(typeof match === "number")
           var switch$10=1;
          else
           switch(match[0])
            {case 8:var switch$0=5,switch$10=0;break;
             case 9:
              var
               rest2$8=match[3],
               ty22=match[2],
               ty21=match[1],
               ty=_aG_(_aE_(_gK_),ty21),
               match$0=_aF_(ty),
               f4=match$0[4],
               f2=match$0[2];
              caml_call1(f2,0);
              caml_call1(f4,0);
              return [9,_gL_,ty22,_aG_(_gJ_,rest2$8)];
             case 10:var switch$0=0,switch$10=0;break;
             case 11:var switch$0=1,switch$10=0;break;
             case 12:var switch$0=2,switch$10=0;break;
             case 13:var switch$0=3,switch$10=0;break;
             case 14:var switch$0=4,switch$10=0;break;
             default:var switch$10=1}
          if(switch$10)throw [0,Assert_failure,_aR_];
          break;
         case 10:
          var _gM_=ty1[1];
          if(typeof match !== "number" && 10 === match[0])
           {var rest2$9=match[1];return [10,_aG_(_gM_,rest2$9)]}
          throw [0,Assert_failure,_aS_];
         case 11:
          var _gN_=ty1[1];
          if(typeof match === "number")
           var switch$11=1;
          else
           switch(match[0])
            {case 10:var switch$0=0,switch$11=0;break;
             case 11:var rest2$10=match[1];return [11,_aG_(_gN_,rest2$10)];
             default:var switch$11=1}
          if(switch$11)throw [0,Assert_failure,_aT_];
          break;
         case 12:
          var _gO_=ty1[1];
          if(typeof match === "number")
           var switch$12=1;
          else
           switch(match[0])
            {case 10:var switch$0=0,switch$12=0;break;
             case 11:var switch$0=1,switch$12=0;break;
             case 12:var rest2$11=match[1];return [12,_aG_(_gO_,rest2$11)];
             default:var switch$12=1}
          if(switch$12)throw [0,Assert_failure,_aU_];
          break;
         case 13:
          var _gP_=ty1[1];
          if(typeof match === "number")
           var switch$13=1;
          else
           switch(match[0])
            {case 10:var switch$0=0,switch$13=0;break;
             case 11:var switch$0=1,switch$13=0;break;
             case 12:var switch$0=2,switch$13=0;break;
             case 13:var rest2$12=match[1];return [13,_aG_(_gP_,rest2$12)];
             default:var switch$13=1}
          if(switch$13)throw [0,Assert_failure,_aV_];
          break;
         default:
          var _gQ_=ty1[1];
          if(typeof match === "number")
           var switch$14=1;
          else
           switch(match[0])
            {case 10:var switch$0=0,switch$14=0;break;
             case 11:var switch$0=1,switch$14=0;break;
             case 12:var switch$0=2,switch$14=0;break;
             case 13:var switch$0=3,switch$14=0;break;
             case 14:var rest2$13=match[1];return [14,_aG_(_gQ_,rest2$13)];
             default:var switch$14=1}
          if(switch$14)throw [0,Assert_failure,_aW_]}
      switch(switch$0)
       {case 0:throw [0,Assert_failure,_aK_];
        case 1:throw [0,Assert_failure,_aL_];
        case 2:throw [0,Assert_failure,_aM_];
        case 3:throw [0,Assert_failure,_aN_];
        case 4:throw [0,Assert_failure,_aO_];
        case 5:throw [0,Assert_failure,_aI_];
        case 6:throw [0,Assert_failure,_aJ_];
        default:throw [0,Assert_failure,_aP_]}}
    var _aY_=caml_set_oo_id([248,_aX_,0]);
    function _aZ_(pad,match)
     {if(typeof pad === "number")
       return [0,0,match];
      else
       {if(0 === pad[0])
         {var w=pad[2],padty=pad[1];return [0,[0,padty,w],match]}
        if(typeof match !== "number" && 2 === match[0])
         {var rest=match[1],padty$0=pad[1];return [0,[1,padty$0],rest]}
        throw _aY_}}
    function _a0_(pad,prec,fmtty)
     {var match=_aZ_(pad,fmtty);
      if(typeof prec === "number")
       {if(0 === prec)
         {var rest=match[2],pad$0=match[1];return [0,pad$0,0,rest]}
        var _gx_=match[2];
        if(typeof _gx_ !== "number" && 2 === _gx_[0])
         {var rest$0=_gx_[1],pad$1=match[1];return [0,pad$1,1,rest$0]}
        throw _aY_}
      var rest$1=match[2],pad$2=match[1],p=prec[1];
      return [0,pad$2,[0,p],rest$1]}
    function _a2_(ign,fmt,fmtty)
     {var match=_a1_(fmt,fmtty),fmtty$0=match[2],fmt$0=match[1];
      return [0,[23,ign,fmt$0],fmtty$0]}
    function _a1_(fmt,fmtty)
     {if(typeof fmt === "number")
       return [0,0,fmtty];
      else
       switch(fmt[0])
        {case 0:
          if(typeof fmtty !== "number" && 0 === fmtty[0])
           {var
             fmtty_rest=fmtty[1],
             fmt_rest=fmt[1],
             match=_a1_(fmt_rest,fmtty_rest),
             fmtty$0=match[2],
             fmt$0=match[1];
            return [0,[0,fmt$0],fmtty$0]}
          break;
         case 1:
          if(typeof fmtty !== "number" && 0 === fmtty[0])
           {var
             fmtty_rest$0=fmtty[1],
             fmt_rest$0=fmt[1],
             match$0=_a1_(fmt_rest$0,fmtty_rest$0),
             fmtty$1=match$0[2],
             fmt$1=match$0[1];
            return [0,[1,fmt$1],fmtty$1]}
          break;
         case 2:
          var
           fmt_rest$1=fmt[2],
           pad=fmt[1],
           _f7_=_aZ_(pad,fmtty),
           _f8_=_f7_[2],
           _f9_=_f7_[1];
          if(typeof _f8_ !== "number" && 1 === _f8_[0])
           {var
             fmtty_rest$1=_f8_[1],
             match$1=_a1_(fmt_rest$1,fmtty_rest$1),
             fmtty$2=match$1[2],
             fmt$2=match$1[1];
            return [0,[2,_f9_,fmt$2],fmtty$2]}
          throw _aY_;
         case 3:
          var
           fmt_rest$2=fmt[2],
           pad$0=fmt[1],
           _f__=_aZ_(pad$0,fmtty),
           _f$_=_f__[2],
           _ga_=_f__[1];
          if(typeof _f$_ !== "number" && 1 === _f$_[0])
           {var
             fmtty_rest$2=_f$_[1],
             match$2=_a1_(fmt_rest$2,fmtty_rest$2),
             fmtty$3=match$2[2],
             fmt$3=match$2[1];
            return [0,[3,_ga_,fmt$3],fmtty$3]}
          throw _aY_;
         case 4:
          var
           fmt_rest$3=fmt[4],
           prec=fmt[3],
           pad$1=fmt[2],
           iconv=fmt[1],
           _gb_=_a0_(pad$1,prec,fmtty),
           _gc_=_gb_[3],
           _gd_=_gb_[2],
           _ge_=_gb_[1];
          if(typeof _gc_ !== "number" && 2 === _gc_[0])
           {var
             fmtty_rest$3=_gc_[1],
             match$3=_a1_(fmt_rest$3,fmtty_rest$3),
             fmtty$4=match$3[2],
             fmt$4=match$3[1];
            return [0,[4,iconv,_ge_,_gd_,fmt$4],fmtty$4]}
          throw _aY_;
         case 5:
          var
           fmt_rest$4=fmt[4],
           prec$0=fmt[3],
           pad$2=fmt[2],
           iconv$0=fmt[1],
           _gf_=_a0_(pad$2,prec$0,fmtty),
           _gg_=_gf_[3],
           _gh_=_gf_[2],
           _gi_=_gf_[1];
          if(typeof _gg_ !== "number" && 3 === _gg_[0])
           {var
             fmtty_rest$4=_gg_[1],
             match$4=_a1_(fmt_rest$4,fmtty_rest$4),
             fmtty$5=match$4[2],
             fmt$5=match$4[1];
            return [0,[5,iconv$0,_gi_,_gh_,fmt$5],fmtty$5]}
          throw _aY_;
         case 6:
          var
           fmt_rest$5=fmt[4],
           prec$1=fmt[3],
           pad$3=fmt[2],
           iconv$1=fmt[1],
           _gj_=_a0_(pad$3,prec$1,fmtty),
           _gk_=_gj_[3],
           _gl_=_gj_[2],
           _gm_=_gj_[1];
          if(typeof _gk_ !== "number" && 4 === _gk_[0])
           {var
             fmtty_rest$5=_gk_[1],
             match$5=_a1_(fmt_rest$5,fmtty_rest$5),
             fmtty$6=match$5[2],
             fmt$6=match$5[1];
            return [0,[6,iconv$1,_gm_,_gl_,fmt$6],fmtty$6]}
          throw _aY_;
         case 7:
          var
           fmt_rest$6=fmt[4],
           prec$2=fmt[3],
           pad$4=fmt[2],
           iconv$2=fmt[1],
           _gn_=_a0_(pad$4,prec$2,fmtty),
           _go_=_gn_[3],
           _gp_=_gn_[2],
           _gq_=_gn_[1];
          if(typeof _go_ !== "number" && 5 === _go_[0])
           {var
             fmtty_rest$6=_go_[1],
             match$6=_a1_(fmt_rest$6,fmtty_rest$6),
             fmtty$7=match$6[2],
             fmt$7=match$6[1];
            return [0,[7,iconv$2,_gq_,_gp_,fmt$7],fmtty$7]}
          throw _aY_;
         case 8:
          var
           fmt_rest$7=fmt[4],
           prec$3=fmt[3],
           pad$5=fmt[2],
           fconv=fmt[1],
           _gr_=_a0_(pad$5,prec$3,fmtty),
           _gs_=_gr_[3],
           _gt_=_gr_[2],
           _gu_=_gr_[1];
          if(typeof _gs_ !== "number" && 6 === _gs_[0])
           {var
             fmtty_rest$7=_gs_[1],
             match$7=_a1_(fmt_rest$7,fmtty_rest$7),
             fmtty$8=match$7[2],
             fmt$8=match$7[1];
            return [0,[8,fconv,_gu_,_gt_,fmt$8],fmtty$8]}
          throw _aY_;
         case 9:
          if(typeof fmtty !== "number" && 7 === fmtty[0])
           {var
             fmtty_rest$8=fmtty[1],
             fmt_rest$8=fmt[1],
             match$8=_a1_(fmt_rest$8,fmtty_rest$8),
             fmtty$9=match$8[2],
             fmt$9=match$8[1];
            return [0,[9,fmt$9],fmtty$9]}
          break;
         case 10:
          var
           fmt_rest$9=fmt[1],
           match$9=_a1_(fmt_rest$9,fmtty),
           fmtty$10=match$9[2],
           fmt$10=match$9[1];
          return [0,[10,fmt$10],fmtty$10];
         case 11:
          var
           fmt_rest$10=fmt[2],
           str=fmt[1],
           match$10=_a1_(fmt_rest$10,fmtty),
           fmtty$11=match$10[2],
           fmt$11=match$10[1];
          return [0,[11,str,fmt$11],fmtty$11];
         case 12:
          var
           fmt_rest$11=fmt[2],
           chr=fmt[1],
           match$11=_a1_(fmt_rest$11,fmtty),
           fmtty$12=match$11[2],
           fmt$12=match$11[1];
          return [0,[12,chr,fmt$12],fmtty$12];
         case 13:
          if(typeof fmtty !== "number" && 8 === fmtty[0])
           {var
             fmtty_rest$9=fmtty[2],
             sub_fmtty=fmtty[1],
             fmt_rest$12=fmt[3],
             sub_fmtty$0=fmt[2],
             pad_opt=fmt[1];
            if(caml_notequal([0,sub_fmtty$0],[0,sub_fmtty]))throw _aY_;
            var
             match$12=_a1_(fmt_rest$12,fmtty_rest$9),
             fmtty$13=match$12[2],
             fmt$13=match$12[1];
            return [0,[13,pad_opt,sub_fmtty,fmt$13],fmtty$13]}
          break;
         case 14:
          if(typeof fmtty !== "number" && 9 === fmtty[0])
           {var
             fmtty_rest$10=fmtty[3],
             sub_fmtty1=fmtty[1],
             fmt_rest$13=fmt[3],
             sub_fmtty$1=fmt[2],
             pad_opt$0=fmt[1],
             _gv_=[0,_a_(sub_fmtty1)];
            if(caml_notequal([0,_a_(sub_fmtty$1)],_gv_))throw _aY_;
            var
             match$13=_a1_(fmt_rest$13,_a_(fmtty_rest$10)),
             fmtty$14=match$13[2],
             fmt$14=match$13[1];
            return [0,[14,pad_opt$0,sub_fmtty1,fmt$14],fmtty$14]}
          break;
         case 15:
          if(typeof fmtty !== "number" && 10 === fmtty[0])
           {var
             fmtty_rest$11=fmtty[1],
             fmt_rest$14=fmt[1],
             match$14=_a1_(fmt_rest$14,fmtty_rest$11),
             fmtty$15=match$14[2],
             fmt$15=match$14[1];
            return [0,[15,fmt$15],fmtty$15]}
          break;
         case 16:
          if(typeof fmtty !== "number" && 11 === fmtty[0])
           {var
             fmtty_rest$12=fmtty[1],
             fmt_rest$15=fmt[1],
             match$15=_a1_(fmt_rest$15,fmtty_rest$12),
             fmtty$16=match$15[2],
             fmt$16=match$15[1];
            return [0,[16,fmt$16],fmtty$16]}
          break;
         case 17:
          var
           fmt_rest$16=fmt[2],
           formatting_lit=fmt[1],
           match$16=_a1_(fmt_rest$16,fmtty),
           fmtty$17=match$16[2],
           fmt$17=match$16[1];
          return [0,[17,formatting_lit,fmt$17],fmtty$17];
         case 18:
          var fmt_rest$17=fmt[2],formatting_gen=fmt[1];
          if(0 === formatting_gen[0])
           {var
             match$20=formatting_gen[1],
             str$0=match$20[2],
             fmt1=match$20[1],
             match$21=_a1_(fmt1,fmtty),
             fmtty2=match$21[2],
             fmt2=match$21[1],
             match$22=_a1_(fmt_rest$17,fmtty2),
             fmtty3=match$22[2],
             fmt3=match$22[1];
            return [0,[18,[0,[0,fmt2,str$0]],fmt3],fmtty3]}
          var
           match$23=formatting_gen[1],
           str$1=match$23[2],
           fmt1$0=match$23[1],
           match$24=_a1_(fmt1$0,fmtty),
           fmtty2$0=match$24[2],
           fmt2$0=match$24[1],
           match$25=_a1_(fmt_rest$17,fmtty2$0),
           fmtty3$0=match$25[2],
           fmt3$0=match$25[1];
          return [0,[18,[1,[0,fmt2$0,str$1]],fmt3$0],fmtty3$0];
         case 19:
          if(typeof fmtty !== "number" && 13 === fmtty[0])
           {var
             fmtty_rest$13=fmtty[1],
             fmt_rest$18=fmt[1],
             match$17=_a1_(fmt_rest$18,fmtty_rest$13),
             fmtty$18=match$17[2],
             fmt$18=match$17[1];
            return [0,[19,fmt$18],fmtty$18]}
          break;
         case 20:
          if(typeof fmtty !== "number" && 1 === fmtty[0])
           {var
             fmtty_rest$14=fmtty[1],
             fmt_rest$19=fmt[3],
             char_set=fmt[2],
             width_opt=fmt[1],
             match$18=_a1_(fmt_rest$19,fmtty_rest$14),
             fmtty$19=match$18[2],
             fmt$19=match$18[1];
            return [0,[20,width_opt,char_set,fmt$19],fmtty$19]}
          break;
         case 21:
          if(typeof fmtty !== "number" && 2 === fmtty[0])
           {var
             fmtty_rest$15=fmtty[1],
             fmt_rest$20=fmt[2],
             counter=fmt[1],
             match$19=_a1_(fmt_rest$20,fmtty_rest$15),
             fmtty$20=match$19[2],
             fmt$20=match$19[1];
            return [0,[21,counter,fmt$20],fmtty$20]}
          break;
         case 23:
          var rest=fmt[2],ign=fmt[1];
          if(typeof ign === "number")
           switch(ign)
            {case 0:return _a2_(ign,rest,fmtty);
             case 1:return _a2_(ign,rest,fmtty);
             case 2:return _a2_(ign,rest,fmtty);
             case 3:
              if(typeof fmtty !== "number" && 14 === fmtty[0])
               {var
                 fmtty_rest$16=fmtty[1],
                 match$26=_a1_(rest,fmtty_rest$16),
                 fmtty$21=match$26[2],
                 fmt$21=match$26[1];
                return [0,[23,3,fmt$21],fmtty$21]}
              throw _aY_;
             default:return _a2_(ign,rest,fmtty)}
          else
           switch(ign[0])
            {case 0:return _a2_(ign,rest,fmtty);
             case 1:return _a2_(ign,rest,fmtty);
             case 2:return _a2_(ign,rest,fmtty);
             case 3:return _a2_(ign,rest,fmtty);
             case 4:return _a2_(ign,rest,fmtty);
             case 5:return _a2_(ign,rest,fmtty);
             case 6:return _a2_(ign,rest,fmtty);
             case 7:
              var sub_fmtty$2=ign[2],pad_opt$1=ign[1];
              return _a2_([7,pad_opt$1,sub_fmtty$2],rest,fmtty);
             case 8:
              var
               sub_fmtty$3=ign[2],
               pad_opt$2=ign[1],
               _gw_=_a3_(sub_fmtty$3,rest,fmtty),
               match$27=_gw_[2],
               fmtty$22=match$27[2],
               fmt$22=match$27[1],
               sub_fmtty$4=_gw_[1];
              return [0,[23,[8,pad_opt$2,sub_fmtty$4],fmt$22],fmtty$22];
             case 9:return _a2_(ign,rest,fmtty);
             default:return _a2_(ign,rest,fmtty)}
         }
      throw _aY_}
    function _a3_(sub_fmtty,fmt,match)
     {if(typeof sub_fmtty === "number")
       return [0,0,_a1_(fmt,match)];
      else
       switch(sub_fmtty[0])
        {case 0:
          if(typeof match !== "number" && 0 === match[0])
           {var
             fmtty_rest=match[1],
             sub_fmtty_rest=sub_fmtty[1],
             match$0=_a3_(sub_fmtty_rest,fmt,fmtty_rest),
             fmt$0=match$0[2],
             sub_fmtty_rest$0=match$0[1];
            return [0,[0,sub_fmtty_rest$0],fmt$0]}
          break;
         case 1:
          if(typeof match !== "number" && 1 === match[0])
           {var
             fmtty_rest$0=match[1],
             sub_fmtty_rest$1=sub_fmtty[1],
             match$1=_a3_(sub_fmtty_rest$1,fmt,fmtty_rest$0),
             fmt$1=match$1[2],
             sub_fmtty_rest$2=match$1[1];
            return [0,[1,sub_fmtty_rest$2],fmt$1]}
          break;
         case 2:
          if(typeof match !== "number" && 2 === match[0])
           {var
             fmtty_rest$1=match[1],
             sub_fmtty_rest$3=sub_fmtty[1],
             match$2=_a3_(sub_fmtty_rest$3,fmt,fmtty_rest$1),
             fmt$2=match$2[2],
             sub_fmtty_rest$4=match$2[1];
            return [0,[2,sub_fmtty_rest$4],fmt$2]}
          break;
         case 3:
          if(typeof match !== "number" && 3 === match[0])
           {var
             fmtty_rest$2=match[1],
             sub_fmtty_rest$5=sub_fmtty[1],
             match$3=_a3_(sub_fmtty_rest$5,fmt,fmtty_rest$2),
             fmt$3=match$3[2],
             sub_fmtty_rest$6=match$3[1];
            return [0,[3,sub_fmtty_rest$6],fmt$3]}
          break;
         case 4:
          if(typeof match !== "number" && 4 === match[0])
           {var
             fmtty_rest$3=match[1],
             sub_fmtty_rest$7=sub_fmtty[1],
             match$4=_a3_(sub_fmtty_rest$7,fmt,fmtty_rest$3),
             fmt$4=match$4[2],
             sub_fmtty_rest$8=match$4[1];
            return [0,[4,sub_fmtty_rest$8],fmt$4]}
          break;
         case 5:
          if(typeof match !== "number" && 5 === match[0])
           {var
             fmtty_rest$4=match[1],
             sub_fmtty_rest$9=sub_fmtty[1],
             match$5=_a3_(sub_fmtty_rest$9,fmt,fmtty_rest$4),
             fmt$5=match$5[2],
             sub_fmtty_rest$10=match$5[1];
            return [0,[5,sub_fmtty_rest$10],fmt$5]}
          break;
         case 6:
          if(typeof match !== "number" && 6 === match[0])
           {var
             fmtty_rest$5=match[1],
             sub_fmtty_rest$11=sub_fmtty[1],
             match$6=_a3_(sub_fmtty_rest$11,fmt,fmtty_rest$5),
             fmt$6=match$6[2],
             sub_fmtty_rest$12=match$6[1];
            return [0,[6,sub_fmtty_rest$12],fmt$6]}
          break;
         case 7:
          if(typeof match !== "number" && 7 === match[0])
           {var
             fmtty_rest$6=match[1],
             sub_fmtty_rest$13=sub_fmtty[1],
             match$7=_a3_(sub_fmtty_rest$13,fmt,fmtty_rest$6),
             fmt$7=match$7[2],
             sub_fmtty_rest$14=match$7[1];
            return [0,[7,sub_fmtty_rest$14],fmt$7]}
          break;
         case 8:
          if(typeof match !== "number" && 8 === match[0])
           {var
             fmtty_rest$7=match[2],
             sub2_fmtty=match[1],
             sub_fmtty_rest$15=sub_fmtty[2],
             sub2_fmtty$0=sub_fmtty[1];
            if(caml_notequal([0,sub2_fmtty$0],[0,sub2_fmtty]))throw _aY_;
            var
             match$8=_a3_(sub_fmtty_rest$15,fmt,fmtty_rest$7),
             fmt$8=match$8[2],
             sub_fmtty_rest$16=match$8[1];
            return [0,[8,sub2_fmtty,sub_fmtty_rest$16],fmt$8]}
          break;
         case 9:
          if(typeof match !== "number" && 9 === match[0])
           {var
             fmtty_rest$8=match[3],
             sub2_fmtty$1=match[2],
             sub1_fmtty=match[1],
             sub_fmtty_rest$17=sub_fmtty[3],
             sub2_fmtty$2=sub_fmtty[2],
             sub1_fmtty$0=sub_fmtty[1],
             _f5_=[0,_a_(sub1_fmtty)];
            if(caml_notequal([0,_a_(sub1_fmtty$0)],_f5_))throw _aY_;
            var _f6_=[0,_a_(sub2_fmtty$1)];
            if(caml_notequal([0,_a_(sub2_fmtty$2)],_f6_))throw _aY_;
            var
             sub_fmtty$0=_aG_(_aE_(sub1_fmtty),sub2_fmtty$1),
             match$9=_aF_(sub_fmtty$0),
             f4=match$9[4],
             f2=match$9[2];
            caml_call1(f2,0);
            caml_call1(f4,0);
            var
             match$10=_a3_(_a_(sub_fmtty_rest$17),fmt,fmtty_rest$8),
             fmt$9=match$10[2],
             sub_fmtty_rest$18=match$10[1];
            return [0,
                    [9,sub1_fmtty,sub2_fmtty$1,_aE_(sub_fmtty_rest$18)],
                    fmt$9]}
          break;
         case 10:
          if(typeof match !== "number" && 10 === match[0])
           {var
             fmtty_rest$9=match[1],
             sub_fmtty_rest$19=sub_fmtty[1],
             match$11=_a3_(sub_fmtty_rest$19,fmt,fmtty_rest$9),
             fmt$10=match$11[2],
             sub_fmtty_rest$20=match$11[1];
            return [0,[10,sub_fmtty_rest$20],fmt$10]}
          break;
         case 11:
          if(typeof match !== "number" && 11 === match[0])
           {var
             fmtty_rest$10=match[1],
             sub_fmtty_rest$21=sub_fmtty[1],
             match$12=_a3_(sub_fmtty_rest$21,fmt,fmtty_rest$10),
             fmt$11=match$12[2],
             sub_fmtty_rest$22=match$12[1];
            return [0,[11,sub_fmtty_rest$22],fmt$11]}
          break;
         case 13:
          if(typeof match !== "number" && 13 === match[0])
           {var
             fmtty_rest$11=match[1],
             sub_fmtty_rest$23=sub_fmtty[1],
             match$13=_a3_(sub_fmtty_rest$23,fmt,fmtty_rest$11),
             fmt$12=match$13[2],
             sub_fmtty_rest$24=match$13[1];
            return [0,[13,sub_fmtty_rest$24],fmt$12]}
          break;
         case 14:
          if(typeof match !== "number" && 14 === match[0])
           {var
             fmtty_rest$12=match[1],
             sub_fmtty_rest$25=sub_fmtty[1],
             match$14=_a3_(sub_fmtty_rest$25,fmt,fmtty_rest$12),
             fmt$13=match$14[2],
             sub_fmtty_rest$26=match$14[1];
            return [0,[14,sub_fmtty_rest$26],fmt$13]}
          break
         }
      throw _aY_}
    function _a4_(padty,width,str)
     {var
       len=caml_ml_string_length(str),
       padty$0=0 <= width?padty:0,
       width$0=abs(width);
      if(width$0 <= len)return str;
      var _f4_=2 === padty$0?48:32,res=make(width$0,_f4_);
      switch(padty$0)
       {case 0:_x_(str,0,res,0,len);break;
        case 1:_x_(str,0,res,width$0 - len | 0,len);break;
        default:
         if(0 < len)
          {if(43 === caml_string_get(str,0))
            var switch$1=1;
           else
            if(45 === caml_string_get(str,0))
             var switch$1=1;
            else
             if(32 === caml_string_get(str,0))
              var switch$1=1;
             else
              var switch$0=0,switch$1=0;
           if(switch$1)
            {caml_string_set(res,0,caml_string_get(str,0));
             _x_(str,1,res,(width$0 - len | 0) + 1 | 0,len - 1 | 0);
             var switch$0=1}}
         else
          var switch$0=0;
         if(!switch$0)
          {if(1 < len)
            if(48 === caml_string_get(str,0))
             {if(120 === caml_string_get(str,1))
               var switch$3=1;
              else
               if(88 === caml_string_get(str,1))
                var switch$3=1;
               else
                var switch$2=0,switch$3=0;
              if(switch$3)
               {caml_string_set(res,1,caml_string_get(str,1));
                _x_(str,2,res,(width$0 - len | 0) + 2 | 0,len - 2 | 0);
                var switch$2=1}}
            else
             var switch$2=0;
           else
            var switch$2=0;
           if(!switch$2)_x_(str,0,res,width$0 - len | 0,len)}}
      return res}
    function _a5_(prec,str)
     {var
       prec$0=abs(prec),
       len=caml_ml_string_length(str),
       c=caml_string_get(str,0);
      if(58 <= c)
       var switch$0=71 <= c?5 < (c - 97 | 0) >>> 0?1:0:65 <= c?0:1;
      else
       {if(32 === c)
         var switch$1=1;
        else
         if(43 <= c)
          {var switcher=c - 43 | 0;
           switch(switcher)
            {case 5:
              if(len < (prec$0 + 2 | 0))
               if(1 < len)
                {var
                  switch$2=
                   120 === caml_string_get(str,1)
                    ?0
                    :88 === caml_string_get(str,1)?0:1;
                 if(!switch$2)
                  {var res$1=make(prec$0 + 2 | 0,48);
                   caml_string_set(res$1,1,caml_string_get(str,1));
                   _x_(str,2,res$1,(prec$0 - len | 0) + 4 | 0,len - 2 | 0);
                   return res$1}}
              var switch$0=0,switch$1=0;
              break;
             case 0:
             case 2:var switch$1=1;break;
             case 1:
             case 3:
             case 4:var switch$0=1,switch$1=0;break;
             default:var switch$0=0,switch$1=0}}
         else
          var switch$0=1,switch$1=0;
        if(switch$1)
         {if(len < (prec$0 + 1 | 0))
           {var res$0=make(prec$0 + 1 | 0,48);
            caml_string_set(res$0,0,c);
            _x_(str,1,res$0,(prec$0 - len | 0) + 2 | 0,len - 1 | 0);
            return res$0}
          var switch$0=1}}
      if(!switch$0)
       if(len < prec$0)
        {var res=make(prec$0,48);
         _x_(str,0,res,prec$0 - len | 0,len);
         return res}
      return str}
    function _a6_(str)
     {var i$1=0;
      for(;;)
       {if(caml_ml_string_length(str) <= i$1)
         var _f1_=0;
        else
         {var
           c$1=caml_string_unsafe_get(str,i$1),
           switch$0=
            14 <= c$1
             ?34 === c$1?1:92 === c$1?1:0
             :11 <= c$1?13 <= c$1?1:0:8 <= c$1?1:0;
          if(switch$0)
           var _f1_=1;
          else
           {if(caml_is_printable(c$1)){var i$2=i$1 + 1 | 0,i$1=i$2;continue}
            var _f1_=1}}
        if(_f1_)
         {var n=[0,0],_fU_=caml_ml_string_length(str) - 1 | 0,_fT_=0;
          if(!(_fU_ < 0))
           {var i$0=_fT_;
            for(;;)
             {var
               c$0=caml_string_unsafe_get(str,i$0),
               switch$1=
                14 <= c$0
                 ?34 === c$0?1:92 === c$0?1:0
                 :11 <= c$0?13 <= c$0?1:0:8 <= c$0?1:0,
               _fZ_=switch$1?2:caml_is_printable(c$0)?1:4;
              n[1] = n[1] + _fZ_ | 0;
              var _f0_=i$0 + 1 | 0;
              if(_fU_ !== i$0){var i$0=_f0_;continue}
              break}}
          if(n[1] === caml_ml_string_length(str))
           {var len=caml_ml_string_length(str),r=caml_create_string(len);
            caml_blit_string(str,0,r,0,len);
            var _f2_=r}
          else
           {var s=caml_create_string(n[1]);
            n[1] = 0;
            var _fW_=caml_ml_string_length(str) - 1 | 0,_fV_=0;
            if(!(_fW_ < 0))
             {var i=_fV_;
              for(;;)
               {var c=caml_string_unsafe_get(str,i),_fX_=c - 34 | 0;
                if(58 < _fX_ >>> 0)
                 if(-20 <= _fX_)
                  var switch$2=1;
                 else
                  {var switcher=_fX_ + 34 | 0;
                   switch(switcher)
                    {case 8:
                      caml_string_unsafe_set(s,n[1],92);
                      n[1]++;
                      caml_string_unsafe_set(s,n[1],98);
                      var switch$3=1;
                      break;
                     case 9:
                      caml_string_unsafe_set(s,n[1],92);
                      n[1]++;
                      caml_string_unsafe_set(s,n[1],116);
                      var switch$3=1;
                      break;
                     case 10:
                      caml_string_unsafe_set(s,n[1],92);
                      n[1]++;
                      caml_string_unsafe_set(s,n[1],110);
                      var switch$3=1;
                      break;
                     case 13:
                      caml_string_unsafe_set(s,n[1],92);
                      n[1]++;
                      caml_string_unsafe_set(s,n[1],114);
                      var switch$3=1;
                      break;
                     default:var switch$2=1,switch$3=0}
                   if(switch$3)var switch$2=0}
                else
                 var
                  switcher$0=_fX_ - 1 | 0,
                  switch$2=
                   56 < switcher$0 >>> 0
                    ?(caml_string_unsafe_set(s,n[1],92),
                      n[1]++,
                      caml_string_unsafe_set(s,n[1],c),
                      0)
                    :1;
                if(switch$2)
                 if(caml_is_printable(c))
                  caml_string_unsafe_set(s,n[1],c);
                 else
                  {caml_string_unsafe_set(s,n[1],92);
                   n[1]++;
                   caml_string_unsafe_set(s,n[1],48 + (c / 100 | 0) | 0);
                   n[1]++;
                   caml_string_unsafe_set
                    (s,n[1],48 + ((c / 10 | 0) % 10 | 0) | 0);
                   n[1]++;
                   caml_string_unsafe_set(s,n[1],48 + (c % 10 | 0) | 0)}
                n[1]++;
                var _fY_=i + 1 | 0;
                if(_fW_ !== i){var i=_fY_;continue}
                break}}
            var _f2_=s}
          var _f3_=_f2_}
        else
         var _f3_=str;
        return _D_(_f3_,_a7_)}}
    function _bj_(iconv,c)
     {switch(iconv)
       {case 0:var seps=_bk_;break;
        case 1:var seps=_bl_;break;
        case 2:var seps=_bm_;break;
        case 3:var seps=_bn_;break;
        case 4:var seps=_bo_;break;
        case 5:var seps=_bp_;break;
        case 6:var seps=_bq_;break;
        case 7:var seps=_br_;break;
        case 8:var seps=_bs_;break;
        case 9:var seps=_bt_;break;
        case 10:var seps=_bu_;break;
        case 11:var seps=_bv_;break;
        default:var seps=_bw_}
      return _D_(_C_(1,c),seps)}
    function _by_(iconv,n)
     {switch(iconv)
       {case 0:var _fS_=_a8_;break;
        case 1:var _fS_=_a9_;break;
        case 2:var _fS_=_a__;break;
        case 3:var _fS_=_a$_;break;
        case 4:var _fS_=_ba_;break;
        case 5:var _fS_=_bb_;break;
        case 6:var _fS_=_bc_;break;
        case 7:var _fS_=_bd_;break;
        case 8:var _fS_=_be_;break;
        case 9:var _fS_=_bf_;break;
        case 10:var _fS_=_bg_;break;
        case 11:var _fS_=_bh_;break;
        default:var _fS_=_bi_}
      return caml_format_int(_fS_,n)}
    function _bz_(iconv,n){return caml_format_int(_bj_(iconv,108),n)}
    function _bA_(iconv,n){return caml_format_int(_bj_(iconv,110),n)}
    function _bB_(iconv,n){return caml_int64_format(_bj_(iconv,76),n)}
    function _bC_(fconv,prec$0,x)
     {var prec$1=abs(prec$0);
      if(15 === fconv)
       var _fP_=_bx_;
      else
       {var prec=abs(prec$1);
        switch(fconv)
         {case 15:var symb=70;break;
          case 0:
          case 1:
          case 2:var symb=102;break;
          case 3:
          case 4:
          case 5:var symb=101;break;
          case 6:
          case 7:
          case 8:var symb=69;break;
          case 9:
          case 10:
          case 11:var symb=103;break;
          default:var symb=71}
        var buf=___(16);
        _aa_(buf,37);
        switch(fconv)
         {case 1:
          case 4:
          case 7:
          case 10:
          case 13:_aa_(buf,43);break;
          case 2:
          case 5:
          case 8:
          case 11:
          case 14:_aa_(buf,32);break
          }
        _aa_(buf,46);
        _ab_(buf,caml_new_string("" + prec));
        _aa_(buf,symb);
        var _fP_=_ac_(buf)}
      var str=caml_format_float(_fP_,x);
      if(15 === fconv)
       {var len=caml_ml_string_length(str),match$0=caml_classify_float(x);
        if(3 === match$0)return x < 0?_bD_:_bE_;
        if(4 <= match$0)return _bF_;
        var i=0;
        for(;;)
         {if(i === len)
           var _fR_=0;
          else
           {var
             match=caml_string_get(str,i),
             _fQ_=match - 46 | 0,
             switch$0=
              23 < _fQ_ >>> 0?55 === _fQ_?1:0:21 < (_fQ_ - 1 | 0) >>> 0?1:0;
            if(!switch$0){var i$0=i + 1 | 0,i=i$0;continue}
            var _fR_=1}
          return _fR_?str:_e_(str,_bG_)}}
      return str}
    function _bL_(k,o,acc,fmt,pad,match,trans,iconv)
     {if(typeof pad === "number")
       {if(typeof match === "number")
         return 0 === match
                 ?function(x)
                   {var str=caml_call2(trans,iconv,x);
                    return _bI_(k,o,[4,acc,str],fmt)}
                 :function(p,x)
                   {var str=_a5_(p,caml_call2(trans,iconv,x));
                    return _bI_(k,o,[4,acc,str],fmt)};
        var p=match[1];
        return function(x)
         {var str=_a5_(p,caml_call2(trans,iconv,x));
          return _bI_(k,o,[4,acc,str],fmt)}}
      else
       {if(0 === pad[0])
         {var _fM_=pad[2],_fN_=pad[1];
          if(typeof match === "number")
           return 0 === match
                   ?function(x)
                     {var str=_a4_(_fN_,_fM_,caml_call2(trans,iconv,x));
                      return _bI_(k,o,[4,acc,str],fmt)}
                   :function(p,x)
                     {var str=_a4_(_fN_,_fM_,_a5_(p,caml_call2(trans,iconv,x)));
                      return _bI_(k,o,[4,acc,str],fmt)};
          var p$0=match[1];
          return function(x)
           {var str=_a4_(_fN_,_fM_,_a5_(p$0,caml_call2(trans,iconv,x)));
            return _bI_(k,o,[4,acc,str],fmt)}}
        var _fO_=pad[1];
        if(typeof match === "number")
         return 0 === match
                 ?function(w,x)
                   {var str=_a4_(_fO_,w,caml_call2(trans,iconv,x));
                    return _bI_(k,o,[4,acc,str],fmt)}
                 :function(w,p,x)
                   {var str=_a4_(_fO_,w,_a5_(p,caml_call2(trans,iconv,x)));
                    return _bI_(k,o,[4,acc,str],fmt)};
        var p$1=match[1];
        return function(w,x)
         {var str=_a4_(_fO_,w,_a5_(p$1,caml_call2(trans,iconv,x)));
          return _bI_(k,o,[4,acc,str],fmt)}}}
    function _bK_(k,o,acc,fmt,pad,trans)
     {if(typeof pad === "number")
       return function(x)
        {var new_acc=[4,acc,caml_call1(trans,x)];
         return _bI_(k,o,new_acc,fmt)};
      else
       {if(0 === pad[0])
         {var width=pad[2],padty=pad[1];
          return function(x)
           {var new_acc=[4,acc,_a4_(padty,width,caml_call1(trans,x))];
            return _bI_(k,o,new_acc,fmt)}}
        var padty$0=pad[1];
        return function(w,x)
         {var new_acc=[4,acc,_a4_(padty$0,w,caml_call1(trans,x))];
          return _bI_(k,o,new_acc,fmt)}}}
    function _dk_(counter,k,o,acc,fmt)
     {var k$0=k,acc$0=acc,fmt$0=fmt;
      for(;;)
       if(typeof fmt$0 === "number")
        return caml_call2(k$0,o,acc$0);
       else
        switch(fmt$0[0])
         {case 0:
           var rest=fmt$0[1];
           return function(c)
            {var new_acc=[5,acc$0,c];return _bI_(k$0,o,new_acc,rest)};
          case 1:
           var rest$0=fmt$0[1];
           return function(c)
            {if(39 === c)
              var _fL_=_n_;
             else
              if(92 === c)
               var _fL_=_o_;
              else
               {if(14 <= c)
                 var switch$0=0;
                else
                 switch(c)
                  {case 8:var _fL_=_p_,switch$0=1;break;
                   case 9:var _fL_=_q_,switch$0=1;break;
                   case 10:var _fL_=_r_,switch$0=1;break;
                   case 13:var _fL_=_s_,switch$0=1;break;
                   default:var switch$0=0}
                if(!switch$0)
                 if(caml_is_printable(c))
                  {var s=caml_create_string(1);
                   caml_string_unsafe_set(s,0,c);
                   var _fL_=s}
                 else
                  {var s$0=caml_create_string(4);
                   caml_string_unsafe_set(s$0,0,92);
                   caml_string_unsafe_set(s$0,1,48 + (c / 100 | 0) | 0);
                   caml_string_unsafe_set
                    (s$0,2,48 + ((c / 10 | 0) % 10 | 0) | 0);
                   caml_string_unsafe_set(s$0,3,48 + (c % 10 | 0) | 0);
                   var _fL_=s$0}}
             var new_acc=[4,acc$0,_D_(_fL_,_bH_)];
             return _bI_(k$0,o,new_acc,rest$0)};
          case 2:
           var rest$1=fmt$0[2],pad=fmt$0[1];
           return _bK_(k$0,o,acc$0,rest$1,pad,function(str){return str});
          case 3:
           var rest$2=fmt$0[2],pad$0=fmt$0[1];
           return _bK_(k$0,o,acc$0,rest$2,pad$0,_a6_);
          case 4:
           var rest$3=fmt$0[4],prec=fmt$0[3],pad$1=fmt$0[2],iconv=fmt$0[1];
           return _bL_(k$0,o,acc$0,rest$3,pad$1,prec,_by_,iconv);
          case 5:
           var
            rest$4=fmt$0[4],
            prec$0=fmt$0[3],
            pad$2=fmt$0[2],
            iconv$0=fmt$0[1];
           return _bL_(k$0,o,acc$0,rest$4,pad$2,prec$0,_bz_,iconv$0);
          case 6:
           var
            rest$5=fmt$0[4],
            prec$1=fmt$0[3],
            pad$3=fmt$0[2],
            iconv$1=fmt$0[1];
           return _bL_(k$0,o,acc$0,rest$5,pad$3,prec$1,_bA_,iconv$1);
          case 7:
           var
            rest$6=fmt$0[4],
            prec$2=fmt$0[3],
            pad$4=fmt$0[2],
            iconv$2=fmt$0[1];
           return _bL_(k$0,o,acc$0,rest$6,pad$4,prec$2,_bB_,iconv$2);
          case 8:
           var rest$7=fmt$0[4],prec$3=fmt$0[3],pad$5=fmt$0[2],fconv=fmt$0[1];
           if(typeof pad$5 === "number")
            {if(typeof prec$3 === "number")
              return 0 === prec$3
                      ?function(x)
                        {var str=_bC_(fconv,_Z_,x);
                         return _bI_(k$0,o,[4,acc$0,str],rest$7)}
                      :function(p,x)
                        {var str=_bC_(fconv,p,x);
                         return _bI_(k$0,o,[4,acc$0,str],rest$7)};
             var p=prec$3[1];
             return function(x)
              {var str=_bC_(fconv,p,x);
               return _bI_(k$0,o,[4,acc$0,str],rest$7)}}
           else
            {if(0 === pad$5[0])
              {var _fG_=pad$5[2],_fH_=pad$5[1];
               if(typeof prec$3 === "number")
                return 0 === prec$3
                        ?function(x)
                          {var str=_bC_(fconv,_Z_,x),str$0=_a4_(_fH_,_fG_,str);
                           return _bI_(k$0,o,[4,acc$0,str$0],rest$7)}
                        :function(p,x)
                          {var str=_a4_(_fH_,_fG_,_bC_(fconv,p,x));
                           return _bI_(k$0,o,[4,acc$0,str],rest$7)};
               var p$0=prec$3[1];
               return function(x)
                {var str=_a4_(_fH_,_fG_,_bC_(fconv,p$0,x));
                 return _bI_(k$0,o,[4,acc$0,str],rest$7)}}
             var _fI_=pad$5[1];
             if(typeof prec$3 === "number")
              return 0 === prec$3
                      ?function(w,x)
                        {var str=_bC_(fconv,_Z_,x),str$0=_a4_(_fI_,w,str);
                         return _bI_(k$0,o,[4,acc$0,str$0],rest$7)}
                      :function(w,p,x)
                        {var str=_a4_(_fI_,w,_bC_(fconv,p,x));
                         return _bI_(k$0,o,[4,acc$0,str],rest$7)};
             var p$1=prec$3[1];
             return function(w,x)
              {var str=_a4_(_fI_,w,_bC_(fconv,p$1,x));
               return _bI_(k$0,o,[4,acc$0,str],rest$7)}}
          case 9:
           var rest$8=fmt$0[1];
           return function(b)
            {var _fK_=b?_f_:_g_;return _bI_(k$0,o,[4,acc$0,_fK_],rest$8)};
          case 10:
           var rest$9=fmt$0[1],acc$1=[7,acc$0],acc$0=acc$1,fmt$0=rest$9;
           continue;
          case 11:
           var
            rest$10=fmt$0[2],
            str=fmt$0[1],
            acc$2=[2,acc$0,str],
            acc$0=acc$2,
            fmt$0=rest$10;
           continue;
          case 12:
           var
            rest$11=fmt$0[2],
            chr=fmt$0[1],
            acc$3=[3,acc$0,chr],
            acc$0=acc$3,
            fmt$0=rest$11;
           continue;
          case 13:
           var rest$12=fmt$0[3],sub_fmtty=fmt$0[2],buf=___(16);
           _am_(buf,sub_fmtty);
           var ty=_ac_(buf);
           return function(str){return _bI_(k$0,o,[4,acc$0,ty],rest$12)};
          case 14:
           var rest$13=fmt$0[3],fmtty=fmt$0[2];
           return function(param)
            {var
              fmt$0=param[1],
              fmtty$0=_a_(_aE_(fmtty)),
              _fJ_=_a1_(fmt$0,fmtty$0);
             if(typeof _fJ_[2] === "number")
              {var fmt=_fJ_[1];return _bI_(k$0,o,acc$0,_c_(fmt,rest$13))}
             throw _aY_};
          case 15:
           var rest$14=fmt$0[1];
           return function(f,x)
            {return _bI_
                     (k$0,
                      o,
                      [6,acc$0,function(o){return caml_call2(f,o,x)}],
                      rest$14)};
          case 16:
           var rest$15=fmt$0[1];
           return function(f){return _bI_(k$0,o,[6,acc$0,f],rest$15)};
          case 17:
           var
            rest$16=fmt$0[2],
            fmting_lit=fmt$0[1],
            acc$4=[0,acc$0,fmting_lit],
            acc$0=acc$4,
            fmt$0=rest$16;
           continue;
          case 18:
           var _fE_=fmt$0[1];
           if(0 === _fE_[0])
            {var
              rest$17=fmt$0[2],
              match=_fE_[1],
              fmt$1=match[1],
              k$3=
               function(acc,k,rest)
                {function k$0(koc,kacc)
                  {return _bI_(k,koc,[1,acc,[0,kacc]],rest)}
                 return k$0},
              k$1=k$3(acc$0,k$0,rest$17),
              k$0=k$1,
              acc$0=0,
              fmt$0=fmt$1;
             continue}
           var
            rest$18=fmt$0[2],
            match$0=_fE_[1],
            fmt$2=match$0[1],
            k$4=
             function(acc,k,rest)
              {function k$0(koc,kacc)
                {return _bI_(k,koc,[1,acc,[1,kacc]],rest)}
               return k$0},
            k$2=k$4(acc$0,k$0,rest$18),
            k$0=k$2,
            acc$0=0,
            fmt$0=fmt$2;
           continue;
          case 19:throw [0,Assert_failure,_bN_];
          case 20:
           var rest$19=fmt$0[3],new_acc=[8,acc$0,_bO_];
           return function(param){return _bI_(k$0,o,new_acc,rest$19)};
          case 21:
           var rest$20=fmt$0[2];
           return function(n)
            {var new_acc=[4,acc$0,caml_format_int(_bP_,n)];
             return _bI_(k$0,o,new_acc,rest$20)};
          case 22:
           var rest$21=fmt$0[1];
           return function(c)
            {var new_acc=[5,acc$0,c];return _bI_(k$0,o,new_acc,rest$21)};
          case 23:
           var rest$22=fmt$0[2],ign=fmt$0[1];
           if(typeof ign === "number")
            switch(ign)
             {case 0:
               if(counter < 50)
                {var counter$1=counter + 1 | 0;
                 return _di_(counter$1,k$0,o,acc$0,rest$22)}
               return caml_trampoline_return(_di_,[0,k$0,o,acc$0,rest$22]);
              case 1:
               if(counter < 50)
                {var counter$2=counter + 1 | 0;
                 return _di_(counter$2,k$0,o,acc$0,rest$22)}
               return caml_trampoline_return(_di_,[0,k$0,o,acc$0,rest$22]);
              case 2:
               if(counter < 50)
                {var counter$3=counter + 1 | 0;
                 return _di_(counter$3,k$0,o,acc$0,rest$22)}
               return caml_trampoline_return(_di_,[0,k$0,o,acc$0,rest$22]);
              case 3:throw [0,Assert_failure,_bQ_];
              default:
               if(counter < 50)
                {var counter$4=counter + 1 | 0;
                 return _di_(counter$4,k$0,o,acc$0,rest$22)}
               return caml_trampoline_return(_di_,[0,k$0,o,acc$0,rest$22])}
           else
            switch(ign[0])
             {case 0:
               if(counter < 50)
                {var counter$5=counter + 1 | 0;
                 return _di_(counter$5,k$0,o,acc$0,rest$22)}
               return caml_trampoline_return(_di_,[0,k$0,o,acc$0,rest$22]);
              case 1:
               if(counter < 50)
                {var counter$6=counter + 1 | 0;
                 return _di_(counter$6,k$0,o,acc$0,rest$22)}
               return caml_trampoline_return(_di_,[0,k$0,o,acc$0,rest$22]);
              case 2:
               if(counter < 50)
                {var counter$7=counter + 1 | 0;
                 return _di_(counter$7,k$0,o,acc$0,rest$22)}
               return caml_trampoline_return(_di_,[0,k$0,o,acc$0,rest$22]);
              case 3:
               if(counter < 50)
                {var counter$8=counter + 1 | 0;
                 return _di_(counter$8,k$0,o,acc$0,rest$22)}
               return caml_trampoline_return(_di_,[0,k$0,o,acc$0,rest$22]);
              case 4:
               if(counter < 50)
                {var counter$9=counter + 1 | 0;
                 return _di_(counter$9,k$0,o,acc$0,rest$22)}
               return caml_trampoline_return(_di_,[0,k$0,o,acc$0,rest$22]);
              case 5:
               if(counter < 50)
                {var counter$10=counter + 1 | 0;
                 return _di_(counter$10,k$0,o,acc$0,rest$22)}
               return caml_trampoline_return(_di_,[0,k$0,o,acc$0,rest$22]);
              case 6:
               if(counter < 50)
                {var counter$11=counter + 1 | 0;
                 return _di_(counter$11,k$0,o,acc$0,rest$22)}
               return caml_trampoline_return(_di_,[0,k$0,o,acc$0,rest$22]);
              case 7:
               if(counter < 50)
                {var counter$12=counter + 1 | 0;
                 return _di_(counter$12,k$0,o,acc$0,rest$22)}
               return caml_trampoline_return(_di_,[0,k$0,o,acc$0,rest$22]);
              case 8:
               var fmtty$0=ign[2];
               if(counter < 50)
                {var counter$15=counter + 1 | 0;
                 return _dj_(counter$15,k$0,o,acc$0,fmtty$0,rest$22)}
               return caml_trampoline_return
                       (_dj_,[0,k$0,o,acc$0,fmtty$0,rest$22]);
              case 9:
               if(counter < 50)
                {var counter$13=counter + 1 | 0;
                 return _di_(counter$13,k$0,o,acc$0,rest$22)}
               return caml_trampoline_return(_di_,[0,k$0,o,acc$0,rest$22]);
              default:
               if(counter < 50)
                {var counter$14=counter + 1 | 0;
                 return _di_(counter$14,k$0,o,acc$0,rest$22)}
               return caml_trampoline_return(_di_,[0,k$0,o,acc$0,rest$22])}
          default:
           var
            rest$23=fmt$0[3],
            f=fmt$0[2],
            arity=fmt$0[1],
            _fF_=caml_call1(f,0);
           if(counter < 50)
            {var counter$0=counter + 1 | 0;
             return _dh_(counter$0,k$0,o,acc$0,rest$23,arity,_fF_)}
           return caml_trampoline_return
                   (_dh_,[0,k$0,o,acc$0,rest$23,arity,_fF_])}}
    function _dj_(counter,k,o,acc,fmtty,fmt)
     {if(typeof fmtty === "number")
       {if(counter < 50)
         {var counter$0=counter + 1 | 0;return _di_(counter$0,k,o,acc,fmt)}
        return caml_trampoline_return(_di_,[0,k,o,acc,fmt])}
      else
       switch(fmtty[0])
        {case 0:
          var rest=fmtty[1];
          return function(param){return _bJ_(k,o,acc,rest,fmt)};
         case 1:
          var rest$0=fmtty[1];
          return function(param){return _bJ_(k,o,acc,rest$0,fmt)};
         case 2:
          var rest$1=fmtty[1];
          return function(param){return _bJ_(k,o,acc,rest$1,fmt)};
         case 3:
          var rest$2=fmtty[1];
          return function(param){return _bJ_(k,o,acc,rest$2,fmt)};
         case 4:
          var rest$3=fmtty[1];
          return function(param){return _bJ_(k,o,acc,rest$3,fmt)};
         case 5:
          var rest$4=fmtty[1];
          return function(param){return _bJ_(k,o,acc,rest$4,fmt)};
         case 6:
          var rest$5=fmtty[1];
          return function(param){return _bJ_(k,o,acc,rest$5,fmt)};
         case 7:
          var rest$6=fmtty[1];
          return function(param){return _bJ_(k,o,acc,rest$6,fmt)};
         case 8:
          var rest$7=fmtty[2];
          return function(param){return _bJ_(k,o,acc,rest$7,fmt)};
         case 9:
          var
           rest$8=fmtty[3],
           ty2=fmtty[2],
           ty1=fmtty[1],
           ty=_aG_(_aE_(ty1),ty2);
          return function(param){return _bJ_(k,o,acc,_b_(ty,rest$8),fmt)};
         case 10:
          var rest$9=fmtty[1];
          return function(param,_fD_){return _bJ_(k,o,acc,rest$9,fmt)};
         case 11:
          var rest$10=fmtty[1];
          return function(param){return _bJ_(k,o,acc,rest$10,fmt)};
         case 12:
          var rest$11=fmtty[1];
          return function(param){return _bJ_(k,o,acc,rest$11,fmt)};
         case 13:throw [0,Assert_failure,_bR_];
         default:throw [0,Assert_failure,_bS_]}}
    function _di_(counter,k,o,acc,fmt)
     {var _fC_=[8,acc,_bT_];
      if(counter < 50)
       {var counter$0=counter + 1 | 0;return _dk_(counter$0,k,o,_fC_,fmt)}
      return caml_trampoline_return(_dk_,[0,k,o,_fC_,fmt])}
    function _dh_(counter,k,o,acc,rest,arity,f)
     {if(arity)
       {var arity$0=arity[1];
        return function(x){return _bM_(k,o,acc,rest,arity$0,caml_call1(f,x))}}
      var _fB_=[4,acc,f];
      if(counter < 50)
       {var counter$0=counter + 1 | 0;return _dk_(counter$0,k,o,_fB_,rest)}
      return caml_trampoline_return(_dk_,[0,k,o,_fB_,rest])}
    function _bI_(k,o,acc,fmt){return caml_trampoline(_dk_(0,k,o,acc,fmt))}
    function _bJ_(k,o,acc,fmtty,fmt)
     {return caml_trampoline(_dj_(0,k,o,acc,fmtty,fmt))}
    function _bM_(k,o,acc,rest,arity,f)
     {return caml_trampoline(_dh_(0,k,o,acc,rest,arity,f))}
    function _bU_(o,acc)
     {var acc$0=acc;
      for(;;)
       if(typeof acc$0 === "number")
        return 0;
       else
        switch(acc$0[0])
         {case 0:
           var fmting_lit=acc$0[2],p=acc$0[1],s=_ad_(fmting_lit);
           _bU_(o,p);
           return output_string(o,s);
          case 1:
           var _fz_=acc$0[2],_fA_=acc$0[1];
           if(0 === _fz_[0])
            {var acc$1=_fz_[1];
             _bU_(o,_fA_);
             output_string(o,_bV_);
             var acc$0=acc$1;
             continue}
           var acc$2=_fz_[1];
           _bU_(o,_fA_);
           output_string(o,_bW_);
           var acc$0=acc$2;
           continue;
          case 6:
           var f=acc$0[2],p$2=acc$0[1];_bU_(o,p$2);return caml_call1(f,o);
          case 7:var p$3=acc$0[1];_bU_(o,p$3);return caml_ml_flush(o);
          case 8:
           var msg=acc$0[2],p$4=acc$0[1];_bU_(o,p$4);return invalid_arg(msg);
          case 2:
          case 4:
           var s$0=acc$0[2],p$0=acc$0[1];
           _bU_(o,p$0);
           return output_string(o,s$0);
          default:
           var c=acc$0[2],p$1=acc$0[1];
           _bU_(o,p$1);
           return caml_ml_output_char(o,c)}}
    function _bX_(b,acc)
     {var acc$0=acc;
      for(;;)
       if(typeof acc$0 === "number")
        return 0;
       else
        switch(acc$0[0])
         {case 0:
           var fmting_lit=acc$0[2],p=acc$0[1],s=_ad_(fmting_lit);
           _bX_(b,p);
           return _Y_(b,s);
          case 1:
           var _fx_=acc$0[2],_fy_=acc$0[1];
           if(0 === _fx_[0])
            {var acc$1=_fx_[1];
             _bX_(b,_fy_);
             _Y_(b,_bY_);
             var acc$0=acc$1;
             continue}
           var acc$2=_fx_[1];
           _bX_(b,_fy_);
           _Y_(b,_bZ_);
           var acc$0=acc$2;
           continue;
          case 6:
           var f=acc$0[2],p$2=acc$0[1];
           _bX_(b,p$2);
           return _Y_(b,caml_call1(f,0));
          case 7:var p$3=acc$0[1],acc$0=p$3;continue;
          case 8:
           var msg=acc$0[2],p$4=acc$0[1];_bX_(b,p$4);return invalid_arg(msg);
          case 2:
          case 4:var s$0=acc$0[2],p$0=acc$0[1];_bX_(b,p$0);return _Y_(b,s$0);
          default:
           var c=acc$0[2],p$1=acc$0[1];
           _bX_(b,p$1);
           var pos=b[2];
           if(b[3] <= pos)_W_(b,1);
           caml_string_unsafe_set(b[1],pos,c);
           b[2] = pos + 1 | 0;
           return 0}}
    function _b0_(oc,fmt$0)
     {var fmt=fmt$0[1],_fw_=0;
      return _bI_(function(o,acc){_bU_(o,acc);return 0},oc,_fw_,fmt)}
    function _b1_(fmt$0)
     {var fmt=fmt$0[1];
      function k(param,acc){var b=_V_(64);_bX_(b,acc);return _u_(b[1],0,b[2])}
      return _bI_(k,0,0,fmt)}
    var printers=[0,0];
    function field(x,i$1)
     {var f=x[i$1 + 1];
      if(caml_obj_is_block(f))
       {if(caml_obj_tag(f) === 252)return caml_call1(_b1_(_b2_),f);
        if(caml_obj_tag(f) === 253)
         {var s=caml_format_float(_i_,f),l=caml_ml_string_length(s),i=0;
          for(;;)
           {if(l <= i)return _e_(s,_h_);
            var
             match=caml_string_get(s,i),
             switch$0=48 <= match?58 <= match?0:1:45 === match?1:0;
            if(switch$0){var i$0=i + 1 | 0,i=i$0;continue}
            return s}}
        return _b3_}
      return caml_call1(_b1_(_b4_),f)}
    function other_fields(x,i)
     {if(x.length - 1 <= i)return _b5_;
      var _fu_=other_fields(x,i + 1 | 0),_fv_=field(x,i);
      return caml_call2(_b1_(_b6_),_fv_,_fu_)}
    function fields(x)
     {var n=x.length - 1;
      if(2 < n >>> 0)
       {var _fr_=other_fields(x,2),_fs_=field(x,1);
        return caml_call2(_b1_(_b7_),_fs_,_fr_)}
      switch(n)
       {case 0:return _b8_;
        case 1:return _b9_;
        default:var _ft_=field(x,1);return caml_call1(_b1_(_b__),_ft_)}}
    function to_string(x)
     {function conv(param)
       {var param$0=param;
        for(;;)
         {if(param$0)
           {var tl=param$0[2],hd=param$0[1];
            try {var _fp_=caml_call1(hd,x),_fo_=_fp_}catch(_fq_){var _fo_=0}
            if(_fo_){var s=_fo_[1];return s}
            var param$0=tl;
            continue}
          if(x === Out_of_memory)return _b$_;
          if(x === Stack_overflow)return _ca_;
          if(x[1] === Match_failure)
           {var match=x[2],char$0=match[3],line=match[2],file=match[1];
            return caml_call5
                    (_b1_(locfmt),file,line,char$0,char$0 + 5 | 0,_cb_)}
          if(x[1] === Assert_failure)
           {var
             match$0=x[2],
             char$1=match$0[3],
             line$0=match$0[2],
             file$0=match$0[1];
            return caml_call5
                    (_b1_(locfmt),file$0,line$0,char$1,char$1 + 6 | 0,_cc_)}
          if(x[1] === Undefined_recursive_module)
           {var
             match$1=x[2],
             char$2=match$1[3],
             line$1=match$1[2],
             file$1=match$1[1];
            return caml_call5
                    (_b1_(locfmt),file$1,line$1,char$2,char$2 + 6 | 0,_cd_)}
          if(0 === caml_obj_tag(x))
           {var constructor=x[1][1];return _e_(constructor,fields(x))}
          return x[1]}}
      return conv(printers[1])}
    function convert_raw_backtrace(rbckt)
     {try
       {var
         _fl_=
          [0,
           _k_
            (function(_fn_){return caml_convert_raw_backtrace_slot(_fn_)},
             rbckt)];
        return _fl_}
      catch(_fm_)
       {_fm_ = caml_wrap_exception(_fm_);
        if(_fm_[1] === Failure)return 0;
        throw _fm_}}
    function print_backtrace(outchan)
     {var
       raw_backtrace=caml_get_exception_raw_backtrace(0),
       backtrace=convert_raw_backtrace(raw_backtrace);
      if(backtrace)
       {var a=backtrace[1],_fj_=a.length - 1 - 1 | 0,_fi_=0;
        if(!(_fj_ < 0))
         {var i=_fi_;
          for(;;)
           {var
             slot=caml_check_bound(a,i)[i + 1],
             info$0=
              function(i)
               {function info(is_raise)
                 {return is_raise?0 === i?_ce_:_cf_:0 === i?_cg_:_ch_}
                return info},
             info=info$0(i);
            if(0 === slot[0])
             var
              endchar=slot[5],
              startchar=slot[4],
              lineno=slot[3],
              filename=slot[2],
              is_raise=slot[1],
              _fg_=info(is_raise),
              match=
               [0,
                caml_call5(_b1_(_ci_),_fg_,filename,lineno,startchar,endchar)];
            else
             if(0 === slot[1])
              var _fh_=info(0),match=[0,caml_call1(_b1_(_cj_),_fh_)];
             else
              var match=0;
            if(match){var str=match[1];caml_call1(_b0_(outchan,_ck_),str)}
            var _fk_=i + 1 | 0;
            if(_fj_ !== i){var i=_fk_;continue}
            break}}
        return 0}
      return _b0_(outchan,_cl_)}
    function register_printer(fn){printers[1] = [0,fn,printers[1]];return 0}
    try
     {var _dg_=caml_sys_getenv(_df_),params=_dg_}
    catch(_fe_)
     {_fe_ = caml_wrap_exception(_fe_);
      if(_fe_ !== Not_found)throw _fe_;
      try
       {var _de_=caml_sys_getenv(_dd_),_cn_=_de_}
      catch(_ff_)
       {_ff_ = caml_wrap_exception(_ff_);
        if(_ff_ !== Not_found)throw _ff_;
        var _cn_=_cm_}
      var params=_cn_}
    _F_(params,82);
    function add_queue(x,q)
     {var c=[0,[0,x,0]],_fd_=q[1];
      if(_fd_){var cell=_fd_[1];q[1] = c;cell[2] = c;return 0}
      q[1] = c;
      q[2] = c;
      return 0}
    var Empty_queue=caml_set_oo_id([248,_co_,0]);
    function take_queue(q)
     {var _fc_=q[2];
      if(_fc_)
       {var match=_fc_[1],x=match[1],tl=match[2];
        q[2] = tl;
        if(0 === tl)q[1] = 0;
        return x}
      throw Empty_queue}
    function pp_enqueue(state,token)
     {var len=token[3];
      state[13] = state[13] + len | 0;
      return add_queue(token,state[27])}
    var pp_infinity=1000000010;
    function pp_output_string(state,s)
     {return caml_call3(state[17],s,0,caml_ml_string_length(s))}
    function pp_output_newline(state){return caml_call1(state[19],0)}
    function pp_output_spaces(state,n){return caml_call1(state[20],n)}
    function break_new_line(state,offset,width)
     {pp_output_newline(state);
      state[11] = 1;
      var
       y=(state[6] - width | 0) + offset | 0,
       _fb_=state[8],
       real_indent=caml_lessequal(_fb_,y)?_fb_:y;
      state[10] = real_indent;
      state[9] = state[6] - state[10] | 0;
      return pp_output_spaces(state,state[10])}
    function break_line(state,width){return break_new_line(state,0,width)}
    function break_same_line(state,width)
     {state[9] = state[9] - width | 0;return pp_output_spaces(state,width)}
    function pp_force_break_line(state)
     {var _e__=state[2];
      if(_e__)
       {var
         match=_e__[1],
         width=match[2],
         bl_ty=match[1],
         _e$_=state[9] < width?1:0;
        if(_e$_)
         {if(0 !== bl_ty)return 5 <= bl_ty?0:break_line(state,width);
          var _fa_=0}
        else
         var _fa_=_e$_;
        return _fa_}
      return pp_output_newline(state)}
    function pp_skip_token(state)
     {var match=take_queue(state[27]),size=match[1],len=match[3];
      state[12] = state[12] - len | 0;
      state[9] = state[9] + size | 0;
      return 0}
    function format_pp_token(state,size,param)
     {if(typeof param === "number")
       switch(param)
        {case 0:
          var _eZ_=state[3];
          if(_eZ_)
           {var
             match=_eZ_[1],
             tabs=match[1],
             add_tab=
              function(n,ls)
               {if(ls)
                 {var l=ls[2],x=ls[1];
                  return caml_lessthan(n,x)?[0,n,ls]:[0,x,add_tab(n,l)]}
                return [0,n,0]};
            tabs[1] = add_tab(state[6] - state[9] | 0,tabs[1]);
            return 0}
          return 0;
         case 1:
          var _e0_=state[2];
          if(_e0_){var ls=_e0_[2];state[2] = ls;return 0}
          return 0;
         case 2:
          var _e1_=state[3];
          if(_e1_){var ls$0=_e1_[2];state[3] = ls$0;return 0}
          return 0;
         case 3:
          var _e2_=state[2];
          if(_e2_)
           {var match$0=_e2_[1],width=match$0[2];
            return break_line(state,width)}
          return pp_output_newline(state);
         case 4:
          var _e3_=state[10] !== (state[6] - state[9] | 0)?1:0;
          return _e3_?pp_skip_token(state):_e3_;
         default:
          var _e4_=state[5];
          if(_e4_)
           {var
             tags=_e4_[2],
             tag_name=_e4_[1],
             marker=caml_call1(state[24],tag_name);
            pp_output_string(state,marker);
            state[5] = tags;
            return 0}
          return 0}
      else
       switch(param[0])
        {case 0:
          var s=param[1];
          state[9] = state[9] - size | 0;
          pp_output_string(state,s);
          state[11] = 0;
          return 0;
         case 1:
          var off=param[2],n=param[1],_e5_=state[2];
          if(_e5_)
           {var match$1=_e5_[1],width$0=match$1[2],ty=match$1[1];
            switch(ty)
             {case 0:return break_same_line(state,n);
              case 1:return break_new_line(state,off,width$0);
              case 2:return break_new_line(state,off,width$0);
              case 3:
               return state[9] < size
                       ?break_new_line(state,off,width$0)
                       :break_same_line(state,n);
              case 4:
               return state[11]
                       ?break_same_line(state,n)
                       :state[9] < size
                         ?break_new_line(state,off,width$0)
                         :((state[6] - width$0 | 0) + off | 0) < state[10]
                           ?break_new_line(state,off,width$0)
                           :break_same_line(state,n);
              default:return break_same_line(state,n)}}
          return 0;
         case 2:
          var
           off$0=param[2],
           n$0=param[1],
           insertion_point=state[6] - state[9] | 0,
           _e6_=state[3];
          if(_e6_)
           {var
             match$2=_e6_[1],
             tabs$0=match$2[1],
             find=
              function(n,param)
               {var param$0=param;
                for(;;)
                 {if(param$0)
                   {var l=param$0[2],x=param$0[1];
                    if(caml_greaterequal(x,n))return x;
                    var param$0=l;
                    continue}
                  throw Not_found}},
             _e7_=tabs$0[1];
            if(_e7_)
             {var x=_e7_[1];
              try
               {var _e8_=find(insertion_point,tabs$0[1]),x$0=_e8_}
              catch(_e9_)
               {_e9_ = caml_wrap_exception(_e9_);
                if(_e9_ !== Not_found)throw _e9_;
                var x$0=x}
              var tab=x$0}
            else
             var tab=insertion_point;
            var offset=tab - insertion_point | 0;
            return 0 <= offset
                    ?break_same_line(state,offset + n$0 | 0)
                    :break_new_line(state,tab + off$0 | 0,state[6])}
          return 0;
         case 3:
          var
           ty$0=param[2],
           off$1=param[1],
           insertion_point$0=state[6] - state[9] | 0;
          if(state[8] < insertion_point$0)pp_force_break_line(state);
          var
           offset$0=state[9] - off$1 | 0,
           bl_type=1 === ty$0?1:state[9] < size?ty$0:5;
          state[2] = [0,[0,bl_type,offset$0],state[2]];
          return 0;
         case 4:var tbox=param[1];state[3] = [0,tbox,state[3]];return 0;
         default:
          var tag_name$0=param[1],marker$0=caml_call1(state[23],tag_name$0);
          pp_output_string(state,marker$0);
          state[5] = [0,tag_name$0,state[5]];
          return 0}}
    function advance_loop(state)
     {for(;;)
       {var _eV_=state[27][2];
        if(_eV_)
         {var
           match=_eV_[1],
           x=match[1],
           size=x[1],
           len=x[3],
           tok=x[2],
           _eW_=size < 0?1:0,
           _eX_=_eW_?(state[13] - state[12] | 0) < state[9]?1:0:_eW_,
           _eY_=1 - _eX_;
          if(_eY_)
           {take_queue(state[27]);
            var size$0=0 <= size?size:pp_infinity;
            format_pp_token(state,size$0,tok);
            state[12] = len + state[12] | 0;
            continue}
          return _eY_}
        throw Empty_queue}}
    function advance_left(state)
     {try
       {var _eT_=advance_loop(state);return _eT_}
      catch(_eU_)
       {_eU_ = caml_wrap_exception(_eU_);
        if(_eU_ === Empty_queue)return 0;
        throw _eU_}}
    var q_elem=[0,-1,_cp_,0],scan_stack_bottom=[0,[0,-1,q_elem],0];
    function clear_scan_stack(state){state[1] = scan_stack_bottom;return 0}
    function set_size(state,ty)
     {var _eP_=state[1];
      if(_eP_)
       {var
         match=_eP_[1],
         queue_elem=match[2],
         left_tot=match[1],
         size=queue_elem[1],
         t=_eP_[2],
         tok=queue_elem[2];
        if(left_tot < state[12])return clear_scan_stack(state);
        if(typeof tok !== "number")
         switch(tok[0])
          {case 3:
            var
             _eR_=1 - ty,
             _eS_=
              _eR_?(queue_elem[1] = state[13] + size | 0,state[1] = t,0):_eR_;
            return _eS_;
           case 1:
           case 2:
            var
             _eQ_=
              ty?(queue_elem[1] = state[13] + size | 0,state[1] = t,0):ty;
            return _eQ_
           }
        return 0}
      return 0}
    var blank_line=_C_(80,32);
    function default_pp_mark_open_tag(s){return _e_(_cs_,_e_(s,_cr_))}
    function default_pp_mark_close_tag(s){return _e_(_cu_,_e_(s,_ct_))}
    function default_pp_print_open_tag(_eO_){return 0}
    function default_pp_print_close_tag(_eN_){return 0}
    function make_formatter(output,flush)
     {function i(_eM_){return 0}
      function h(_eL_){return 0}
      var pp_q=[0,0,0],sys_tok=[0,-1,_cv_,0];
      add_queue(sys_tok,pp_q);
      var
       sys_scan_stack=[0,[0,1,sys_tok],scan_stack_bottom],
       ppf=
        [0,
         sys_scan_stack,
         0,
         0,
         0,
         0,
         78,
         10,
         68,
         78,
         0,
         1,
         1,
         1,
         1,
         max_int,
         _cw_,
         output,
         flush,
         h,
         i,
         0,
         0,
         default_pp_mark_open_tag,
         default_pp_mark_close_tag,
         default_pp_print_open_tag,
         default_pp_print_close_tag,
         pp_q];
      ppf[19] = function(_eK_){return caml_call3(ppf[17],_cq_,0,1)};
      ppf[20]
      =
      function(n$1)
       {var n=n$1;
        for(;;)
         {var _eJ_=0 < n?1:0;
          if(_eJ_)
           {if(80 < n)
             {caml_call3(ppf[17],blank_line,0,80);
              var n$0=n - 80 | 0,n=n$0;
              continue}
            return caml_call3(ppf[17],blank_line,0,n)}
          return _eJ_}};
      return ppf}
    function formatter_of_out_channel(oc)
     {function _eI_(param){return caml_ml_flush(oc)}
      return make_formatter
              (function(s,ofs,len)
                {if(0 <= ofs)
                  if(0 <= len)
                   if(!((caml_ml_string_length(s) - len | 0) < ofs))
                    return caml_ml_output(oc,s,ofs,len);
                 return invalid_arg(_j_)},
               _eI_)}
    function formatter_of_buffer(b)
     {function _eD_(_eH_){return 0}
      return make_formatter
              (function(s,offset,len)
                {var _eE_=offset < 0?1:0;
                 if(_eE_)
                  var _eF_=_eE_;
                 else
                  var
                   _eG_=len < 0?1:0,
                   _eF_=
                    _eG_
                    ||
                    (caml_ml_string_length(s) < (offset + len | 0)?1:0);
                 if(_eF_)invalid_arg(_X_);
                 var new_position=b[2] + len | 0;
                 if(b[3] < new_position)_W_(b,len);
                 _x_(s,offset,b[1],b[2],len);
                 b[2] = new_position;
                 return 0},
               _eD_)}
    var stdbuf=_V_(512),state=formatter_of_out_channel(stdout);
    formatter_of_out_channel(stderr);
    formatter_of_buffer(stdbuf);
    function print_flush(_eC_)
     {for(;;)
       {if(1 < state[14])
         {if(1 < state[14])
           {if(state[14] < state[15])
             {pp_enqueue(state,[0,0,1,0]);set_size(state,1);set_size(state,0)}
            state[14] = state[14] - 1 | 0}
          continue}
        state[13] = pp_infinity;
        advance_left(state);
        state[12] = 1;
        state[13] = 1;
        var _eA_=state[27];
        _eA_[1] = 0;
        _eA_[2] = 0;
        clear_scan_stack(state);
        state[2] = 0;
        state[3] = 0;
        state[4] = 0;
        state[5] = 0;
        state[10] = 0;
        state[14] = 0;
        state[9] = state[6];
        state[14] = state[14] + 1 | 0;
        var br_ty=3,indent=0;
        if(state[14] < state[15])
         {var tok$0=[0,-state[13] | 0,[3,indent,br_ty],0];
          pp_enqueue(state,tok$0);
          state[1] = [0,[0,state[13],tok$0],state[1]]}
        else
         if(state[14] === state[15])
          {var
            _eB_=state[16],
            size=caml_ml_string_length(_eB_),
            tok=[0,size,[0,_eB_],size];
           pp_enqueue(state,tok);
           advance_left(state)}
        return caml_call1(state[18],0)}}
    at_exit(print_flush);
    function _cx_(name,exn)
     {var slot=caml_obj_tag(exn) === 248?exn:exn[1];
      return caml_register_named_value(name,slot)}
    caml_set_oo_id([248,_cy_,0]);
    function _cz_(param)
     {var seq=[];caml_update_dummy(seq,[0,seq,seq]);return seq}
    var
     Canceled=caml_set_oo_id([248,_cA_,0]),
     Int_map=_Q_([0,caml_compare]),
     current_data=[0,Int_map[1]];
    function repr_rec(t)
     {var _ez_=t[1];
      if(3 === _ez_[0])
       {var t$0=_ez_[1],t$1=repr_rec(t$0);
        if(t$1 !== t$0)t[1] = [3,t$1];
        return t$1}
      return t}
    function repr(t){return repr_rec(t)}
    var
     async_exception_hook=
      [0,
       function(exn)
        {prerr_string(_cB_);
         prerr_string(to_string(exn));
         caml_ml_output_char(stderr,10);
         print_backtrace(stderr);
         caml_ml_flush(stderr);
         do_at_exit(0);
         return caml_sys_exit(2)}];
    function call_unsafe(f,x)
     {try
       {var _ey_=caml_call1(f,x);return _ey_}
      catch(exn)
       {exn = caml_wrap_exception(exn);
        return caml_call1(async_exception_hook[1],exn)}}
    function run_waiters_rec$0(counter,state,ws,rem)
     {var ws$0=ws,rem$0=rem;
      for(;;)
       if(typeof ws$0 === "number")
        {if(counter < 50)
          {var counter$0=counter + 1 | 0;
           return run_waiters_rec_next(counter$0,state,rem$0)}
         return caml_trampoline_return(run_waiters_rec_next,[0,state,rem$0])}
       else
        switch(ws$0[0])
         {case 0:
           var _ex_=ws$0[1][1];
           if(_ex_)
            {var f=_ex_[1];
             caml_call1(f,state);
             if(counter < 50)
              {var counter$1=counter + 1 | 0;
               return run_waiters_rec_next(counter$1,state,rem$0)}
             return caml_trampoline_return
                     (run_waiters_rec_next,[0,state,rem$0])}
           if(counter < 50)
            {var counter$2=counter + 1 | 0;
             return run_waiters_rec_next(counter$2,state,rem$0)}
           return caml_trampoline_return(run_waiters_rec_next,[0,state,rem$0]);
          case 1:
           var f$0=ws$0[1];
           caml_call1(f$0,state);
           if(counter < 50)
            {var counter$3=counter + 1 | 0;
             return run_waiters_rec_next(counter$3,state,rem$0)}
           return caml_trampoline_return(run_waiters_rec_next,[0,state,rem$0]);
          default:
           var
            ws2=ws$0[2],
            ws1=ws$0[1],
            rem$1=[0,ws2,rem$0],
            ws$0=ws1,
            rem$0=rem$1;
           continue}}
    function run_waiters_rec_next(counter,state,rem)
     {if(rem)
       {var rem$0=rem[2],ws=rem[1];
        if(counter < 50)
         {var counter$0=counter + 1 | 0;
          return run_waiters_rec$0(counter$0,state,ws,rem$0)}
        return caml_trampoline_return(run_waiters_rec$0,[0,state,ws,rem$0])}
      return 0}
    function run_waiters_rec(state,ws,rem)
     {return caml_trampoline(run_waiters_rec$0(0,state,ws,rem))}
    function run_cancel_handlers_rec$0(counter,chs,rem)
     {var chs$0=chs,rem$0=rem;
      for(;;)
       if(typeof chs$0 === "number")
        {if(counter < 50)
          {var counter$0=counter + 1 | 0;
           return run_cancel_handlers_rec_next(counter$0,rem$0)}
         return caml_trampoline_return(run_cancel_handlers_rec_next,[0,rem$0])}
       else
        switch(chs$0[0])
         {case 0:
           var f=chs$0[2],data=chs$0[1];
           current_data[1] = data;
           call_unsafe(f,0);
           if(counter < 50)
            {var counter$1=counter + 1 | 0;
             return run_cancel_handlers_rec_next(counter$1,rem$0)}
           return caml_trampoline_return
                   (run_cancel_handlers_rec_next,[0,rem$0]);
          case 1:
           var n=chs$0[1];
           if(n[4]){n[4] = 0;n[1][2] = n[2];n[2][1] = n[1]}
           if(counter < 50)
            {var counter$2=counter + 1 | 0;
             return run_cancel_handlers_rec_next(counter$2,rem$0)}
           return caml_trampoline_return
                   (run_cancel_handlers_rec_next,[0,rem$0]);
          default:
           var
            chs2=chs$0[2],
            chs1=chs$0[1],
            rem$1=[0,chs2,rem$0],
            chs$0=chs1,
            rem$0=rem$1;
           continue}}
    function run_cancel_handlers_rec_next(counter,rem)
     {if(rem)
       {var rem$0=rem[2],chs=rem[1];
        if(counter < 50)
         {var counter$0=counter + 1 | 0;
          return run_cancel_handlers_rec$0(counter$0,chs,rem$0)}
        return caml_trampoline_return(run_cancel_handlers_rec$0,[0,chs,rem$0])}
      return 0}
    function run_cancel_handlers_rec(chs,rem)
     {return caml_trampoline(run_cancel_handlers_rec$0(0,chs,rem))}
    function unsafe_run_waiters(sleeper,state)
     {var
       switch$0=
        1 === state[0]
         ?state[1] === Canceled?(run_cancel_handlers_rec(sleeper[4],0),1):0
         :0;
      return run_waiters_rec(state,sleeper[2],0)}
    var wakening=[0,0],q=_T_(0);
    function wakeup(t$0,v)
     {var t=repr_rec(t$0),_ew_=t[1];
      switch(_ew_[0])
       {case 1:if(_ew_[1] === Canceled)return 0;break;
        case 2:
         var sleeper=_ew_[1],state=[0,v];
         t[1] = state;
         var
          snapshot=current_data[1],
          already_wakening=wakening[1]?1:(wakening[1] = 1,0);
         unsafe_run_waiters(sleeper,state);
         if(already_wakening){current_data[1] = snapshot;return 0}
         for(;;)
          {if(0 === q[1]){wakening[1] = 0;current_data[1] = snapshot;return 0}
           if(0 === q[1])throw _S_;
           q[1] = q[1] - 1 | 0;
           var tail=q[2],head=tail[2];
           if(head === tail)q[2] = 0;else tail[2] = head[2];
           var _ev_=head[1];
           unsafe_run_waiters(_ev_[1],_ev_[2]);
           continue}
        }
      return invalid_arg(_cC_)}
    function append(l1,l2)
     {return typeof l1 === "number"?l2:typeof l2 === "number"?l1:[2,l1,l2]}
    function cleanup(ws)
     {if(typeof ws !== "number")
       switch(ws[0])
        {case 0:if(!ws[1][1])return 0;break;
         case 2:
          var l2=ws[2],l1=ws[1],_eu_=cleanup(l2);
          return append(cleanup(l1),_eu_)
         }
      return ws}
    function connect(t1,t2)
     {var t1$0=repr(t1),t2$0=repr(t2),_ep_=t1$0[1];
      if(2 === _ep_[0])
       {var sleeper1=_ep_[1];
        if(t1$0 === t2$0)return 0;
        var _eq_=t2$0[1];
        if(2 === _eq_[0])
         {var sleeper2=_eq_[1];
          t2$0[1] = [3,t1$0];
          sleeper1[1] = sleeper2[1];
          var
           waiters=append(sleeper1[2],sleeper2[2]),
           removed=sleeper1[3] + sleeper2[3] | 0;
          if(42 < removed)
           {sleeper1[3] = 0;sleeper1[2] = cleanup(waiters)}
          else
           {sleeper1[3] = removed;sleeper1[2] = waiters}
          var
           _er_=sleeper2[4],
           _es_=sleeper1[4],
           _et_=
            typeof _es_ === "number"
             ?_er_
             :typeof _er_ === "number"?_es_:[2,_es_,_er_];
          sleeper1[4] = _et_;
          return 0}
        t1$0[1] = _eq_;
        return unsafe_run_waiters(sleeper1,_eq_)}
      throw [0,Assert_failure,_cD_]}
    function fast_connect(t,state)
     {var t$0=repr(t),_eo_=t$0[1];
      if(2 === _eo_[0])
       {var sleeper=_eo_[1];
        t$0[1] = state;
        return unsafe_run_waiters(sleeper,state)}
      throw [0,Assert_failure,_cE_]}
    function fail(e){return [0,[1,e]]}
    function task(param){var t=[0,[2,[0,1,0,0,0]]];return [0,t,t]}
    function add_immutable_waiter(sleeper,waiter$0)
     {var
       waiter$1=[1,waiter$0],
       _en_=sleeper[2],
       waiter=typeof _en_ === "number"?waiter$1:[2,waiter$1,_en_];
      sleeper[2] = waiter;
      return 0}
    function bind(t,f)
     {var t$0=repr(t),_ek_=t$0[1];
      switch(_ek_[0])
       {case 0:var v=_ek_[1];return caml_call1(f,v);
        case 1:return [0,_ek_];
        case 2:
         var
          sleeper=_ek_[1],
          res=[0,[2,[0,[0,[0,t$0]],0,0,0]]],
          data=current_data[1];
         add_immutable_waiter
          (sleeper,
           function(state)
            {switch(state[0])
              {case 0:
                var v=state[1];
                current_data[1] = data;
                try
                 {var _em_=caml_call1(f,v),_el_=_em_}
                catch(exn){exn = caml_wrap_exception(exn);var _el_=fail(exn)}
                return connect(res,_el_);
               case 1:return fast_connect(res,state);
               default:throw [0,Assert_failure,_cF_]}});
         return res;
        default:throw [0,Assert_failure,_cG_]}}
    var pause_hook=[0,function(_ej_){return 0}],s1=_cz_(0),_cJ_=[0,0];
    function _cK_(param)
     {if(s1[2] === s1){_cJ_[1] = 0;return 0}
      var seq=_cz_(0);
      seq[1][2] = s1[2];
      s1[2][1] = seq[1];
      seq[1] = s1[1];
      s1[1][2] = seq;
      s1[1] = s1;
      s1[2] = s1;
      _cJ_[1] = 0;
      var curr=seq[2];
      for(;;)
       {var _ei_=curr !== seq?1:0;
        if(_ei_)
         {if(curr[4])wakeup(curr[3],0);
          var curr$0=curr[2],curr=curr$0;
          continue}
        return _ei_}}
    var window=joo_global_object,no_handler=null,undefined$0=undefined;
    function _cL_(f){pause_hook[1] = f;return 0}
    function _cM_(x){return 1 - (x == no_handler?1:0)}
    var
     true$0=true,
     false$0=false,
     array_length=window.Array,
     date_ms=window.Date,
     Error=caml_set_oo_id([248,_cN_,0]);
    _cx_(_cO_,[0,Error,{}]);
    (function(exn){throw exn});
    register_printer
     (function(param)
       {if(param[1] === Error)
         {var e=param[2];return [0,caml_js_to_string(e.toString())]}
        return 0});
    register_printer
     (function(e)
       {return e instanceof array_length?0:[0,caml_js_to_string(e.toString())]});
    function add(p,n){p.appendChild(n);return 0}
    function handler(f)
     {return function(e)
       {if(_cM_(e))
         {var res=caml_call1(f,e);
          if(1 - (res | 0))e.preventDefault();
          return res}
        var e$0=event,res$0=caml_call1(f,e$0);
        if(1 - (res$0 | 0))e$0.returnValue = res$0;
        return res$0}}
    function addEventListener(e,typ,h,capt)
     {if(e.addEventListener === undefined$0)
       {var
         ev="on".concat(typ),
         callback=
          function(e)
           {var _ef_=[0,h,e,[0]];
            return function(_eg_,_eh_){return caml_js_call(_ef_,_eg_,_eh_)}};
        e.attachEvent(ev,callback);
        return function(param){return e.detachEvent(ev,callback)}}
      e.addEventListener(typ,h,capt);
      return function(param){return e.removeEventListener(typ,h,capt)}}
    function f(id){return caml_call1(id,0)}
    var mouseup="mouseup",mousemove="mousemove",d="2d",doc=window.document;
    function opt_iter(x,f){if(x){var v=x[1];return caml_call1(f,v)}return 0}
    function createElement(doc,name)
     {return doc.createElement(name.toString())}
    function unsafeCreateElement(doc,name){return createElement(doc,name)}
    var createElementSyntax=[0,785140586];
    function unsafeCreateElementEx(type,name,doc$0,elt)
     {for(;;)
       {if(0 === type)if(0 === name)return createElement(doc$0,elt);
        var _d$_=createElementSyntax[1];
        if(785140586 === _d$_)
         {try
           {var
             el=doc.createElement('<input name="x">'),
             _ec_=el.tagName.toLowerCase() === "input"?1:0,
             _ed_=_ec_?el.name === "x"?1:0:_ec_,
             _ea_=_ed_}
          catch(_ee_){var _ea_=0}
          var _eb_=_ea_?982028505:-1003883683;
          createElementSyntax[1] = _eb_;
          continue}
        if(982028505 <= _d$_)
         {var a=new array_length();
          a.push("<",elt.toString());
          opt_iter
           (type,
            function(t){a.push(' type="',caml_js_html_escape(t),'"');return 0});
          opt_iter
           (name,
            function(n){a.push(' name="',caml_js_html_escape(n),'"');return 0});
          a.push(">");
          return doc$0.createElement(a.join(""))}
        var res=createElement(doc$0,elt);
        opt_iter(type,function(t){return res.type = t});
        opt_iter(name,function(n){return res.name = n});
        return res}}
    function createInput(type,name,doc)
     {return unsafeCreateElementEx(type,name,doc,_cR_)}
    function createLabel(doc){return unsafeCreateElement(doc,_cS_)}
    function createDiv(doc){return unsafeCreateElement(doc,_cT_)}
    var
     Canvas_not_available=caml_set_oo_id([248,_cX_,0]),
     html_element=window.HTMLElement;
    html_element === undefined$0;
    var _cZ_=2147483e3,_c0_=caml_js_get_console(0);
    function sleep(d)
     {var match=task(0),w=match[2],t=match[1],d$0=d * 1e3;
      function callback(_d__){return wakeup(w,_d__)}
      var id=[0,0];
      function loop(d,param)
       {var
         match=2147483e3 < d?[0,_cZ_,d - 2147483e3]:[0,d,0],
         remain=match[2],
         step=match[1],
         cb=remain == 0?callback:function(_d9_){return loop(remain,_d9_)};
        id[1] = [0,window.setTimeout(caml_js_wrap_callback(cb),step)];
        return 0}
      loop(d$0,0);
      function f(param)
       {var _d8_=id[1];
        if(_d8_){var x=_d8_[1];id[1] = 0;return window.clearTimeout(x)}
        return 0}
      var _d6_=repr(t)[1];
      switch(_d6_[0])
       {case 1:var switch$0=_d6_[1] === Canceled?(call_unsafe(f,0),1):0;break;
        case 2:
         var
          sleeper=_d6_[1],
          handler=[0,current_data[1],f],
          _d7_=sleeper[4],
          handler$0=typeof _d7_ === "number"?handler:[2,handler,_d7_];
         sleeper[4] = handler$0;
         var switch$0=1;
         break;
        default:var switch$0=0}
      return t}
    function wakeup$0(param)
     {return 1 === param
              ?(window.setTimeout(caml_js_wrap_callback(_cK_),0),0)
              :0}
    _cL_(wakeup$0);
    function _c1_(s){return _c0_.log(s.toString())}
    async_exception_hook[1]
    =
    function(exn)
     {_c1_(_c2_);_c1_(to_string(exn));return print_backtrace(stderr)};
    var
     button_type="button",
     height=600,
     obliquity=0.410152374218667459,
     dark=0.0400000000000000078;
    function toggle_button(txt1,txt2,action)
     {var
       state=[0,0],
       txt1$0=txt1.toString(),
       txt2$0=txt2.toString(),
       b=createInput([0,button_type],0,doc);
      b.value = txt1$0;
      b.onclick
      =
      handler
       (function(param)
         {state[1] = 1 - state[1];
          var txt2=state[1]?txt2$0:txt1$0;
          b.value = txt2;
          caml_call1(action,state[1]);
          return true$0});
      return b}
    function checkbox(txt,checked,action)
     {var b=createInput([0,"checkbox"],0,doc);
      b.checked = !!checked;
      b.onclick
      =
      handler(function(param){caml_call1(action,b.checked | 0);return true$0});
      var lab=createLabel(doc);
      add(lab,b);
      add(lab,doc.createTextNode(txt.toString()));
      return lab}
    function vect(param,_d5_)
     {var
       z2=_d5_[3],
       y2=_d5_[2],
       x2=_d5_[1],
       z1=param[3],
       y1=param[2],
       x1=param[1];
      return [254,x2 - x1,y2 - y1,z2 - z1]}
    function matrix_vect_mul(m,param)
     {var
       z=param[3],
       y=param[2],
       x=param[1],
       r3=m[3],
       r2=m[2],
       r1=m[1],
       x$0=x * r1[1] + y * r1[2] + z * r1[3],
       y$0=x * r2[1] + y * r2[2] + z * r2[3],
       z$0=x * r3[1] + y * r3[2] + z * r3[3];
      return [254,x$0,y$0,z$0]}
    function matrix_transp(m)
     {var r3=m[3],r2=m[2],r1=m[1];
      return [0,
              [254,r1[1],r2[1],r3[1]],
              [254,r1[2],r2[2],r3[2]],
              [254,r1[3],r2[3],r3[3]]]}
    function matrix_mul(m$0,m)
     {var
       m$1=matrix_transp(m),
       _d3_=matrix_vect_mul(m$1,m$0[3]),
       _d4_=matrix_vect_mul(m$1,m$0[2]);
      return [0,matrix_vect_mul(m$1,m$0[1]),_d4_,_d3_]}
    function xz_rotation(phi)
     {var cos_phi=Math.cos(phi),sin_phi=Math.sin(phi);
      return [0,[254,cos_phi,0,sin_phi],[254,0,1,0],[254,-sin_phi,0,cos_phi]]}
    function xy_rotation(phi)
     {var cos_phi=Math.cos(phi),sin_phi=Math.sin(phi);
      return [0,[254,cos_phi,sin_phi,0],[254,-sin_phi,cos_phi,0],[254,0,0,1]]}
    var matrix_identity=xz_rotation(0);
    function rotate_normal(m,v){return matrix_vect_mul(matrix_transp(m),v)}
    function rotate_object(m,o)
     {var _d1_=o[2],_d2_=o[1];
      return [0,_k_(function(v){return matrix_vect_mul(m,v)},_d2_),_d1_]}
    function tesselate_sphere(p_div,t_div)
     {var
       p_delta=6.28318530717958623 / p_div,
       t_delta=3.14159265358979312 / t_div,
       t_offset=(3.14159265358979312 - t_delta) / 2,
       north=caml_mul(t_div,p_div),
       vertices=caml_make_vect(north + 2 | 0,[254,0,0,0]),
       faces=caml_make_vect(north * 2 | 0,[0,0,0,0]),
       south=north + 1 | 0;
      caml_check_bound(vertices,north)[north + 1] = [254,0,-1,0];
      caml_check_bound(vertices,south)[south + 1] = [254,0,1,0];
      var _dN_=p_div - 1 | 0,_dM_=0;
      if(!(_dN_ < 0))
       {var i=_dM_;
        for(;;)
         {var _dP_=t_div - 1 | 0,_dO_=0;
          if(!(_dP_ < 0))
           {var j=_dO_;
            for(;;)
             {var
               phi=i * p_delta,
               theta=j * t_delta - t_offset,
               x=Math.cos(phi) * Math.cos(theta),
               y=Math.sin(theta),
               z=Math.sin(phi) * Math.cos(theta),
               k=caml_mul(i,t_div) + j | 0;
              caml_check_bound(vertices,k)[k + 1] = [254,x,y,z];
              if(0 === j)
               {var
                 _dS_=2 * k | 0,
                 _dR_=[0,north,k,caml_mod(k + t_div | 0,north)];
                caml_check_bound(faces,_dS_)[_dS_ + 1] = _dR_;
                var
                 _dU_=(2 * k | 0) + 1 | 0,
                 _dT_=
                  [0,
                   south,
                   caml_mod((k + (2 * t_div | 0) | 0) - 1 | 0,north),
                   (k + t_div | 0) - 1 | 0];
                caml_check_bound(faces,_dU_)[_dU_ + 1] = _dT_}
              else
               {var
                 _dX_=2 * k | 0,
                 _dW_=[0,k,caml_mod(k + t_div | 0,north),k - 1 | 0];
                caml_check_bound(faces,_dX_)[_dX_ + 1] = _dW_;
                var
                 _dY_=caml_mod((k + t_div | 0) - 1 | 0,north),
                 _d0_=(2 * k | 0) + 1 | 0,
                 _dZ_=[0,k - 1 | 0,caml_mod(k + t_div | 0,north),_dY_];
                caml_check_bound(faces,_d0_)[_d0_ + 1] = _dZ_}
              var _dV_=j + 1 | 0;
              if(_dP_ !== j){var j=_dV_;continue}
              break}}
          var _dQ_=i + 1 | 0;
          if(_dN_ !== i){var i=_dQ_;continue}
          break}}
      return [0,vertices,faces]}
    function create_canvas(w,h)
     {var c=unsafeCreateElement(doc,_cY_);
      if(1 - _cM_(c.getContext))throw Canvas_not_available;
      c.width = w;
      c.height = h;
      return c}
    function min(u,v){return u < v?u:v}
    function max(u,v){return u < v?v:u}
    function draw(ctx,img,shd,o,uv,normals,face_info,dir)
     {var _dL_=o[2],_dJ_=_dL_.length - 1 - 1 | 0,_dI_=0;
      if(!(_dJ_ < 0))
       {var i=_dI_;
        for(;;)
         {var
           param=_dL_[i + 1],
           v3=param[3],
           v2=param[2],
           v1=param[1],
           match=caml_check_bound(o[1],v1)[v1 + 1],
           y1$0=match[2],
           x1$0=match[1],
           match$0=caml_check_bound(o[1],v2)[v2 + 1],
           y2$0=match$0[2],
           x2$0=match$0[1],
           match$1=caml_check_bound(o[1],v3)[v3 + 1],
           y3=match$1[2],
           x3=match$1[1],
           param$0=caml_check_bound(normals,i)[i + 1],
           z2=dir[3],
           y2=dir[2],
           x2=dir[1],
           z1=param$0[3],
           y1=param$0[2],
           x1=param$0[1];
          if(0 <= x1 * x2 + y1 * y2 + z1 * z2)
           {ctx.beginPath();
            ctx.moveTo(x1$0,y1$0);
            ctx.lineTo(x2$0,y2$0);
            ctx.lineTo(x3,y3);
            ctx.closePath();
            ctx.save();
            ctx.clip();
            var
             match$2=caml_check_bound(face_info,i)[i + 1],
             dv=match$2[10],
             du=match$2[9],
             v=match$2[8],
             u=match$2[7],
             dv3=match$2[6],
             du3=match$2[5],
             dv2=match$2[4],
             du2=match$2[3],
             v1$0=match$2[2],
             u1=match$2[1],
             dx2=x2$0 - x1$0,
             dx3=x3 - x1$0,
             dy2=y2$0 - y1$0,
             dy3=y3 - y1$0,
             a=dx2 * dv3 - dx3 * dv2,
             b=dx2 * du3 - dx3 * du2,
             c=x1$0 - a * u1 - b * v1$0,
             d=dy2 * dv3 - dy3 * dv2,
             e=dy2 * du3 - dy3 * du2,
             f=y1$0 - d * u1 - e * v1$0;
            ctx.transform(a,d,b,e,c,f);
            ctx.drawImage(shd,u,v,du,dv,u,v,du,dv);
            ctx.restore()}
          var _dK_=i + 1 | 0;
          if(_dJ_ !== i){var i=_dK_;continue}
          break}}
      return 0}
    var o=tesselate_sphere(12,8),src="../planet/texture.jpg";
    function start(param)
     {function _dn_(texture)
       {var
         w=texture.width,
         h=texture.height,
         canvas=create_canvas(w,h),
         ctx=canvas.getContext(d),
         h$0=h / 8 | 0,
         w$0=w / 8 | 0,
         img=ctx.getImageData(0,0,w$0,h$0),
         data=img.data;
        function update_shadow(obliquity)
         {var
           cos_obl=Math.cos(obliquity),
           sin_obl=-Math.sin(obliquity),
           _dD_=h$0 - 1 | 0,
           _dC_=0;
          if(!(_dD_ < 0))
           {var j=_dC_;
            for(;;)
             {var _dF_=(w$0 / 2 | 0) - 1 | 0,_dE_=0;
              if(!(_dF_ < 0))
               {var i=_dE_;
                for(;;)
                 {var
                   k=4 * (i + j * w$0) | 0,
                   k$0=4 * (w$0 - i + j * w$0 - 1) | 0,
                   theta=(j / h$0 - 0.5) * 3.14159265358979312,
                   phi=i / w$0 * 2 * 3.14159265358979312,
                   x=Math.cos(phi) * Math.cos(theta),
                   y=Math.sin(theta),
                   x$0=x * cos_obl + y * sin_obl,
                   c=0 < x$0?dark:0.0400000000000000078 - x$0 * 0.96 * 1.2,
                   c$0=c <= 1?c:1,
                   c$1=255 - (255.99 * Math.pow(c$0,0.5) | 0) | 0;
                  data[k + 3 | 0] = c$1;
                  data[k$0 + 3 | 0] = c$1;
                  var _dH_=i + 1 | 0;
                  if(_dF_ !== i){var i=_dH_;continue}
                  break}}
              var _dG_=j + 1 | 0;
              if(_dD_ !== j){var j=_dG_;continue}
              break}}
          ctx.putImageData(img,0,0);
          ctx.globalCompositeOperation = "copy";
          ctx.save();
          ctx.scale(8 * (w$0 + 2 | 0) / w$0,8 * (h$0 + 2 | 0) / h$0);
          ctx.translate(-1,-1);
          ctx.drawImage(canvas,0,0);
          return ctx.restore()}
        update_shadow(obliquity);
        var
         w$1=texture.width,
         h$1=texture.height,
         shd=create_canvas(w$1,h$1),
         ctx$0=shd.getContext(d),
         no_lighting=[0,0];
        function update_texture(lighting,phi)
         {if(lighting)
           {no_lighting[1] = 0;
            var phi$0=phi % 6.28318530717958623;
            ctx$0.drawImage(texture,0,0);
            var
             i=
              (6.28318530717958623 - phi$0)
              *
              w$1
              /
              2
              /
              3.14159265358979312
              %
              w$1
              |
              0;
            ctx$0.drawImage(canvas,i,0);
            return ctx$0.drawImage(canvas,i - w$1,0)}
          var
           _dA_=1 - no_lighting[1],
           _dB_=_dA_?(ctx$0.drawImage(texture,0,0),no_lighting[1] = 1,0):_dA_;
          return _dB_}
        var
         canvas$0=create_canvas(height,height),
         canvas$1=create_canvas(height,height);
        add(doc.body,canvas$0);
        var
         ctx$1=canvas$0.getContext(d),
         ctx$2=canvas$1.getContext(d),
         tw=texture.width,
         th=texture.height,
         _do_=o[1],
         uv=
          _k_
           (function(v$0)
             {var
               z=v$0[3],
               y=v$0[2],
               x=v$0[1],
               cst1=(tw / 2 - 0.99) / 3.14159265358979312,
               cst2=th / 2,
               cst3=(th - 0.99) / 3.14159265358979312,
               u=(tw - Math.atan2(z,x) * cst1 | 0) % tw,
               v=cst2 + Math.asin(y) * cst3 | 0;
              if(0 <= u)
               {if(u < tw)
                 {if(0 <= v)
                   {if(v < th)return [0,u,v];throw [0,Assert_failure,_c3_]}
                  throw [0,Assert_failure,_c4_]}
                throw [0,Assert_failure,_c5_]}
              throw [0,Assert_failure,_c6_]},
            _do_),
         _dp_=o[2],
         normals=
          _k_
           (function(param)
             {var
               v3=param[3],
               v2=param[2],
               v1=param[1],
               v1$0=caml_check_bound(o[1],v1)[v1 + 1],
               v2$0=caml_check_bound(o[1],v2)[v2 + 1],
               v3$0=caml_check_bound(o[1],v3)[v3 + 1],
               _dz_=vect(v1$0,v3$0),
               param$0=vect(v1$0,v2$0),
               z2=_dz_[3],
               y2=_dz_[2],
               x2=_dz_[1],
               z1=param$0[3],
               y1=param$0[2],
               x1=param$0[1];
              return [254,
                      y1 * z2 - y2 * z1,
                      z1 * x2 - z2 * x1,
                      x1 * y2 - x2 * y1]},
            _dp_),
         _dq_=o[2],
         face_info=
          _k_
           (function(f)
             {var
               v3=f[3],
               v2=f[2],
               v1=f[1],
               match=caml_check_bound(uv,v1)[v1 + 1],
               v1$0=match[2],
               u1=match[1],
               match$0=caml_check_bound(uv,v2)[v2 + 1],
               v2$0=match$0[2],
               u2=match$0[1],
               match$1=caml_check_bound(uv,v3)[v3 + 1],
               v3$0=match$1[2],
               u3=match$1[1],
               mid=tw / 2;
              if(u1 == 0)
               {if(mid < u2)
                 var switch$1=1;
                else
                 if(mid < u3)var switch$1=1;else var switch$0=0,switch$1=0;
                if(switch$1)var u1$0=tw - 2,switch$0=1}
              else
               var switch$0=0;
              if(!switch$0)var u1$0=u1;
              if(u2 == 0)
               {if(mid < u1$0)
                 var switch$3=1;
                else
                 if(mid < u3)var switch$3=1;else var switch$2=0,switch$3=0;
                if(switch$3)var u2$0=tw - 2,switch$2=1}
              else
               var switch$2=0;
              if(!switch$2)var u2$0=u2;
              if(u3 == 0)
               {if(mid < u2$0)
                 var switch$5=1;
                else
                 if(mid < u1$0)var switch$5=1;else var switch$4=0,switch$5=0;
                if(switch$5)var u3$0=tw - 2,switch$4=1}
              else
               var switch$4=0;
              if(!switch$4)var u3$0=u3;
              var mth=th - 2;
              if(v1$0 == 0)
               var switch$6=0;
              else
               if(mth <= v1$0)var switch$6=0;else var u1$1=u1$0,switch$6=1;
              if(!switch$6)var u1$1=(u2$0 + u3$0) / 2;
              if(v2$0 == 0)
               var switch$7=0;
              else
               if(mth <= v2$0)var switch$7=0;else var u2$1=u2$0,switch$7=1;
              if(!switch$7)var u2$1=(u1$1 + u3$0) / 2;
              if(v3$0 == 0)
               var switch$8=0;
              else
               if(mth <= v3$0)var switch$8=0;else var u3$1=u3$0,switch$8=1;
              if(!switch$8)var u3$1=(u2$1 + u1$1) / 2;
              var
               u1$2=max(1,u1$1),
               u2$2=max(1,u2$1),
               u3$2=max(1,u3$1),
               v1$1=max(1,v1$0),
               v2$1=max(1,v2$0),
               v3$1=max(1,v3$0),
               du2=u2$2 - u1$2,
               du3=u3$2 - u1$2,
               dv2=v2$1 - v1$1,
               dv3=v3$1 - v1$1,
               su=dv2 * du3 - dv3 * du2,
               sv=du2 * dv3 - du3 * dv2,
               dv3$0=dv3 / sv,
               dv2$0=dv2 / sv,
               du3$0=du3 / su,
               du2$0=du2 / su,
               u=max(0,min(u1$2,min(u2$2,u3$2)) - 4),
               v=max(0,min(v1$1,min(v2$1,v3$1)) - 4),
               u$0=min(tw,max(u1$2,max(u2$2,u3$2)) + 4),
               v$0=min(th,max(v1$1,max(v2$1,v3$1)) + 4),
               du=u$0 - u,
               dv=v$0 - v;
              return [0,u1$2,v1$1,du2$0,dv2$0,du3$0,dv3$0,u,v,du,dv]},
            _dq_),
         paused=[0,0],
         follow=[0,0],
         lighting=[0,1],
         clipped=[0,1],
         obl=[0,obliquity],
         m_obliq=[0,xy_rotation(-0.410152374218667459)],
         m=[0,matrix_identity],
         phi_rot=[0,0],
         rateText=doc.createTextNode(""),
         ctrl=createDiv(doc);
        ctrl.className = "controls";
        var d$0=createDiv(doc);
        add(d$0,doc.createTextNode("Click and drag mouse to rotate."));
        add(ctrl,d$0);
        var form=createDiv(doc);
        function br(param){return unsafeCreateElement(doc,_cV_)}
        add(form,toggle_button(_c8_,_c7_,function(p){paused[1] = p;return 0}));
        add(form,br(0));
        add(form,toggle_button(_c__,_c9_,function(f){follow[1] = f;return 0}));
        add(form,br(0));
        var b=createInput([0,button_type],0,doc);
        b.value = "Reset orientation";
        b.onclick
        =
        handler
         (function(param)
           {m[1] = matrix_identity;
            phi_rot[1] = 0;
            m_obliq[1] = xy_rotation(-obl[1]);
            return true$0});
        add(form,b);
        add(form,br(0));
        var lab=createLabel(doc);
        add(lab,doc.createTextNode("Date:"));
        var s=unsafeCreateElementEx(0,0,doc,_cQ_);
        _m_
         (function(txt)
           {var o=unsafeCreateElement(doc,_cP_);
            add(o,doc.createTextNode(txt.toString()));
            return s.add(o,no_handler)},
          _c$_);
        s.onchange
        =
        handler
         (function(param)
           {var
             match=s.selectedIndex,
             o=0 === match?obliquity:1 === match?0:-0.410152374218667459;
            update_shadow(o);
            obl[1] = o;
            return true$0});
        add(lab,s);
        add(form,lab);
        add(ctrl,form);
        var form$0=createDiv(doc);
        add(form$0,checkbox(_da_,1,function(l){lighting[1] = l;return 0}));
        add(form$0,br(0));
        add(form$0,checkbox(_db_,1,function(l){clipped[1] = l;return 0}));
        add(form$0,br(0));
        add(form$0,doc.createTextNode("Frames per second: "));
        add(form$0,rateText);
        add(ctrl,form$0);
        add(doc.body,ctrl);
        var p=unsafeCreateElement(doc,_cU_);
        p.innerHTML
        =
        "Credit: <a href='http://visibleearth.nasa.gov/'>Visual Earth</a>, Nasa";
        add(doc.body,p);
        var mx=[0,0],my=[0,0];
        canvas$0.onmousedown
        =
        handler
         (function(ev)
           {mx[1] = ev.clientX;
            my[1] = ev.clientY;
            var
             c1=
              addEventListener
               (doc,
                mousemove,
                handler
                 (function(ev)
                   {var
                     x=ev.clientX,
                     y=ev.clientY,
                     dx=x - mx[1] | 0,
                     dy=y - my[1] | 0;
                    if(0 !== dy)
                     {var
                       phi=2 * dy / 600,
                       cos_phi=Math.cos(phi),
                       sin_phi=Math.sin(phi);
                      m[1]
                      =
                      matrix_mul
                       ([0,
                         [254,1,0,0],
                         [254,0,cos_phi,sin_phi],
                         [254,0,-sin_phi,cos_phi]],
                        m[1])}
                    if(0 !== dx)
                     {var _dy_=m[1];
                      m[1] = matrix_mul(xz_rotation(2 * dx / 600),_dy_)}
                    mx[1] = x;
                    my[1] = y;
                    return true$0}),
                true$0),
             c2=[0,no_handler];
            c2[1]
            =
            addEventListener
             (doc,
              mouseup,
              handler
               (function(param)
                 {f(c1);
                  var _dx_=c2[1];
                  if(1 - (_dx_ == no_handler?1:0))f(_dx_);
                  return true$0}),
              true$0);
            return false$0});
        var ti=[0,new date_ms().getTime()],fps=[0,0];
        function loop(t,phi)
         {var rotation=xz_rotation(phi - phi_rot[1]);
          update_texture(lighting[1],phi);
          var
           _dr_=matrix_mul(m_obliq[1],rotation),
           m$0=matrix_mul(m[1],_dr_),
           o$0=rotate_object(m$0,o),
           v$0=rotate_normal(m$0,v);
          ctx$2.clearRect(0,0,600,600);
          ctx$2.save();
          if(clipped[1])
           {ctx$2.beginPath();
            ctx$2.arc(300,300,285,0,-6.28318530717958623,true$0);
            ctx$2.clip()}
          ctx$2.setTransform(298,0,0,298,300,300);
          ctx$2.globalCompositeOperation = "lighter";
          draw(ctx$2,texture,shd,o$0,uv,normals,face_info,v$0);
          ctx$2.restore();
          ctx$1.globalCompositeOperation = "copy";
          ctx$1.drawImage(canvas$1,0,0);
          try {ctx$1.getImageData(0,0,1,1)}catch(_dw_){}
          var
           t$0=new date_ms().getTime(),
           hz=1e3 / (t$0 - ti[1]),
           hz$0=fps[1] == 0?hz:0.9 * fps[1] + 0.1 * hz;
          fps[1] = hz$0;
          var _ds_=fps[1];
          rateText.data = caml_call1(_b1_(_dc_),_ds_).toString();
          ti[1] = t$0;
          function _dt_(param)
           {var
             t$0=new date_ms().getTime(),
             dt=t$0 - t,
             dt$0=dt < 0?0:1e3 < dt?0:dt,
             angle=6.28318530717958623 * dt$0 / 1e3 / 10,
             _du_=1 - paused[1],
             _dv_=_du_?follow[1]:_du_;
            if(_dv_)phi_rot[1] = phi_rot[1] + angle;
            var phi$0=paused[1]?phi:phi + angle;
            return loop(t$0,phi$0)}
          return bind(sleep(0.01),_dt_)}
        return loop(new date_ms().getTime(),0)}
      var img=unsafeCreateElement(doc,_cW_);
      function _dm_(param){return [0,[0,img]]}
      var match=task(0),w=match[2],t=match[1];
      img.onload = handler(function(param){wakeup(w,0);return false$0});
      img.src = src;
      var t$0=bind(bind(t,_dm_),_dn_),_dl_=repr(t$0)[1];
      switch(_dl_[0])
       {case 0:break;
        case 1:var e=_dl_[1];throw e;
        case 2:
         var sleeper=_dl_[1];
         add_immutable_waiter
          (sleeper,
           function(param)
            {switch(param[0])
              {case 0:return 0;
               case 1:
                var exn=param[1];
                return caml_call1(async_exception_hook[1],exn);
               default:throw [0,Assert_failure,_cH_]}});
         break;
        default:throw [0,Assert_failure,_cI_]}
      return false$0}
    window.onload = handler(start);
    do_at_exit(0);
    return}
  (function(){return this}()));

//# sourceMappingURL=planet.map