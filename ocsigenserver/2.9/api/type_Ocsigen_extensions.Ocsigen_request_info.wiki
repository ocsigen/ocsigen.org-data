<<code language="ocaml" | sig
  type ifrange =
    Ocsigen_request_info.ifrange =
      IR_No
    | IR_Ifunmodsince of float
    | IR_ifmatch of string
  type file_info =
    Ocsigen_request_info.file_info = {
    tmp_filename : string;
    filesize : int64;
    raw_original_filename : string;
    original_basename : string;
    file_content_type : ((string * string) * (string * string) list) option;
  }
  type request_info = Ocsigen_request_info.request_info
  val ri_of_url :
    ?full_rewrite:bool -> string -> request_info -> request_info
  val make :
    url_string:string ->
    meth:Ocsigen_http_frame.Http_header.http_method ->
    protocol:Ocsigen_http_frame.Http_header.proto ->
    ?ssl:bool ->
    full_path_string:string ->
    full_path:Ocsigen_lib.Url.path ->
    ?original_full_path_string:string ->
    ?original_full_path:Ocsigen_lib.Url.path ->
    ?sub_path:Ocsigen_lib.Url.path ->
    ?sub_path_string:Ocsigen_lib.Url.uri ->
    get_params_string:string option ->
    host:string option ->
    port_from_host_field:int option ->
    get_params:(string * string) list Lazy.t ->
    ?initial_get_params:(string * string) list Lazy.t ->
    post_params:(string option * Int64.t option ->
                 (string * string) list Lwt.t)
                option ->
    files:(string option * Int64.t option -> (string * file_info) list Lwt.t)
          option ->
    remote_inet_addr:Unix.inet_addr ->
    remote_ip:string ->
    ?remote_ip_parsed:Ipaddr.t Lazy.t ->
    remote_port:int ->
    ?forward_ip:string list ->
    server_port:int ->
    user_agent:string ->
    cookies_string:string option Lazy.t ->
    cookies:string Ocsigen_cookies.CookiesTable.t Lazy.t ->
    ifmodifiedsince:float option ->
    ifunmodifiedsince:float option ->
    ifnonematch:string list option ->
    ifmatch:string list option ->
    content_type:((string * string) * (string * string) list) option ->
    content_type_string:string option ->
    content_length:int64 option ->
    referer:string option Lazy.t ->
    origin:string option Lazy.t ->
    access_control_request_method:string option Lazy.t ->
    access_control_request_headers:string list option Lazy.t ->
    accept:Http_headers.accept Lazy.t ->
    accept_charset:(string option * float option) list Lazy.t ->
    accept_encoding:(string option * float option) list Lazy.t ->
    accept_language:(string * float option) list Lazy.t ->
    http_frame:Ocsigen_http_frame.t ->
    ?request_cache:Polytables.t ->
    client:Ocsigen_http_com.connection ->
    range:((int64 * int64) list * int64 option * ifrange) option Lazy.t ->
    ?timeofday:float ->
    ?nb_tries:int -> ?connection_closed:unit Lwt.t -> unit -> request_info
  val update :
    request_info ->
    ?url_string:string ->
    ?meth:Ocsigen_http_frame.Http_header.http_method ->
    ?protocol:Ocsigen_http_frame.Http_header.proto ->
    ?ssl:bool ->
    ?full_path_string:string ->
    ?full_path:string list ->
    ?original_full_path_string:string ->
    ?original_full_path:string list ->
    ?sub_path:string list ->
    ?sub_path_string:string ->
    ?get_params_string:string option ->
    ?host:string option ->
    ?port_from_host_field:int option ->
    ?get_params:(string * string) list Lazy.t ->
    ?initial_get_params:(string * string) list Lazy.t ->
    ?post_params:(string option * Int64.t option ->
                  (string * string) list Lwt.t)
                 option ->
    ?files:(string option * Int64.t option -> (string * file_info) list Lwt.t)
           option ->
    ?remote_inet_addr:Unix.inet_addr ->
    ?remote_ip:string ->
    ?remote_ip_parsed:Ipaddr.t Lazy.t ->
    ?remote_port:int ->
    ?forward_ip:string list ->
    ?server_port:int ->
    ?user_agent:string ->
    ?cookies_string:string option Lazy.t ->
    ?cookies:string Ocsigen_cookies.CookiesTable.t Lazy.t ->
    ?ifmodifiedsince:float option ->
    ?ifunmodifiedsince:float option ->
    ?ifnonematch:string list option ->
    ?ifmatch:string list option ->
    ?content_type:((string * string) * (string * string) list) option ->
    ?content_type_string:string option ->
    ?content_length:int64 option ->
    ?referer:string option Lazy.t ->
    ?origin:string option Lazy.t ->
    ?access_control_request_method:string option Lazy.t ->
    ?access_control_request_headers:string list option Lazy.t ->
    ?accept:Http_headers.accept Lazy.t ->
    ?accept_charset:(string option * float option) list Lazy.t ->
    ?accept_encoding:(string option * float option) list Lazy.t ->
    ?accept_language:(string * float option) list Lazy.t ->
    ?http_frame:Ocsigen_http_frame.t ->
    ?request_cache:Polytables.t ->
    ?client:Ocsigen_http_com.connection ->
    ?range:((int64 * int64) list * int64 option * ifrange) option Lazy.t ->
    ?timeofday:float ->
    ?nb_tries:int -> ?connection_closed:unit Lwt.t -> unit -> request_info
  val update_nb_tries : request_info -> int -> unit
  val update_request_cache : request_info -> Polytables.t -> unit
  val range :
    request_info ->
    ((int64 * int64) list * int64 option * ifrange) option Lazy.t
  val url_string : request_info -> string
  val protocol : request_info -> Ocsigen_http_frame.Http_header.proto
  val http_frame : request_info -> Ocsigen_http_frame.t
  val meth : request_info -> Ocsigen_http_frame.Http_header.http_method
  val ifmatch : request_info -> string list option
  val ifunmodifiedsince : request_info -> float option
  val ifnonematch : request_info -> string list option
  val ifmodifiedsince : request_info -> float option
  val remote_ip : request_info -> string
  val user_agent : request_info -> string
  val host : request_info -> string option
  val ssl : request_info -> bool
  val port_from_host_field : request_info -> int option
  val server_port : request_info -> int
  val full_path : request_info -> string list
  val get_params_string : request_info -> string option
  val client : request_info -> Ocsigen_http_com.connection
  val nb_tries : request_info -> int
  val sub_path : request_info -> string list
  val content_length : request_info -> int64 option
  val content_type_string : request_info -> string option
  val remote_port : request_info -> int
  val sub_path_string : request_info -> string
  val full_path_string : request_info -> string
  val remote_inet_addr : request_info -> Unix.inet_addr
  val forward_ip : request_info -> string list
  val remote_ip_parsed : request_info -> Ipaddr.t Lazy.t
  val content_type :
    request_info -> ((string * string) * (string * string) list) option
  val origin : request_info -> string option Lazy.t
  val access_control_request_method : request_info -> string option Lazy.t
  val access_control_request_headers :
    request_info -> string list option Lazy.t
  val request_cache : request_info -> Polytables.t
  val files :
    request_info ->
    (string option * Int64.t option -> (string * file_info) list Lwt.t)
    option
  val original_full_path : request_info -> string list
  val cookies : request_info -> string Ocsigen_cookies.CookiesTable.t Lazy.t
  val post_params :
    request_info ->
    (string option * Int64.t option -> (string * string) list Lwt.t) option
  val get_params : request_info -> (string * string) list Lazy.t
  val initial_get_params : request_info -> (string * string) list Lazy.t
  val original_full_path_string : request_info -> string
  val timeofday : request_info -> float
  val accept_language : request_info -> (string * float option) list Lazy.t
  val accept_encoding :
    request_info -> (string option * float option) list Lazy.t
  val accept : request_info -> Http_headers.accept Lazy.t
  val connection_closed : request_info -> unit Lwt.t
end >>