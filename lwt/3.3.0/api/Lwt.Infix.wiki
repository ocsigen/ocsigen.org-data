=Module <<a_api_type | module Lwt.Infix >> =
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<span class="ocsforge_color_uid"|<<span class="ocsforge_color_uid"|Infix>>>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="ocsforge_color_keyword"|sig>><<a_api text=".." | module Lwt.Infix >><<span class="ocsforge_color_keyword"|end>>>>~This module provides several infix operators for making programming with
    ~Lwt more convenient~.


    ~To use it~, open <<span class="odocwiki_inlinecode"|~Lwt~.~Infix>>~.


    ~Of the operators declared in this module~, only <<span class="odocwiki_inlinecode"|~>~|~=>> is recommended for new
    code~. ~The only other commonly~-used operator is <<span class="odocwiki_inlinecode"|~>~>~=>>~.

----
<<pre id="VAL(>>=)" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|~(~>~>~=~)>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|'a <<a_api text="Lwt.t" | type Lwt.t >> <<span class="ocsforge_color_delimiter"| -> >> <<span class="ocsforge_color_delimiter"| ( >>'a <<span class="ocsforge_color_delimiter"| -> >> 'b <<a_api text="Lwt.t" | type Lwt.t >><<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >> 'b <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|p ~>~>~= f>> is the same as <<a_api | val Lwt.bind >><<span class="odocwiki_inlinecode"| p f>>~. ~It requires <<span class="odocwiki_inlinecode"|~Lwt~.~Infix>> to be
      opened in scope~:



<<code language='ocaml'|open Lwt.Infix

let () =
  Lwt_main.run
    (Lwt_io.(read_line stdin) ~>>= Lwt_io.printl)

(* ocamlfind opt -linkpkg -package lwt.unix code.ml && ./a.out *)
>>



      ~It is recommended to use the ~P~P~X <<span class="odocwiki_inlinecode"|let~%lwt>> syntax instead~. ~This operator
      is the next~-best choice~. ~It is frequently found while reading existing
      ~Lwt code~.
>>
<<pre id="VAL(>|=)" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|~(~>~|~=~)>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|'a <<a_api text="Lwt.t" | type Lwt.t >> <<span class="ocsforge_color_delimiter"| -> >> <<span class="ocsforge_color_delimiter"| ( >>'a <<span class="ocsforge_color_delimiter"| -> >> 'b<<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >> 'b <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|p ~>~|~= f>> is the same as <<a_api | val Lwt.map >><<span class="odocwiki_inlinecode"| f p>>~. ~It requires <<span class="odocwiki_inlinecode"|~Lwt~.~Infix>> to be
      opened in scope~.



<<code language='ocaml'|open Lwt.Infix

let () =
  Lwt_main.run
    (Lwt_io.(read_line stdin) >|= ignore)

(* ocamlfind opt -linkpkg -package lwt.unix code.ml && ./a.out *)
>>

>>
<<pre id="VAL(<&>)" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|~(~<~&~>~)>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|unit <<a_api text="Lwt.t" | type Lwt.t >> <<span class="ocsforge_color_delimiter"| -> >> unit <<a_api text="Lwt.t" | type Lwt.t >> <<span class="ocsforge_color_delimiter"| -> >> unit <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|p~1 ~<~&~> p~2>> is the same as <<a_api | val Lwt.join >><<span class="odocwiki_inlinecode"| ~[p~1~; p~2~]>>~. ~It requires <<span class="odocwiki_inlinecode"|~Lwt~.~Infix>>
      to be opened in scope~.


      ~Unlike with <<a_api | val Lwt.bind >> and <<a_api | val Lwt.map >>~, there are no problems with
      explicit <<a_api | val Lwt.join >> syntax~, so using this operator is not recommended~.
>>
<<pre id="VAL(<?>)" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|~(~<~?~>~)>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|'a <<a_api text="Lwt.t" | type Lwt.t >> <<span class="ocsforge_color_delimiter"| -> >> 'a <<a_api text="Lwt.t" | type Lwt.t >> <<span class="ocsforge_color_delimiter"| -> >> 'a <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|p~1 ~<~?~> p~2>> is the same as <<a_api | val Lwt.choose >><<span class="odocwiki_inlinecode"| ~[p~1~; p~2~]>>~. ~It requires
      <<span class="odocwiki_inlinecode"|~Lwt~.~Infix>> to be opened in scope~.


      ~Unlike with <<a_api | val Lwt.bind >> and <<a_api | val Lwt.join >>~, there are no problems with
      explicit <<a_api | val Lwt.choose >> syntax~, so using this operator is not
      recommended~.


      ~Futhermore~, most users actually need <<a_api | val Lwt.pick >> instead of
      <<a_api | val Lwt.choose >>~.
>>
<<pre id="VAL(=<<)" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|~(~=~<~<~)>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<span class="ocsforge_color_delimiter"| ( >>'a <<span class="ocsforge_color_delimiter"| -> >> 'b <<a_api text="Lwt.t" | type Lwt.t >><<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >> 'a <<a_api text="Lwt.t" | type Lwt.t >> <<span class="ocsforge_color_delimiter"| -> >> 'b <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|f ~=~<~< p>> is the same as <<a_api | val Lwt.bind >><<span class="odocwiki_inlinecode"| p f>>~. ~It requires <<span class="odocwiki_inlinecode"|~Lwt~.~Infix>> to be
      opened in scope~.


      ~This operator is obscure and its use is discouraged~. ~It is the same as
      <<span class="odocwiki_inlinecode"|p ~>~>~= f>>~.
>>
<<pre id="VAL(=|<)" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|~(~=~|~<~)>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<span class="ocsforge_color_delimiter"| ( >>'a <<span class="ocsforge_color_delimiter"| -> >> 'b<<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >> 'a <<a_api text="Lwt.t" | type Lwt.t >> <<span class="ocsforge_color_delimiter"| -> >> 'b <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|f ~=~|~< p>> is the same as <<a_api | val Lwt.map >><<span class="odocwiki_inlinecode"| f p>>~. ~It requires <<span class="odocwiki_inlinecode"|~Lwt~.~Infix>> to be
      opened in scope~.


      ~This operator is obscure and its use is discouraged~. ~It is the same as
      <<span class="odocwiki_inlinecode"|p ~>~|~= f>>~.
>>
