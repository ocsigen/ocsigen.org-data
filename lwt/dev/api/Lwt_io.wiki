=Module <<a_api_type | module Lwt_io >> =
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<span class="ocsforge_color_uid"|<<span class="ocsforge_color_uid"|Lwt_io>>>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="ocsforge_color_keyword"|sig>><<a_api text=".." | module Lwt_io >><<span class="ocsforge_color_keyword"|end>>>>~Buffered byte channels

----

~A **channel** is a high~-level object for performing input~/output
    ~(~I~O~)~. ~It allows to read~/write from~/to the outside world in an
    efficient way~, by minimising the number of system calls~.


    ~An **output channel** is used to send data and an **input
    channel** is used to receive data~.


    ~If you are familiar with buffered channels you may be familiar too
    with the **flush** operation~. ~Note that byte channels of this
    module are automatically flushed when there is nothing else to do
    ~(i~.e~. before the program becomes idle~)~, so this means that you no
    longer have to write~:


    
<<code language='ocaml'|      eprintf "log message\n";
      flush stderr;
    >>



    to have your messages displayed~.


    ~Note about errors~: input functions of this module raise
    <<span class="odocwiki_inlinecode"|~End~_of~_file>> when the end~-of~-file is reached ~(i~.e~. when the read
    function returns <<span class="odocwiki_inlinecode"|~0>>~)~. ~Other exceptions are ones caused by the
    backend read~/write functions~, such as <<span class="odocwiki_inlinecode"|~Unix~.~Unix~_error>>~.
<<pre id="EXCEPTIONChannel_closed" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|exception>> <<span class="odocwiki_name"|Channel_closed>> <<span class="ocsforge_color_keyword"|of>> <<span class="odocwiki_type"|string>>>><<div class="odocwiki_info"|~Exception raised when a channel is closed~. ~The parameter is a
      description of the channel~.
>>


==@@id="2_Types"@@~Types==

<<pre class="ocsforge_color odocwiki_code" id="TYPEchannel"|<<span class="ocsforge_color_keyword"|type>> <<span class="odocwiki_type"|'mode>> <<span class="odocwiki_name"|channel>>>><<div class="odocwiki_info"|~Type of buffered byte channels
>>
<<pre class="ocsforge_color odocwiki_code" id="TYPEinput"|<<span class="ocsforge_color_keyword"|type>> <<span class="odocwiki_name"|input>>>><<div class="odocwiki_info"|~Input mode
>>
<<pre class="ocsforge_color odocwiki_code" id="TYPEoutput"|<<span class="ocsforge_color_keyword"|type>> <<span class="odocwiki_name"|output>>>><<div class="odocwiki_info"|~Output mode
>>
<<pre class="ocsforge_color odocwiki_code" id="TYPEmode"|<<span class="ocsforge_color_keyword"|type>> <<span class="odocwiki_type"|'a>> <<span class="odocwiki_name"|mode>> <<span class="ocsforge_color_delimiter"|~=>> <<span class="odocwiki_variants"|<<span class="odocwiki_variant"|<<span class="odocwiki_variant_constr"|<<span class="ocsforge_color_keyword"| ~|>> <<span class="ocsforge_color_uid"|Input>>>>>><<span class="odocwiki_variant"|<<span class="odocwiki_variant_constr"|<<span class="ocsforge_color_keyword"| ~|>> <<span class="ocsforge_color_uid"|Output>>>>>>>>>><<div class="odocwiki_info"|~Channel mode
>>
<<pre id="VALinput" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|input>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<a_api text="input" | type Lwt_io.input >> <<a_api text="mode" | type Lwt_io.mode >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|input>> input mode representation
>>
<<pre id="VALoutput" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|output>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<a_api text="output" | type Lwt_io.output >> <<a_api text="mode" | type Lwt_io.mode >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|output>> output mode representation
>>
<<pre class="ocsforge_color odocwiki_code" id="TYPEinput_channel"|<<span class="ocsforge_color_keyword"|type>> <<span class="odocwiki_name"|input~_channel>> <<span class="ocsforge_color_delimiter"|~=>> <<span class="odocwiki_type"|<<a_api text="input" | type Lwt_io.input >> <<a_api text="channel" | type Lwt_io.channel >>>> >><<div class="odocwiki_info"|~Type of input channels
>>
<<pre class="ocsforge_color odocwiki_code" id="TYPEoutput_channel"|<<span class="ocsforge_color_keyword"|type>> <<span class="odocwiki_name"|output~_channel>> <<span class="ocsforge_color_delimiter"|~=>> <<span class="odocwiki_type"|<<a_api text="output" | type Lwt_io.output >> <<a_api text="channel" | type Lwt_io.channel >>>> >><<div class="odocwiki_info"|~Type of output channels
>>
<<pre id="VALmode" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|mode>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|'a <<a_api text="channel" | type Lwt_io.channel >> <<span class="ocsforge_color_delimiter"| -> >> 'a <<a_api text="mode" | type Lwt_io.mode >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|mode ch>> returns the mode of a channel
>>


==@@id="2_Wellknowninstances"@@~Well~-known instances==

<<pre id="VALstdin" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|stdin>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<a_api text="input_channel" | type Lwt_io.input_channel >>>>>><<div class="odocwiki_info"|~The standard input~, it reads data from <<a_api | val Lwt_unix.stdin >>
>>
<<pre id="VALstdout" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|stdout>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<a_api text="output_channel" | type Lwt_io.output_channel >>>>>><<div class="odocwiki_info"|~The standard output~, it writes data to <<a_api | val Lwt_unix.stdout >>
>>
<<pre id="VALstderr" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|stderr>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<a_api text="output_channel" | type Lwt_io.output_channel >>>>>><<div class="odocwiki_info"|~The standard output for error messages~, it writes data to
      <<a_api | val Lwt_unix.stderr >>
>>
<<pre id="VALzero" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|zero>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<a_api text="input_channel" | type Lwt_io.input_channel >>>>>><<div class="odocwiki_info"|~Inputs which returns always <<span class="odocwiki_inlinecode"|~'~\x~0~0~'>>
>>
<<pre id="VALnull" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|null>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<a_api text="output_channel" | type Lwt_io.output_channel >>>>>><<div class="odocwiki_info"|~Output which drops everything
>>


==@@id="2_Channelscreationmanipulation"@@~Channels creation~/manipulation==

<<pre id="VALpipe" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|pipe>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| ?in_buffer: >><<a_api text="Lwt_bytes.t" | type Lwt_bytes.t >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?out_buffer: >><<a_api text="Lwt_bytes.t" | type Lwt_bytes.t >> <<span class="ocsforge_color_delimiter"| -> >>\\  unit <<span class="ocsforge_color_delimiter"| -> >> <<a_api text="input_channel" | type Lwt_io.input_channel >> * <<a_api text="output_channel" | type Lwt_io.output_channel >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|pipe ~?in~_buffer ~?out~_buffer ~(~)>> creates a pipe using
      <<a_api | val Lwt_unix.pipe >> and makes two channels from the two returned file
      descriptors
>>
<<pre id="VALmake" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|make>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| ?buffer: >><<a_api text="Lwt_bytes.t" | type Lwt_bytes.t >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?close: >><<span class="ocsforge_color_delimiter"| ( >>unit <<span class="ocsforge_color_delimiter"| -> >> unit <<a_api text="Lwt.t" | type Lwt.t >><<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?seek: >><<span class="ocsforge_color_delimiter"| ( >>int64 <<span class="ocsforge_color_delimiter"| -> >> <<span class="ocsforge_color_uid"|Unix>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|seek_command>> <<span class="ocsforge_color_delimiter"| -> >> int64 <<a_api text="Lwt.t" | type Lwt.t >><<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| mode: >>'mode <<a_api text="mode" | type Lwt_io.mode >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_delimiter"| ( >><<a_api text="Lwt_bytes.t" | type Lwt_bytes.t >> <<span class="ocsforge_color_delimiter"| -> >> int <<span class="ocsforge_color_delimiter"| -> >> int <<span class="ocsforge_color_delimiter"| -> >> int <<a_api text="Lwt.t" | type Lwt.t >><<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >> 'mode <<a_api text="channel" | type Lwt_io.channel >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|make ~?buffer ~?close ~~mode perform~_io>> is the
      main function for creating new channels~.
>>
<<div class="odocwiki_param_info"|<<span class="code"|buffer>> : user~-supplied buffer~. ~When this argument is
      present~, its value will be used as the buffer for the created
      channel~. ~The size of buffer must conform to the limitations
      described in <<a_api | val Lwt_io.set_default_buffer_size >>~.  ~When this argument is
      not present~, a new internal buffer of default size will be
      allocated for this channel~.


      ~Warning~: do not use the same buffer for simultaneous work with more
      than one channel~.


      ~There are other functions in this module that take a <<span class="odocwiki_inlinecode"|buffer>>
      argument~, sharing the same semantics~.>>
<<div class="odocwiki_param_info"|<<span class="code"|close>> : close function of the channel~. ~It defaults to
      <<span class="odocwiki_inlinecode"|~Lwt~.return>>>>
<<div class="odocwiki_param_info"|<<span class="code"|seek>> : same meaning as <<span class="odocwiki_inlinecode"|~Unix~.lseek>>>>
<<div class="odocwiki_param_info"|<<span class="code"|mode>> : either <<a_api | val Lwt_io.input >> or <<a_api | val Lwt_io.output >>>>
<<pre id="VALof_bytes" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|of~_bytes>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<span class="ocsforge_color_label"| mode: >>'mode <<a_api text="mode" | type Lwt_io.mode >> <<span class="ocsforge_color_delimiter"| -> >> <<a_api text="Lwt_bytes.t" | type Lwt_bytes.t >> <<span class="ocsforge_color_delimiter"| -> >> 'mode <<a_api text="channel" | type Lwt_io.channel >>>>>><<div class="odocwiki_info"|~Create a channel from a byte array~. ~Reading~/writing is done
      directly on the provided array~.
>>
<<pre id="VALof_fd" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|of~_fd>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| ?buffer: >><<a_api text="Lwt_bytes.t" | type Lwt_bytes.t >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?close: >><<span class="ocsforge_color_delimiter"| ( >>unit <<span class="ocsforge_color_delimiter"| -> >> unit <<a_api text="Lwt.t" | type Lwt.t >><<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| mode: >>'mode <<a_api text="mode" | type Lwt_io.mode >> <<span class="ocsforge_color_delimiter"| -> >> <<a_api text="Lwt_unix.file_descr" | type Lwt_unix.file_descr >> <<span class="ocsforge_color_delimiter"| -> >> 'mode <<a_api text="channel" | type Lwt_io.channel >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|of~_fd ~?buffer ~?close ~~mode fd>> creates a channel from a
      file descriptor~.
>>
<<div class="odocwiki_param_info"|<<span class="code"|close>> : defaults to closing the file descriptor~.>>
<<pre id="VALof_unix_fd" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|of~_unix~_fd>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| ?buffer: >><<a_api text="Lwt_bytes.t" | type Lwt_bytes.t >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?close: >><<span class="ocsforge_color_delimiter"| ( >>unit <<span class="ocsforge_color_delimiter"| -> >> unit <<a_api text="Lwt.t" | type Lwt.t >><<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| mode: >>'mode <<a_api text="mode" | type Lwt_io.mode >> <<span class="ocsforge_color_delimiter"| -> >> <<span class="ocsforge_color_uid"|Unix>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|file_descr>> <<span class="ocsforge_color_delimiter"| -> >> 'mode <<a_api text="channel" | type Lwt_io.channel >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|of~_unix~_fd ~?buffer ~?close ~~mode fd>> is a short~-hand for~:


      <<span class="odocwiki_inlinecode"|of~_fd ~?buffer ~?close ~(~Lwt~_unix~.of~_unix~_file~_descr fd~)>>
>>
<<pre id="VALclose" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|close>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|'a <<a_api text="channel" | type Lwt_io.channel >> <<span class="ocsforge_color_delimiter"| -> >> unit <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|close ch>> closes the given channel~. ~If <<span class="odocwiki_inlinecode"|ch>> is an output
      channel~, it performs all pending actions~, flushes it and closes
      it~. ~If <<span class="odocwiki_inlinecode"|ch>> is an input channel~, it just closes it immediately~.


      <<span class="odocwiki_inlinecode"|close>> returns the result of the close function of the
      channel~. ~Multiple calls to <<span class="odocwiki_inlinecode"|close>> will return exactly the same
      value~.


      ~Note~: you cannot use <<span class="odocwiki_inlinecode"|close>> on channels obtained with
      <<a_api | val Lwt_io.atomic >>~.
>>
<<pre id="VALabort" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|abort>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|'a <<a_api text="channel" | type Lwt_io.channel >> <<span class="ocsforge_color_delimiter"| -> >> unit <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|abort ch>> abort current operations and close the channel
      immediately~.
>>
<<pre id="VALatomic" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|atomic>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<span class="ocsforge_color_delimiter"| ( >>'a <<a_api text="channel" | type Lwt_io.channel >> <<span class="ocsforge_color_delimiter"| -> >> 'b <<a_api text="Lwt.t" | type Lwt.t >><<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >> 'a <<a_api text="channel" | type Lwt_io.channel >> <<span class="ocsforge_color_delimiter"| -> >> 'b <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|atomic f>> transforms a sequence of io operations into one
      single atomic io operation~.


      ~Note~:
* the channel passed to <<span class="odocwiki_inlinecode"|f>> is invalid after <<span class="odocwiki_inlinecode"|f>> terminates
* <<span class="odocwiki_inlinecode"|atomic>> can be called inside another <<span class="odocwiki_inlinecode"|atomic>>

>>
<<pre id="VALfile_length" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|file~_length>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|string <<span class="ocsforge_color_delimiter"| -> >> int64 <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div class="odocwiki_info"|~Returns the length of a file
>>
<<pre id="VALbuffered" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|buffered>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|'a <<a_api text="channel" | type Lwt_io.channel >> <<span class="ocsforge_color_delimiter"| -> >> int>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|buffered oc>> returns the number of bytes in the buffer
>>
<<pre id="VALflush" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|flush>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<a_api text="output_channel" | type Lwt_io.output_channel >> <<span class="ocsforge_color_delimiter"| -> >> unit <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|flush oc>> performs all pending writes on <<span class="odocwiki_inlinecode"|oc>>
>>
<<pre id="VALflush_all" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|flush~_all>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|unit <<span class="ocsforge_color_delimiter"| -> >> unit <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|flush~_all ~(~)>> flushes all open output channels
>>
<<pre id="VALbuffer_size" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|buffer~_size>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|'a <<a_api text="channel" | type Lwt_io.channel >> <<span class="ocsforge_color_delimiter"| -> >> int>>>><<div class="odocwiki_info"|~Returns the size of the internal buffer~.
>>
<<pre id="VALresize_buffer" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|resize~_buffer>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|'a <<a_api text="channel" | type Lwt_io.channel >> <<span class="ocsforge_color_delimiter"| -> >> int <<span class="ocsforge_color_delimiter"| -> >> unit <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div class="odocwiki_info"|~Resize the internal buffer to the given size
>>
<<pre id="VALis_busy" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|is~_busy>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|'a <<a_api text="channel" | type Lwt_io.channel >> <<span class="ocsforge_color_delimiter"| -> >> bool>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|is~_busy channel>> returns whether the given channel is currently
      busy~. ~A channel is busy when there is at least one job using it
      that has not yet terminated~.
>>


==@@id="2_Randomaccess"@@~Random access==

<<pre id="VALposition" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|position>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|'a <<a_api text="channel" | type Lwt_io.channel >> <<span class="ocsforge_color_delimiter"| -> >> int64>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|position ch>> ~Returns the current position in the channel~.
>>
<<pre id="VALset_position" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|set~_position>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|'a <<a_api text="channel" | type Lwt_io.channel >> <<span class="ocsforge_color_delimiter"| -> >> int64 <<span class="ocsforge_color_delimiter"| -> >> unit <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|set~_position ch pos>> ~Sets the position in the output channel~. ~This
      does not work if the channel does not support random access~.
>>
<<pre id="VALlength" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|length>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|'a <<a_api text="channel" | type Lwt_io.channel >> <<span class="ocsforge_color_delimiter"| -> >> int64 <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div class="odocwiki_info"|~Returns the length of the channel in bytes
>>


==@@id="2_Reading"@@~Reading==


~Note~: except for functions dealing with streams ~(<<a_api | val Lwt_io.read_chars >> and
    <<a_api | val Lwt_io.read_lines >>~) all functions are **atomic**~.
<<pre id="VALread_char" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|read~_char>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<a_api text="input_channel" | type Lwt_io.input_channel >> <<span class="ocsforge_color_delimiter"| -> >> char <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|read~_char ic>> reads the next character of <<span class="odocwiki_inlinecode"|ic>>~.
**Raises** {{{End_of_file}}} if the end of the file is reached\\
>>
<<pre id="VALread_char_opt" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|read~_char~_opt>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<a_api text="input_channel" | type Lwt_io.input_channel >> <<span class="ocsforge_color_delimiter"| -> >> char option <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div class="odocwiki_info"|~Same as <<span class="odocwiki_inlinecode"|read~_byte>> but does not raise <<span class="odocwiki_inlinecode"|~End~_of~_file>> on end of
      input
>>
<<pre id="VALread_chars" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|read~_chars>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<a_api text="input_channel" | type Lwt_io.input_channel >> <<span class="ocsforge_color_delimiter"| -> >> char <<a_api text="Lwt_stream.t" | type Lwt_stream.t >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|read~_chars ic>> returns a stream holding all characters of
      <<span class="odocwiki_inlinecode"|ic>>
>>
<<pre id="VALread_line" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|read~_line>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<a_api text="input_channel" | type Lwt_io.input_channel >> <<span class="ocsforge_color_delimiter"| -> >> string <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|read~_line ic>> reads one complete line from <<span class="odocwiki_inlinecode"|ic>> and returns it
      without the end of line~. ~End of line is either <<span class="odocwiki_inlinecode"|"~\n">> or
      <<span class="odocwiki_inlinecode"|"~\r~\n">>~.


      ~If the end of line is reached before reading any character~,
      <<span class="odocwiki_inlinecode"|~End~_of~_file>> is raised~. ~If it is reached before reading an end
      of line but characters have already been read~, they are
      returned~.
>>
<<pre id="VALread_line_opt" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|read~_line~_opt>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<a_api text="input_channel" | type Lwt_io.input_channel >> <<span class="ocsforge_color_delimiter"| -> >> string option <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div class="odocwiki_info"|~Same as <<a_api | val Lwt_io.read_line >> but do not raise <<span class="odocwiki_inlinecode"|~End~_of~_file>> on end of
      input~.
>>
<<pre id="VALread_lines" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|read~_lines>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<a_api text="input_channel" | type Lwt_io.input_channel >> <<span class="ocsforge_color_delimiter"| -> >> string <<a_api text="Lwt_stream.t" | type Lwt_stream.t >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|read~_lines ic>> returns a stream holding all lines of <<span class="odocwiki_inlinecode"|ic>>
>>
<<pre id="VALread" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|read>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<span class="ocsforge_color_label"| ?count: >>int <<span class="ocsforge_color_delimiter"| -> >> <<a_api text="input_channel" | type Lwt_io.input_channel >> <<span class="ocsforge_color_delimiter"| -> >> string <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|read ~?count ic>> reads at most <<span class="odocwiki_inlinecode"|count>> characters from <<span class="odocwiki_inlinecode"|ic>>~. ~It
      returns <<span class="odocwiki_inlinecode"|"">> if the end of input is reached~. ~If <<span class="odocwiki_inlinecode"|count>> is not
      specified~, it reads all bytes until the end of input~.
>>
<<pre id="VALread_into" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|read~_into>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<a_api text="input_channel" | type Lwt_io.input_channel >> <<span class="ocsforge_color_delimiter"| -> >> bytes <<span class="ocsforge_color_delimiter"| -> >> int <<span class="ocsforge_color_delimiter"| -> >> int <<span class="ocsforge_color_delimiter"| -> >> int <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|read~_into ic buffer offset length>> reads up to <<span class="odocwiki_inlinecode"|length>> bytes~,
      stores them in <<span class="odocwiki_inlinecode"|buffer>> at offset <<span class="odocwiki_inlinecode"|offset>>~, and returns the
      number of bytes read~.


      ~Note~: <<span class="odocwiki_inlinecode"|read~_into>> does not raise <<span class="odocwiki_inlinecode"|~End~_of~_file>>~, it returns a
      length of <<span class="odocwiki_inlinecode"|~0>> instead~.
>>
<<pre id="VALread_into_exactly" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|read~_into~_exactly>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<a_api text="input_channel" | type Lwt_io.input_channel >> <<span class="ocsforge_color_delimiter"| -> >> bytes <<span class="ocsforge_color_delimiter"| -> >> int <<span class="ocsforge_color_delimiter"| -> >> int <<span class="ocsforge_color_delimiter"| -> >> unit <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|read~_into~_exactly ic buffer offset length>> reads exactly
      <<span class="odocwiki_inlinecode"|length>> bytes and stores them in <<span class="odocwiki_inlinecode"|buffer>> at offset <<span class="odocwiki_inlinecode"|offset>>~.
**Raises** {{{End_of_file}}} on end of input\\
>>
<<pre id="VALread_value" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|read~_value>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<a_api text="input_channel" | type Lwt_io.input_channel >> <<span class="ocsforge_color_delimiter"| -> >> 'a <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|read~_value ic>> reads a marshaled value from <<span class="odocwiki_inlinecode"|ic>>
>>


==@@id="2_Writing"@@~Writing==


~Note~: as for reading functions~, all functions except
    <<a_api | val Lwt_io.write_chars >> and <<a_api | val Lwt_io.write_lines >> are **atomic**~.


    ~For example if you use <<a_api | val Lwt_io.write_line >> in two different threads~, the
    two operations will be serialized~, and lines cannot be mixed~.
<<pre id="VALwrite_char" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|write~_char>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<a_api text="output_channel" | type Lwt_io.output_channel >> <<span class="ocsforge_color_delimiter"| -> >> char <<span class="ocsforge_color_delimiter"| -> >> unit <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|write~_char oc char>> writes <<span class="odocwiki_inlinecode"|char>> on <<span class="odocwiki_inlinecode"|oc>>
>>
<<pre id="VALwrite_chars" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|write~_chars>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<a_api text="output_channel" | type Lwt_io.output_channel >> <<span class="ocsforge_color_delimiter"| -> >> char <<a_api text="Lwt_stream.t" | type Lwt_stream.t >> <<span class="ocsforge_color_delimiter"| -> >> unit <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|write~_chars oc chars>> writes all characters of <<span class="odocwiki_inlinecode"|chars>> on
      <<span class="odocwiki_inlinecode"|oc>>
>>
<<pre id="VALwrite" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|write>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<a_api text="output_channel" | type Lwt_io.output_channel >> <<span class="ocsforge_color_delimiter"| -> >> string <<span class="ocsforge_color_delimiter"| -> >> unit <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|write oc str>> writes all characters of <<span class="odocwiki_inlinecode"|str>> on <<span class="odocwiki_inlinecode"|oc>>
>>
<<pre id="VALwrite_line" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|write~_line>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<a_api text="output_channel" | type Lwt_io.output_channel >> <<span class="ocsforge_color_delimiter"| -> >> string <<span class="ocsforge_color_delimiter"| -> >> unit <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|write~_line oc str>> writes <<span class="odocwiki_inlinecode"|str>> on <<span class="odocwiki_inlinecode"|oc>> followed by a
      new~-line~.
>>
<<pre id="VALwrite_lines" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|write~_lines>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<a_api text="output_channel" | type Lwt_io.output_channel >> <<span class="ocsforge_color_delimiter"| -> >> string <<a_api text="Lwt_stream.t" | type Lwt_stream.t >> <<span class="ocsforge_color_delimiter"| -> >> unit <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|write~_lines oc lines>> writes all lines of <<span class="odocwiki_inlinecode"|lines>> to <<span class="odocwiki_inlinecode"|oc>>
>>
<<pre id="VALwrite_from" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|write~_from>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<a_api text="output_channel" | type Lwt_io.output_channel >> <<span class="ocsforge_color_delimiter"| -> >> bytes <<span class="ocsforge_color_delimiter"| -> >> int <<span class="ocsforge_color_delimiter"| -> >> int <<span class="ocsforge_color_delimiter"| -> >> int <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|write~_from oc buffer offset length>> writes up to <<span class="odocwiki_inlinecode"|length>> bytes
      to <<span class="odocwiki_inlinecode"|oc>>~, from <<span class="odocwiki_inlinecode"|buffer>> at offset <<span class="odocwiki_inlinecode"|offset>> and returns the number
      of bytes actually written
>>
<<pre id="VALwrite_from_string" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|write~_from~_string>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<a_api text="output_channel" | type Lwt_io.output_channel >> <<span class="ocsforge_color_delimiter"| -> >> string <<span class="ocsforge_color_delimiter"| -> >> int <<span class="ocsforge_color_delimiter"| -> >> int <<span class="ocsforge_color_delimiter"| -> >> int <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div class="odocwiki_info"|~See <<a_api | val Lwt_io.write >>~.
>>
<<pre id="VALwrite_from_exactly" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|write~_from~_exactly>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<a_api text="output_channel" | type Lwt_io.output_channel >> <<span class="ocsforge_color_delimiter"| -> >> bytes <<span class="ocsforge_color_delimiter"| -> >> int <<span class="ocsforge_color_delimiter"| -> >> int <<span class="ocsforge_color_delimiter"| -> >> unit <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|write~_from~_exactly oc buffer offset length>> writes all <<span class="odocwiki_inlinecode"|length>>
      bytes from <<span class="odocwiki_inlinecode"|buffer>> at offset <<span class="odocwiki_inlinecode"|offset>> to <<span class="odocwiki_inlinecode"|oc>>
>>
<<pre id="VALwrite_from_string_exactly" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|write~_from~_string~_exactly>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<a_api text="output_channel" | type Lwt_io.output_channel >> <<span class="ocsforge_color_delimiter"| -> >> string <<span class="ocsforge_color_delimiter"| -> >> int <<span class="ocsforge_color_delimiter"| -> >> int <<span class="ocsforge_color_delimiter"| -> >> unit <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div class="odocwiki_info"|~See <<a_api | val Lwt_io.write_from_exactly >>~.
>>
<<pre id="VALwrite_value" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|write~_value>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<a_api text="output_channel" | type Lwt_io.output_channel >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?flags: >><<span class="ocsforge_color_uid"|Marshal>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|extern_flags>> list <<span class="ocsforge_color_delimiter"| -> >> 'a <<span class="ocsforge_color_delimiter"| -> >> unit <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|write~_value oc ~?flags x>> marshals the value <<span class="odocwiki_inlinecode"|x>> to <<span class="odocwiki_inlinecode"|oc>>
>>


==@@id="2_Printing"@@~Printing==


~These functions are basically helpers~. ~Also you may prefer
    using the name <<a_api | val Lwt_io.printl >> rather than <<a_api | val Lwt_io.write_line >> because it is
    shorter~.


    ~The general name of a printing function is <<span class="odocwiki_inlinecode"|~<prefix~>print~<suffixes~>>>~,


    where <<span class="odocwiki_inlinecode"|~<prefix~>>> is one of~:
* <<span class="odocwiki_inlinecode"|~'f~'>>~, which means that the function takes as argument a channel
* nothing~, which means that the function prints on <<a_api | val Lwt_io.stdout >>
* <<span class="odocwiki_inlinecode"|~'e~'>>~, which means that the function prints on <<a_api | val Lwt_io.stderr >>

    and <<span class="odocwiki_inlinecode"|~<suffixes~>>> is a combination of~:
* <<span class="odocwiki_inlinecode"|~'l~'>> which means that a new~-line character is printed after the message
* <<span class="odocwiki_inlinecode"|~'f~'>> which means that the function takes as argument a **format** instead
    of a string

<<pre id="VALfprint" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|fprint>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<a_api text="output_channel" | type Lwt_io.output_channel >> <<span class="ocsforge_color_delimiter"| -> >> string <<span class="ocsforge_color_delimiter"| -> >> unit <<a_api text="Lwt.t" | type Lwt.t >>>>>><<pre id="VALfprintl" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|fprintl>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<a_api text="output_channel" | type Lwt_io.output_channel >> <<span class="ocsforge_color_delimiter"| -> >> string <<span class="ocsforge_color_delimiter"| -> >> unit <<a_api text="Lwt.t" | type Lwt.t >>>>>><<pre id="VALfprintf" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|fprintf>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<a_api text="output_channel" | type Lwt_io.output_channel >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_delimiter"| ( >>'a, unit, string, unit <<a_api text="Lwt.t" | type Lwt.t >><<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_uid"|Pervasives>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|format4>> <<span class="ocsforge_color_delimiter"| -> >> 'a>>>><<pre id="VALfprintlf" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|fprintlf>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<a_api text="output_channel" | type Lwt_io.output_channel >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_delimiter"| ( >>'a, unit, string, unit <<a_api text="Lwt.t" | type Lwt.t >><<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_uid"|Pervasives>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|format4>> <<span class="ocsforge_color_delimiter"| -> >> 'a>>>><<pre id="VALprint" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|print>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|string <<span class="ocsforge_color_delimiter"| -> >> unit <<a_api text="Lwt.t" | type Lwt.t >>>>>><<pre id="VALprintl" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|printl>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|string <<span class="ocsforge_color_delimiter"| -> >> unit <<a_api text="Lwt.t" | type Lwt.t >>>>>><<pre id="VALprintf" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|printf>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<span class="ocsforge_color_delimiter"| ( >>'a, unit, string, unit <<a_api text="Lwt.t" | type Lwt.t >><<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_uid"|Pervasives>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|format4>> <<span class="ocsforge_color_delimiter"| -> >> 'a>>>><<pre id="VALprintlf" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|printlf>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<span class="ocsforge_color_delimiter"| ( >>'a, unit, string, unit <<a_api text="Lwt.t" | type Lwt.t >><<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_uid"|Pervasives>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|format4>> <<span class="ocsforge_color_delimiter"| -> >> 'a>>>><<pre id="VALeprint" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|eprint>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|string <<span class="ocsforge_color_delimiter"| -> >> unit <<a_api text="Lwt.t" | type Lwt.t >>>>>><<pre id="VALeprintl" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|eprintl>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|string <<span class="ocsforge_color_delimiter"| -> >> unit <<a_api text="Lwt.t" | type Lwt.t >>>>>><<pre id="VALeprintf" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|eprintf>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<span class="ocsforge_color_delimiter"| ( >>'a, unit, string, unit <<a_api text="Lwt.t" | type Lwt.t >><<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_uid"|Pervasives>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|format4>> <<span class="ocsforge_color_delimiter"| -> >> 'a>>>><<pre id="VALeprintlf" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|eprintlf>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<span class="ocsforge_color_delimiter"| ( >>'a, unit, string, unit <<a_api text="Lwt.t" | type Lwt.t >><<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_uid"|Pervasives>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|format4>> <<span class="ocsforge_color_delimiter"| -> >> 'a>>>>

==@@id="2_Utilities"@@~Utilities==

<<pre id="VALhexdump_stream" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|hexdump~_stream>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<a_api text="output_channel" | type Lwt_io.output_channel >> <<span class="ocsforge_color_delimiter"| -> >> char <<a_api text="Lwt_stream.t" | type Lwt_stream.t >> <<span class="ocsforge_color_delimiter"| -> >> unit <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|hexdump~_stream oc byte~_stream>> produces the same output as the
      command <<span class="odocwiki_inlinecode"|hexdump ~-~C>>~.
>>
<<pre id="VALhexdump" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|hexdump>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<a_api text="output_channel" | type Lwt_io.output_channel >> <<span class="ocsforge_color_delimiter"| -> >> string <<span class="ocsforge_color_delimiter"| -> >> unit <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|hexdump oc str ~= hexdump~_stream oc ~(~Lwt~_stream~.of~_string str~)>>
>>


==@@id="2_Fileutilities"@@~File utilities==

<<pre class="ocsforge_color odocwiki_code" id="TYPEfile_name"|<<span class="ocsforge_color_keyword"|type>> <<span class="odocwiki_name"|file~_name>> <<span class="ocsforge_color_delimiter"|~=>> <<span class="odocwiki_type"|string>> >><<div class="odocwiki_info"|~Type of file names
>>
<<pre id="VALopen_file" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|open~_file>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| ?buffer: >><<a_api text="Lwt_bytes.t" | type Lwt_bytes.t >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?flags: >><<span class="ocsforge_color_uid"|Unix>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|open_flag>> list <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?perm: >><<span class="ocsforge_color_uid"|Unix>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|file_perm>> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| mode: >>'a <<a_api text="mode" | type Lwt_io.mode >> <<span class="ocsforge_color_delimiter"| -> >> <<a_api text="file_name" | type Lwt_io.file_name >> <<span class="ocsforge_color_delimiter"| -> >> 'a <<a_api text="channel" | type Lwt_io.channel >> <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|open~_file ~?buffer ~?flags ~?perm ~~mode filename>> opens the
      file with name <<span class="odocwiki_inlinecode"|filename>> and returns a channel for
      reading~/writing it~.
**Raises** {{{Unix.Unix_error}}} on error~.\\
>>
<<pre id="VALwith_file" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|with~_file>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| ?buffer: >><<a_api text="Lwt_bytes.t" | type Lwt_bytes.t >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?flags: >><<span class="ocsforge_color_uid"|Unix>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|open_flag>> list <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?perm: >><<span class="ocsforge_color_uid"|Unix>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|file_perm>> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| mode: >>'a <<a_api text="mode" | type Lwt_io.mode >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<a_api text="file_name" | type Lwt_io.file_name >> <<span class="ocsforge_color_delimiter"| -> >> <<span class="ocsforge_color_delimiter"| ( >>'a <<a_api text="channel" | type Lwt_io.channel >> <<span class="ocsforge_color_delimiter"| -> >> 'b <<a_api text="Lwt.t" | type Lwt.t >><<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >> 'b <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|with~_file ~?buffer ~?flags ~?perm ~~mode filename f>> opens a
      file and passes the channel to <<span class="odocwiki_inlinecode"|f>>~. ~It is ensured that the
      channel is closed when <<span class="odocwiki_inlinecode"|f ch>> terminates ~(even if it fails~)~.
>>
<<pre id="VALopen_connection" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|open~_connection>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| ?fd: >><<a_api text="Lwt_unix.file_descr" | type Lwt_unix.file_descr >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?in_buffer: >><<a_api text="Lwt_bytes.t" | type Lwt_bytes.t >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?out_buffer: >><<a_api text="Lwt_bytes.t" | type Lwt_bytes.t >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_uid"|Unix>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|sockaddr>> <<span class="ocsforge_color_delimiter"| -> >> <<span class="ocsforge_color_delimiter"| ( >><<a_api text="input_channel" | type Lwt_io.input_channel >> * <<a_api text="output_channel" | type Lwt_io.output_channel >><<span class="ocsforge_color_delimiter"| ) >> <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|open~_connection ~?fd ~?in~_buffer ~?out~_buffer addr>> opens a
      connection to the given address and returns two channels for using
      it~. ~If <<span class="odocwiki_inlinecode"|fd>> is not specified~, a fresh one will be used~.


      ~The connection is completly closed when you close both
      channels~.
**Raises** {{{Unix.Unix_error}}} on error~.\\
>>
<<pre id="VALwith_connection" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|with~_connection>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| ?fd: >><<a_api text="Lwt_unix.file_descr" | type Lwt_unix.file_descr >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?in_buffer: >><<a_api text="Lwt_bytes.t" | type Lwt_bytes.t >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?out_buffer: >><<a_api text="Lwt_bytes.t" | type Lwt_bytes.t >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_uid"|Unix>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|sockaddr>> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_delimiter"| ( >><<a_api text="input_channel" | type Lwt_io.input_channel >> * <<a_api text="output_channel" | type Lwt_io.output_channel >> <<span class="ocsforge_color_delimiter"| -> >> 'a <<a_api text="Lwt.t" | type Lwt.t >><<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >> 'a <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|with~_connection ~?fd ~?in~_buffer ~?out~_buffer addr f>> opens a
      connection to the given address and passes the channels to
      <<span class="odocwiki_inlinecode"|f>>
>>
<<pre class="ocsforge_color odocwiki_code" id="TYPEserver"|<<span class="ocsforge_color_keyword"|type>> <<span class="odocwiki_name"|server>>>><<div class="odocwiki_info"|~Type of a server
>>
<<pre id="VALestablish_server_with_client_address" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|establish~_server~_with~_client~_address>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| ?fd: >><<a_api text="Lwt_unix.file_descr" | type Lwt_unix.file_descr >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?buffer_size: >>int <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?backlog: >>int <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?no_close: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_uid"|Unix>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|sockaddr>> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_delimiter"| ( >><<a_api text="Lwt_unix.sockaddr" | type Lwt_unix.sockaddr >> <<span class="ocsforge_color_delimiter"| -> >>\\   <<a_api text="input_channel" | type Lwt_io.input_channel >> * <<a_api text="output_channel" | type Lwt_io.output_channel >> <<span class="ocsforge_color_delimiter"| -> >> unit <<a_api text="Lwt.t" | type Lwt.t >><<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<a_api text="server" | type Lwt_io.server >> <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|establish~_server~_with~_client~_address listen~_address f>> creates a server
    which listens for incoming connections on <<span class="odocwiki_inlinecode"|listen~_address>>~. ~When a client
    makes a new connection~, it is passed to <<span class="odocwiki_inlinecode"|f>>~: more precisely~, the server
    calls



<<code language='ocaml'|f client_address (in_channel, out_channel)
>>



    where <<span class="odocwiki_inlinecode"|client~_address>> is the address ~(peer name~) of the new client~, and
    <<span class="odocwiki_inlinecode"|in~_channel>> and <<span class="odocwiki_inlinecode"|out~_channel>> are two channels wrapping the socket for
    communicating with that client~.


    ~The server does not block waiting for <<span class="odocwiki_inlinecode"|f>> to complete~: it concurrently tries
    to accept more client connections while <<span class="odocwiki_inlinecode"|f>> is handling the client~.


    ~When the promise returned by <<span class="odocwiki_inlinecode"|f>> completes ~(i~.e~.~, <<span class="odocwiki_inlinecode"|f>> is done handling the
    client~)~, <<span class="odocwiki_inlinecode"|establish~_server~_with~_client~_address>> automatically closes
    <<span class="odocwiki_inlinecode"|in~_channel>> and <<span class="odocwiki_inlinecode"|out~_channel>>~. ~This is a default behavior that is useful
    for simple cases~, but for a robust application you should explicitly close
    these channels yourself~, and handle any exceptions~. ~If the channels are
    still open when <<span class="odocwiki_inlinecode"|f>> completes~, and their automatic closing raises an
    exception~, <<span class="odocwiki_inlinecode"|establish~_server~_with~_client~_address>> treats it as an unhandled
    exception reaching the top level of the application~: it passes that
    exception to <<a_api | val Lwt.async_exception_hook >>~, the default behavior of which is
    to print the exception and //terminate your process//~.


    ~Automatic closing can be completely disabled by passing <<span class="odocwiki_inlinecode"|~~no~_close~:true>>~.


    ~Similarly~, if <<span class="odocwiki_inlinecode"|f>> raises an exception ~(or the promise it returns fails with
    an exception~)~, <<span class="odocwiki_inlinecode"|establish~_server~_with~_client~_address>> can do nothing with
    that exception~, except pass it to <<a_api | val Lwt.async_exception_hook >>~.


    <<span class="odocwiki_inlinecode"|~~fd>> can be specified to use an existing file descriptor for listening~.
    ~Otherwise~, a fresh socket is created internally~.


    <<span class="odocwiki_inlinecode"|~~backlog>> is the argument passed to <<a_api | val Lwt_unix.listen >>~.


    ~The returned promise ~(a <<span class="odocwiki_inlinecode"|server ~Lwt~.t>>~) resolves when the server has just
    started listening on <<span class="odocwiki_inlinecode"|listen~_address>>~: right after the internal call to
    <<span class="odocwiki_inlinecode"|listen>>~, and right before the first internal call to <<span class="odocwiki_inlinecode"|accept>>~.
**Since** 3.1.0\\
>>
<<pre id="VALshutdown_server" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|shutdown~_server>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<a_api text="server" | type Lwt_io.server >> <<span class="ocsforge_color_delimiter"| -> >> unit <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div class="odocwiki_info"|~Closes the given server~'s listening socket~. ~The returned promise resolves
    when the <<span class="odocwiki_inlinecode"|close~(~2~)>> system call completes~. ~This function does not affect the
    sockets of connections that have already been accepted~, i~.e~. passed to <<span class="odocwiki_inlinecode"|f>>
    by <<a_api | val Lwt_io.establish_server >>~.
**Since** 3.0.0\\
>>
<<pre id="VALlines_of_file" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|lines~_of~_file>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<a_api text="file_name" | type Lwt_io.file_name >> <<span class="ocsforge_color_delimiter"| -> >> string <<a_api text="Lwt_stream.t" | type Lwt_stream.t >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|lines~_of~_file name>> returns a stream of all lines of the file
      with name <<span class="odocwiki_inlinecode"|name>>~. ~The file is automatically closed when all
      lines have been read~.
>>
<<pre id="VALlines_to_file" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|lines~_to~_file>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<a_api text="file_name" | type Lwt_io.file_name >> <<span class="ocsforge_color_delimiter"| -> >> string <<a_api text="Lwt_stream.t" | type Lwt_stream.t >> <<span class="ocsforge_color_delimiter"| -> >> unit <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|lines~_to~_file name lines>> writes all lines of <<span class="odocwiki_inlinecode"|lines>> to
      file with name <<span class="odocwiki_inlinecode"|name>>~.
>>
<<pre id="VALchars_of_file" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|chars~_of~_file>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<a_api text="file_name" | type Lwt_io.file_name >> <<span class="ocsforge_color_delimiter"| -> >> char <<a_api text="Lwt_stream.t" | type Lwt_stream.t >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|chars~_of~_file name>> returns a stream of all characters of the
      file with name <<span class="odocwiki_inlinecode"|name>>~. ~As for <<a_api | val Lwt_io.lines_of_file >> the file is
      closed when all characters have been read~.
>>
<<pre id="VALchars_to_file" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|chars~_to~_file>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<a_api text="file_name" | type Lwt_io.file_name >> <<span class="ocsforge_color_delimiter"| -> >> char <<a_api text="Lwt_stream.t" | type Lwt_stream.t >> <<span class="ocsforge_color_delimiter"| -> >> unit <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|chars~_to~_file name chars>> writes all characters of <<span class="odocwiki_inlinecode"|chars>> to
      <<span class="odocwiki_inlinecode"|name>>
>>


==@@id="2_Inputoutputofintegers"@@~Input~/output of integers==

<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module type>> <<a_api text="NumberIO" | module type Lwt_io.NumberIO >> <<span class="ocsforge_color_delimiter"|~=>> <<span class="ocsforge_color_keyword"|sig>><<a_api text=".." | module type Lwt_io.NumberIO >><<span class="ocsforge_color_keyword"|end>>>><<div class="odocwiki_info"|~Common interface for reading~/writing integers in binary
>>
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<a_api text="LE" | module Lwt_io.LE >> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<a_api text="NumberIO" | module Lwt_io.NumberIO >>>><<span class="odocwiki_type"| >>>><<div class="odocwiki_info"|~Reading~/writing of numbers in little~-endian
>>
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<a_api text="BE" | module Lwt_io.BE >> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<a_api text="NumberIO" | module Lwt_io.NumberIO >>>><<span class="odocwiki_type"| >>>><<div class="odocwiki_info"|~Reading~/writing of numbers in big~-endian
>>
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|include>> <<a_api | module type Lwt_io.NumberIO >>>>

~Reading~/writing of numbers in the system endianness~.
<<pre class="ocsforge_color odocwiki_code" id="TYPEbyte_order"|<<span class="ocsforge_color_keyword"|type>> <<span class="odocwiki_name"|byte~_order>> <<span class="ocsforge_color_delimiter"|~=>> <<span class="odocwiki_type"|<<a_api text="Lwt_sys.byte_order" | type Lwt_sys.byte_order >>>>  <<span class="ocsforge_color_delimiter"|~=>> <<span class="odocwiki_variants"|<<span class="odocwiki_variant"|<<span class="odocwiki_variant_constr"|<<span class="ocsforge_color_keyword"| ~|>> <<span class="ocsforge_color_uid"|Little_endian>>>>>><<span class="odocwiki_variant"|<<span class="odocwiki_variant_constr"|<<span class="ocsforge_color_keyword"| ~|>> <<span class="ocsforge_color_uid"|Big_endian>>>><<span class="odocwiki_comments"|<<span class="odocwiki_comments_open"|(*>> <<span|<<div class="odocwiki_info"|~Type of byte order
>>
>><<span class="odocwiki_comments_close"| ~*)>>>>>>>>>><<pre id="VALsystem_byte_order" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|system~_byte~_order>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<a_api text="byte_order" | type Lwt_io.byte_order >>>>>><<div class="odocwiki_info"|~Same as <<a_api | val Lwt_sys.byte_order >>~.
>>


==@@id="2_Lowlevelaccesstotheinternalbuffer"@@~Low~-level access to the internal buffer==

<<pre id="VALblock" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|block>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  'a <<a_api text="channel" | type Lwt_io.channel >> <<span class="ocsforge_color_delimiter"| -> >>\\  int <<span class="ocsforge_color_delimiter"| -> >> <<span class="ocsforge_color_delimiter"| ( >><<a_api text="Lwt_bytes.t" | type Lwt_bytes.t >> <<span class="ocsforge_color_delimiter"| -> >> int <<span class="ocsforge_color_delimiter"| -> >> 'b <<a_api text="Lwt.t" | type Lwt.t >><<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >> 'b <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|block ch size f>> pass to <<span class="odocwiki_inlinecode"|f>> the internal buffer and an
      offset~. ~The buffer contains <<span class="odocwiki_inlinecode"|size>> chars at <<span class="odocwiki_inlinecode"|offset>>~. <<span class="odocwiki_inlinecode"|f>> may
      read or write these chars~.  <<span class="odocwiki_inlinecode"|size>> must satisfy <<span class="odocwiki_inlinecode"|~0 ~<~= size ~<~=
      ~1~6>>
>>
<<pre class="ocsforge_color odocwiki_code" id="TYPEdirect_access"|<<span class="ocsforge_color_keyword"|type>> <<span class="odocwiki_name"|direct~_access>> <<span class="ocsforge_color_delimiter"|~=>> <<span class="ocsforge_color_delimiter"|~{>>
<<span class="odocwiki_record"|<<span class="odocwiki_field"|<<span class="odocwiki_field_descr"|  <<span class="ocsforge_color_label"|da_buffer:>> <<span class="odocwiki_type"|<<a_api text="Lwt_bytes.t" | type Lwt_bytes.t >>>><<span class="ocsforge_color_delimiter"|~;>> >><<span class="odocwiki_comments"|<<span class="odocwiki_comments_open"|(*>> <<span|<<div class="odocwiki_info"|~The internal buffer
>>
>><<span class="odocwiki_comments_close"| ~*)>>>>>><<span class="odocwiki_field"|<<span class="odocwiki_field_descr"|  <<span class="ocsforge_color_keyword"|mutable >><<span class="ocsforge_color_label"|da_ptr:>> <<span class="odocwiki_type"|int>><<span class="ocsforge_color_delimiter"|~;>> >><<span class="odocwiki_comments"|<<span class="odocwiki_comments_open"|(*>> <<span|<<div class="odocwiki_info"|~The pointer to~:
* the beginning of free space for output channels
* the beginning of data for input channels

>>
>><<span class="odocwiki_comments_close"| ~*)>>>>>><<span class="odocwiki_field"|<<span class="odocwiki_field_descr"|  <<span class="ocsforge_color_keyword"|mutable >><<span class="ocsforge_color_label"|da_max:>> <<span class="odocwiki_type"|int>><<span class="ocsforge_color_delimiter"|~;>> >><<span class="odocwiki_comments"|<<span class="odocwiki_comments_open"|(*>> <<span|<<div class="odocwiki_info"|~The maximum offset
>>
>><<span class="odocwiki_comments_close"| ~*)>>>>>><<span class="odocwiki_field"|<<span class="odocwiki_field_descr"|  <<span class="ocsforge_color_label"|da_perform:>> <<span class="odocwiki_type"|unit <<span class="ocsforge_color_delimiter"| -> >> int <<a_api text="Lwt.t" | type Lwt.t >>>><<span class="ocsforge_color_delimiter"|~;>> >><<span class="odocwiki_comments"|<<span class="odocwiki_comments_open"|(*>> <<span|<<div class="odocwiki_info"|~- for input channels~:
        refills the buffer and returns how many bytes have been read
* for output channels~:
        flush partially the buffer and returns how many bytes have been written

>>
>><<span class="odocwiki_comments_close"| ~*)>>>>>>>><<span class="ocsforge_color_delimiter"|~}>>>><<div class="odocwiki_info"|~Information for directly accessing the internal buffer of a
    channel
>>
<<pre id="VALdirect_access" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|direct~_access>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|'a <<a_api text="channel" | type Lwt_io.channel >> <<span class="ocsforge_color_delimiter"| -> >> <<span class="ocsforge_color_delimiter"| ( >><<a_api text="direct_access" | type Lwt_io.direct_access >> <<span class="ocsforge_color_delimiter"| -> >> 'b <<a_api text="Lwt.t" | type Lwt.t >><<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >> 'b <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|direct~_access ch f>> passes to <<span class="odocwiki_inlinecode"|f>> a <<a_api | val Lwt_io.direct_access >>
      structure~. <<span class="odocwiki_inlinecode"|f>> must use it and update <<span class="odocwiki_inlinecode"|da~_ptr>> to reflect how
      many bytes have been read~/written~.
>>


==@@id="2_Misc"@@~Misc==

<<pre id="VALdefault_buffer_size" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|default~_buffer~_size>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|unit <<span class="ocsforge_color_delimiter"| -> >> int>>>><<div class="odocwiki_info"|~Return the default size for buffers~. ~Channels that are created
      without a specific buffer use new buffer of this size~.
>>
<<pre id="VALset_default_buffer_size" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|set~_default~_buffer~_size>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|int <<span class="ocsforge_color_delimiter"| -> >> unit>>>><<div class="odocwiki_info"|~Change the default buffer size~.
**Raises** {{{Invalid_argument}}} if the given size is smaller than <<span class="odocwiki_inlinecode"|~1~6>>
      or greater than <<span class="odocwiki_inlinecode"|~Sys~.max~_string~_length>>\\
>>


==@@id="2_Deprecated"@@~Deprecated==

<<pre id="VALestablish_server" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|establish~_server>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| ?fd: >><<a_api text="Lwt_unix.file_descr" | type Lwt_unix.file_descr >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?buffer_size: >>int <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?backlog: >>int <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?no_close: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_uid"|Unix>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|sockaddr>> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_delimiter"| ( >><<a_api text="input_channel" | type Lwt_io.input_channel >> * <<a_api text="output_channel" | type Lwt_io.output_channel >> <<span class="ocsforge_color_delimiter"| -> >> unit <<a_api text="Lwt.t" | type Lwt.t >><<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<a_api text="server" | type Lwt_io.server >> <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_warning"|Deprecated.>>~Use <<a_api | val Lwt_io.establish_server_with_client_address >>~.
~Like <<span class="odocwiki_inlinecode"|establish~_server~_with~_client~_address>>~, but does not pass the client
    address to the callback <<span class="odocwiki_inlinecode"|f>>~.
**Since** 3.0.0\\
>>
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<a_api text="Versioned" | module Lwt_io.Versioned >> <<span class="ocsforge_color_delimiter"|~:>> <<span class="ocsforge_color_keyword"|sig>><<a_api text=".." | module Lwt_io.Versioned >><<span class="ocsforge_color_keyword"|end>>>><<div class="odocwiki_info"|~Versioned variants of ~A~P~Is undergoing breaking changes~.
>>
