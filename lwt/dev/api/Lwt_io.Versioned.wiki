=Module <<a_api_type | module Lwt_io.Versioned >> =
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<span class="ocsforge_color_uid"|<<span class="ocsforge_color_uid"|Versioned>>>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="ocsforge_color_keyword"|sig>><<a_api text=".." | module Lwt_io.Versioned >><<span class="ocsforge_color_keyword"|end>>>>~Versioned variants of ~A~P~Is undergoing breaking changes~.

----
<<pre id="VALestablish_server_1" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|establish~_server~_~1>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| ?fd: >><<a_api text="Lwt_unix.file_descr" | type Lwt_unix.file_descr >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?buffer_size: >>int <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?backlog: >>int <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_uid"|Unix>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|sockaddr>> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_delimiter"| ( >><<a_api text="Lwt_io.input_channel" | type Lwt_io.input_channel >> * <<a_api text="Lwt_io.output_channel" | type Lwt_io.output_channel >> <<span class="ocsforge_color_delimiter"| -> >> unit<<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<a_api text="Lwt_io.server" | type Lwt_io.server >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_warning"|Deprecated.>>~Use <<a_api | val Lwt_io.Versioned.establish_server_2 >>~.
~Alias for the current <<a_api | val Lwt_io.establish_server >>~.
>>
<<pre id="VALestablish_server_2" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|establish~_server~_~2>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| ?fd: >><<a_api text="Lwt_unix.file_descr" | type Lwt_unix.file_descr >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?buffer_size: >>int <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?backlog: >>int <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_uid"|Unix>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|sockaddr>> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_delimiter"| ( >><<a_api text="Lwt_io.input_channel" | type Lwt_io.input_channel >> * <<a_api text="Lwt_io.output_channel" | type Lwt_io.output_channel >> <<span class="ocsforge_color_delimiter"| -> >> unit <<a_api text="Lwt.t" | type Lwt.t >><<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<a_api text="Lwt_io.server" | type Lwt_io.server >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|establish~_server~_safe ~?fd ~?buffer~_size ~?backlog sockaddr f>> creates a
      server which listens for incoming connections~. ~New connections are passed
      to <<span class="odocwiki_inlinecode"|f>>~. ~When threads returned by <<span class="odocwiki_inlinecode"|f>> complete~, the connections are closed
      automatically~.


      ~The server does not wait for each thread~. ~It begins accepting new
      connections immediately~.


      ~If a thread raises an exception~, it is passed to
      <<span class="odocwiki_inlinecode"|!~Lwt~.async~_exception~_hook>>~. ~Likewise~, if the automatic <<span class="odocwiki_inlinecode"|close>> of a
      connection raises an exception~, it is passed to
      <<span class="odocwiki_inlinecode"|!~Lwt~.async~_exception~_hook>>~. ~To handle exceptions raised by <<span class="odocwiki_inlinecode"|close>>~, call
      it manually inside <<span class="odocwiki_inlinecode"|f>>~.
>>
