=Index of values=

|@@ @style="tet-align: left;"@@\\|
|@@class="odocwiki_index"@ @@<<a_api text="(<&>)"| value Lwt.Infix.(<&>) >> ~[<<a_api | module Lwt.Infix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|p~1 ~<~&~> p~2>> is the same as <<a_api | val Lwt.join >><<span class="odocwiki_inlinecode"| ~[p~1~; p~2~]>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="(<&>)"| value Lwt.(<&>) >> ~[<<a_api | module Lwt >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="(<?>)"| value Lwt.Infix.(<?>) >> ~[<<a_api | module Lwt.Infix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|p~1 ~<~?~> p~2>> is the same as <<a_api | val Lwt.choose >><<span class="odocwiki_inlinecode"| ~[p~1~; p~2~]>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="(<?>)"| value Lwt.(<?>) >> ~[<<a_api | module Lwt >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="(=<<)"| value Lwt.Infix.(=<<) >> ~[<<a_api | module Lwt.Infix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|f ~=~<~< p>> is the same as <<a_api | val Lwt.bind >><<span class="odocwiki_inlinecode"| p f>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="(=<<)"| value Lwt.(=<<) >> ~[<<a_api | module Lwt >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="(=|<)"| value Lwt.Infix.(=|<) >> ~[<<a_api | module Lwt.Infix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|f ~=~|~< p>> is the same as <<a_api | val Lwt.map >><<span class="odocwiki_inlinecode"| f p>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="(=|<)"| value Lwt.(=|<) >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|~Use the operators in module [[ #MODULEInfix| <<span class="odocwiki_inlinecode"|~Lwt~.~Infix>>]] instead~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="(>>=)"| value Lwt.Infix.(>>=) >> ~[<<a_api | module Lwt.Infix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|p ~>~>~= f>> is the same as <<a_api | val Lwt.bind >><<span class="odocwiki_inlinecode"| p f>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="(>>=)"| value Lwt.(>>=) >> ~[<<a_api | module Lwt >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="(>>=)"| value Lwt_result.Infix.(>>=) >> ~[<<a_api | module Lwt_result.Infix >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="(>|=)"| value Lwt.Infix.(>|=) >> ~[<<a_api | module Lwt.Infix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|p ~>~|~= f>> is the same as <<a_api | val Lwt.map >><<span class="odocwiki_inlinecode"| f p>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="(>|=)"| value Lwt.(>|=) >> ~[<<a_api | module Lwt >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="(>|=)"| value Lwt_result.Infix.(>|=) >> ~[<<a_api | module Lwt_result.Infix >>~]||
|@@ @style="tet-align: left;"@@\\A|
|@@class="odocwiki_index"@ @@<<a_api text="abort"| value Lwt_io.abort >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|abort ch>> abort current operations and close the channel
      immediately~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="abort"| value Lwt_unix.abort >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|abort fd exn>> makes all current and further uses of the file
      descriptor fail with the given exception~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="abort_jobs"| value Lwt_unix.abort_jobs >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|abort~_jobs exn>> make all pending jobs to fail with exn~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="accept"| value Lwt_unix.accept >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.accept>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="accept_n"| value Lwt_unix.accept_n >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|accept~_n fd count>> accepts up to <<span class="odocwiki_inlinecode"|count>> connections at one time~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="access"| value Lwt_unix.access >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.access>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="accum_s"| value Lwt_react.S.accum_s >> ~[<<a_api | module Lwt_react.S >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="accum_s"| value Lwt_react.E.accum_s >> ~[<<a_api | module Lwt_react.E >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="add"| value Lwt_pqueue.S.add >> ~[<<a_api | module Lwt_pqueue.S >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|add e q>> evaluates to a new priority queue~, which contains all the
        elements of <<span class="odocwiki_inlinecode"|q>>~, and the additional element <<span class="odocwiki_inlinecode"|e>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="add_hook"| value Lwt_switch.add_hook >> ~[<<a_api | module Lwt_switch >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|add~_hook switch f>> registers <<span class="odocwiki_inlinecode"|f>> so it will be called when
      <<a_api | val Lwt_switch.turn_off >> is invoked~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="add_hook_or_exec"| value Lwt_switch.add_hook_or_exec >> ~[<<a_api | module Lwt_switch >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|add~_hook~_or~_exec switch f>> is the same as <<a_api | val Lwt_switch.add_hook >> except
      that if the switch is already off~, <<span class="odocwiki_inlinecode"|f>> is called immediately~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="add_l"| value Lwt_sequence.add_l >> ~[<<a_api | module Lwt_sequence >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|add~_l x s>> adds <<span class="odocwiki_inlinecode"|x>> to the left of the sequence <<span class="odocwiki_inlinecode"|s>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="add_r"| value Lwt_sequence.add_r >> ~[<<a_api | module Lwt_sequence >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|add~_l x s>> adds <<span class="odocwiki_inlinecode"|x>> to the right of the sequence <<span class="odocwiki_inlinecode"|s>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="add_task_l"| value Lwt.add_task_l >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|~Like <<a_api | val Lwt.add_task_r >>~, but the equivalent code calls <<a_api | val Lwt_sequence.add_l >>
    instead~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="add_task_r"| value Lwt.add_task_r >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~Lwt~.add~_task~_r sequence>> is equivalent to
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="app_p"| value Lwt_react.E.app_p >> ~[<<a_api | module Lwt_react.E >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="app_s"| value Lwt_react.S.app_s >> ~[<<a_api | module Lwt_react.S >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="app_s"| value Lwt_react.E.app_s >> ~[<<a_api | module Lwt_react.E >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="append"| value Lwt_stream.append >> ~[<<a_api | module Lwt_stream >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|append s~1 s~2>> returns a stream which returns all elements of
    <<span class="odocwiki_inlinecode"|s~1>>~, then all elements of <<span class="odocwiki_inlinecode"|s~2>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="append_bigarray"| value Lwt_unix.IO_vectors.append_bigarray >> ~[<<a_api | module Lwt_unix.IO_vectors >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|append~_bigarray vs buffer offset length>> appends a slice of the
      <<span class="odocwiki_inlinecode"|~Bigarray>> buffer <<span class="odocwiki_inlinecode"|buffer>> beginning at <<span class="odocwiki_inlinecode"|offset>> and with length <<span class="odocwiki_inlinecode"|length>>
      to the ~I~/~O vector sequence <<span class="odocwiki_inlinecode"|vs>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="append_bytes"| value Lwt_unix.IO_vectors.append_bytes >> ~[<<a_api | module Lwt_unix.IO_vectors >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|append~_bytes vs buffer offset length>> appends a slice of the <<span class="odocwiki_inlinecode"|bytes>>
      buffer <<span class="odocwiki_inlinecode"|buffer>> beginning at <<span class="odocwiki_inlinecode"|offset>> and with length <<span class="odocwiki_inlinecode"|length>> to the
      ~I~/~O vector sequence <<span class="odocwiki_inlinecode"|vs>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="async"| value Lwt.async >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~Lwt~.async f>> applies <<span class="odocwiki_inlinecode"|f ~(~)>>~, which returns a promise~, and then makes it so
    that if the promise is [[ #TYPEt| //rejected//]]~, the exception is passed to
    <<span class="odocwiki_inlinecode"|!>><<a_api | val Lwt.async_exception_hook >>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="async_exception_hook"| value Lwt.async_exception_hook >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|~Reference to a function~, to be called on an "unhandled" exception~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="async_method"| value Lwt_unix.async_method >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|async~_method ~(~)>> returns the async method used in the current
      thread~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="async_method_key"| value Lwt_unix.async_method_key >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~The key for storing the local async method~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="at_exit"| value Lwt_main.at_exit >> ~[<<a_api | module Lwt_main >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|at~_exit hook>> adds hook at the left of <<span class="odocwiki_inlinecode"|exit~_hooks>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="atomic"| value Lwt_io.atomic >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|atomic f>> transforms a sequence of io operations into one
      single atomic io operation~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="auto_yield"| value Lwt_unix.auto_yield >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|auto~_yield timeout>> returns a function <<span class="odocwiki_inlinecode"|f>> that will yield
      every <<span class="odocwiki_inlinecode"|timeout>> seconds~.
>>
|
|@@ @style="tet-align: left;"@@\\B|
|@@class="odocwiki_index"@ @@<<a_api text="bind"| value Lwt_unix.bind >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Binds an address to the given socket~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="bind"| value Lwt_react.S.bind >> ~[<<a_api | module Lwt_react.S >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|bind ~?eq s f>> is initially <<span class="odocwiki_inlinecode"|f x>> where <<span class="odocwiki_inlinecode"|x>> is the current
        value of <<span class="odocwiki_inlinecode"|s>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="bind"| value Lwt.bind >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~Lwt~.bind p~_~1 f>> makes it so that <<span class="odocwiki_inlinecode"|f>> will run when <<span class="odocwiki_inlinecode"|p~_~1>> is [[ #TYPEt|
    //fulfilled//]]~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="bind"| value Lwt_result.bind >> ~[<<a_api | module Lwt_result >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="bind_1"| value Lwt_unix.Versioned.bind_1 >> ~[<<a_api | module Lwt_unix.Versioned >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_deprecated"|~Old version of <<a_api | val Lwt_unix.bind >>~.
>>>>
|
|@@class="odocwiki_index"@ @@<<a_api text="bind_2"| value Lwt_unix.Versioned.bind_2 >> ~[<<a_api | module Lwt_unix.Versioned >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_deprecated"|~Since ~Lwt ~3~.~0~.~0~, this is just an alias for <<a_api | val Lwt_unix.bind >>~.
>>>>
|
|@@class="odocwiki_index"@ @@<<a_api text="bind_lwt"| value Lwt_result.bind_lwt >> ~[<<a_api | module Lwt_result >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="bind_lwt_err"| value Lwt_result.bind_lwt_err >> ~[<<a_api | module Lwt_result >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="bind_result"| value Lwt_result.bind_result >> ~[<<a_api | module Lwt_result >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="bind_s"| value Lwt_react.S.bind_s >> ~[<<a_api | module Lwt_react.S >>~]|<<div class="odocwiki_info"|~Same as <<a_api | val Lwt_react.S.bind >> except that <<span class="odocwiki_inlinecode"|f>> returns a thread~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="blit"| value Lwt_bytes.blit >> ~[<<a_api | module Lwt_bytes >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|blit buf~1 ofs~1 buf~2 ofs~2 len>> copies <<span class="odocwiki_inlinecode"|len>> bytes from <<span class="odocwiki_inlinecode"|buf~1>>
      starting at offset <<span class="odocwiki_inlinecode"|ofs~1>> to <<span class="odocwiki_inlinecode"|buf~2>> starting at offset <<span class="odocwiki_inlinecode"|ofs~2>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="blit_from_bytes"| value Lwt_bytes.blit_from_bytes >> ~[<<a_api | module Lwt_bytes >>~]|<<div class="odocwiki_info"|~Same as <<a_api | val Lwt_bytes.blit >> but the first buffer is a string instead of a byte
      array~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="blit_to_bytes"| value Lwt_bytes.blit_to_bytes >> ~[<<a_api | module Lwt_bytes >>~]|<<div class="odocwiki_info"|~Same as <<a_api | val Lwt_bytes.blit >> but the second buffer is a string instead of a byte
      array~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="block"| value Lwt_io.block >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|block ch size f>> pass to <<span class="odocwiki_inlinecode"|f>> the internal buffer and an
      offset~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="blocking"| value Lwt_unix.blocking >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|blocking fd>> indicates whether ~Lwt is internally using blocking or
    non~-blocking ~I~/~O with <<span class="odocwiki_inlinecode"|fd>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="broadcast"| value Lwt_condition.broadcast >> ~[<<a_api | module Lwt_condition >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|broadcast condvar value>> notifies all waiting threads~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="broadcast_exn"| value Lwt_condition.broadcast_exn >> ~[<<a_api | module Lwt_condition >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|broadcast~_exn condvar exn>> fails all waiting threads with exception
        <<span class="odocwiki_inlinecode"|exn>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="buffer_size"| value Lwt_io.buffer_size >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|~Returns the size of the internal buffer~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="buffered"| value Lwt_io.buffered >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|buffered oc>> returns the number of bytes in the buffer
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="byte_order"| value Lwt_sys.byte_order >> ~[<<a_api | module Lwt_sys >>~]|<<div class="odocwiki_info"|~The byte order used by the computer running the program~.
>>
|
|@@ @style="tet-align: left;"@@\\C|
|@@class="odocwiki_index"@ @@<<a_api text="call_notification"| value Lwt_unix.call_notification >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Call the handler associated to the given notification~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="cancel"| value Lwt.cancel >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~Lwt~.cancel p>> attempts to //cancel// the pending promise <<span class="odocwiki_inlinecode"|p>>~, without
    needing access to its resolver~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="cancel_jobs"| value Lwt_unix.cancel_jobs >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|cancel~_jobs ~(~)>> is the same as <<span class="odocwiki_inlinecode"|abort~_jobs ~Lwt~.~Canceled>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="catch"| value Lwt.catch >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~Lwt~.catch f h>> applies <<span class="odocwiki_inlinecode"|f ~(~)>>~, which returns a promise~, and then makes it
    so that <<span class="odocwiki_inlinecode"|h>> ~(“handler”~) will run when that promise is [[ #TYPEt|
    //rejected//]]~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="catch"| value Lwt_result.catch >> ~[<<a_api | module Lwt_result >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|catch x>> behaves like <<span class="odocwiki_inlinecode"|return y>> if <<span class="odocwiki_inlinecode"|x>> evaluates to <<span class="odocwiki_inlinecode"|y>>~,
    and like <<span class="odocwiki_inlinecode"|fail e>> if <<span class="odocwiki_inlinecode"|x>> raises <<span class="odocwiki_inlinecode"|e>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="change"| value Lwt_timeout.change >> ~[<<a_api | module Lwt_timeout >>~]|<<div class="odocwiki_info"|changes the duration of a timeout~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="chars_of_file"| value Lwt_io.chars_of_file >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|chars~_of~_file name>> returns a stream of all characters of the
      file with name <<span class="odocwiki_inlinecode"|name>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="chars_to_file"| value Lwt_io.chars_to_file >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|chars~_to~_file name chars>> writes all characters of <<span class="odocwiki_inlinecode"|chars>> to
      <<span class="odocwiki_inlinecode"|name>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="chdir"| value Lwt_unix.chdir >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.chdir>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="check"| value Lwt_switch.check >> ~[<<a_api | module Lwt_switch >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|check switch>> does nothing if <<span class="odocwiki_inlinecode"|switch>> is <<span class="odocwiki_inlinecode"|~None>> or contains an
      switch that is currently on~, and raises <<a_api | exception Lwt_switch.Off >> otherwise~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="check_descriptor"| value Lwt_unix.check_descriptor >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|check~_descriptor fd>> raise an exception if <<span class="odocwiki_inlinecode"|fd>> is not in the
      state <<span class="odocwiki_inlinecode"|~Open>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="chmod"| value Lwt_unix.chmod >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.chmod>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="choose"| value Lwt.choose >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~Lwt~.choose ps>> is the same as <<a_api | val Lwt.pick >><<span class="odocwiki_inlinecode"| ps>>~, except that it does not try
    to cancel pending promises in <<span class="odocwiki_inlinecode"|ps>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="choose"| value Lwt_stream.choose >> ~[<<a_api | module Lwt_stream >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|choose l>> creates an stream from a list of streams~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="chown"| value Lwt_unix.chown >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.chown>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="chroot"| value Lwt_unix.chroot >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.chroot>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="clear"| value Lwt_pool.clear >> ~[<<a_api | module Lwt_pool >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|clear p>> will clear all elements in <<span class="odocwiki_inlinecode"|p>>~, calling the <<span class="odocwiki_inlinecode"|dispose>> function
      associated with <<span class="odocwiki_inlinecode"|p>> on each of the cleared elements~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="clear_close_on_exec"| value Lwt_unix.clear_close_on_exec >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.clear~_close~_on~_exec>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="clone"| value Lwt_stream.clone >> ~[<<a_api | module Lwt_stream >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|clone st>> clone the given stream~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="close"| value Lwt_io.close >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|close ch>> closes the given channel~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="close"| value Lwt_unix.close >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Close a **file descriptor**~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="closed"| value Lwt_stream.closed >> ~[<<a_api | module Lwt_stream >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|closed st>> returns a thread that will sleep until the stream has been
    closed~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="closedir"| value Lwt_unix.closedir >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Closes a directory handle~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="combine"| value Lwt_stream.combine >> ~[<<a_api | module Lwt_stream >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|combine s~1 s~2>> combines two streams~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="compare"| value Lwt_pqueue.OrderedType.compare >> ~[<<a_api | module Lwt_pqueue.OrderedType >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="concat"| value Lwt_stream.concat >> ~[<<a_api | module Lwt_stream >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|concat st>> returns the concatenation of all streams of <<span class="odocwiki_inlinecode"|st>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="connect"| value Lwt_unix.connect >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.connect>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="copy"| value Lwt_bytes.copy >> ~[<<a_api | module Lwt_bytes >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|copy buffer>> creates a copy of the given byte array~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="create"| value Lwt_bytes.create >> ~[<<a_api | module Lwt_bytes >>~]|<<div class="odocwiki_info"|~Creates a new byte array of the given size~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="create"| value Lwt_unix.IO_vectors.create >> ~[<<a_api | module Lwt_unix.IO_vectors >>~]|<<div class="odocwiki_info"|~Creates an empty ~I~/~O vector sequence~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="create"| value Lwt_timeout.create >> ~[<<a_api | module Lwt_timeout >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|create n f>> defines a new timeout with <<span class="odocwiki_inlinecode"|n>> seconds duration~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="create"| value Lwt_throttle.S.create >> ~[<<a_api | module Lwt_throttle.S >>~]|<<div class="odocwiki_info"|>>
|
|@@class="odocwiki_index"@ @@<<a_api text="create"| value Lwt_switch.create >> ~[<<a_api | module Lwt_switch >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|create ~(~)>> creates a new switch~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="create"| value Lwt_sequence.create >> ~[<<a_api | module Lwt_sequence >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|create ~(~)>> creates a new empty sequence
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="create"| value Lwt_pool.create >> ~[<<a_api | module Lwt_pool >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|create n ~?check ~?validate ~?dispose f>> creates a new pool with at most
      <<span class="odocwiki_inlinecode"|n>> elements~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="create"| value Lwt_condition.create >> ~[<<a_api | module Lwt_condition >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|create ~(~)>> creates a new condition variable~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="create"| value Lwt_mutex.create >> ~[<<a_api | module Lwt_mutex >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|create ~(~)>> creates a new mutex~, which is initially unlocked
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="create"| value Lwt_mvar.create >> ~[<<a_api | module Lwt_mvar >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|create v>> creates a new mailbox variable containing value <<span class="odocwiki_inlinecode"|v>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="create"| value Lwt_stream.create >> ~[<<a_api | module Lwt_stream >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|create ~(~)>> returns a new stream and a push function~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="create_bounded"| value Lwt_stream.create_bounded >> ~[<<a_api | module Lwt_stream >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|create~_bounded size>> returns a new stream and a bounded push
    source~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="create_empty"| value Lwt_mvar.create_empty >> ~[<<a_api | module Lwt_mvar >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|create ~(~)>> creates a new empty mailbox variable~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="create_with_reference"| value Lwt_stream.create_with_reference >> ~[<<a_api | module Lwt_stream >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|create~_with~_reference ~(~)>> returns a new stream and a push
    function~.
>>
|
|@@ @style="tet-align: left;"@@\\D|
|@@class="odocwiki_index"@ @@<<a_api text="default"| value Lwt_engine.Ev_backend.default >> ~[<<a_api | module Lwt_engine.Ev_backend >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="default_async_method"| value Lwt_unix.default_async_method >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Returns the default async method~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="default_buffer_size"| value Lwt_io.default_buffer_size >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|~Return the default size for buffers~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="delay"| value Lwt_react.E.delay >> ~[<<a_api | module Lwt_react.E >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|delay thread>> is an event which does not occurs until
        <<span class="odocwiki_inlinecode"|thread>> returns~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="detach"| value Lwt_preemptive.detach >> ~[<<a_api | module Lwt_preemptive >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|detach f x>> runs the computation <<span class="odocwiki_inlinecode"|f x>> in a separate preemptive thread~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="devpoll"| value Lwt_engine.Ev_backend.devpoll >> ~[<<a_api | module Lwt_engine.Ev_backend >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="diff_s"| value Lwt_react.S.diff_s >> ~[<<a_api | module Lwt_react.S >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="diff_s"| value Lwt_react.E.diff_s >> ~[<<a_api | module Lwt_react.E >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="direct_access"| value Lwt_io.direct_access >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|direct~_access ch f>> passes to <<span class="odocwiki_inlinecode"|f>> a <<a_api | val Lwt_io.direct_access >>
      structure~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="disable_signal_handler"| value Lwt_unix.disable_signal_handler >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Stops receiving this signal
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="drop"| value Lwt_unix.IO_vectors.drop >> ~[<<a_api | module Lwt_unix.IO_vectors >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|drop vs n>> adjusts the ~I~/~O vector sequence <<span class="odocwiki_inlinecode"|vs>> so that it no longer
      includes its first <<span class="odocwiki_inlinecode"|n>> bytes~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="dup"| value Lwt_unix.dup >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.dup>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="dup2"| value Lwt_unix.dup2 >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.dup~2>>
>>
|
|@@ @style="tet-align: left;"@@\\E|
|@@class="odocwiki_index"@ @@<<a_api text="empty"| value Lwt_pqueue.S.empty >> ~[<<a_api | module Lwt_pqueue.S >>~]|<<div class="odocwiki_info"|~The empty priority queue~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="enter_iter_hooks"| value Lwt_main.enter_iter_hooks >> ~[<<a_api | module Lwt_main >>~]|<<div class="odocwiki_info"|~Functions that are called before the main iteration~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="epoll"| value Lwt_engine.Ev_backend.epoll >> ~[<<a_api | module Lwt_engine.Ev_backend >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="eprint"| value Lwt_io.eprint >> ~[<<a_api | module Lwt_io >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="eprintf"| value Lwt_io.eprintf >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~%!>> does nothing here~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="eprintl"| value Lwt_io.eprintl >> ~[<<a_api | module Lwt_io >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="eprintlf"| value Lwt_io.eprintlf >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~%!>> does nothing here~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="establish_server"| value Lwt_io.establish_server >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_deprecated"|~Like <<span class="odocwiki_inlinecode"|establish~_server~_with~_client~_address>>~, but does not pass the client
    address to the callback <<span class="odocwiki_inlinecode"|f>>~.
>>>>
|
|@@class="odocwiki_index"@ @@<<a_api text="establish_server_1"| value Lwt_io.Versioned.establish_server_1 >> ~[<<a_api | module Lwt_io.Versioned >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_deprecated"|~Old version of <<a_api | val Lwt_io.establish_server >>~.
>>>>
|
|@@class="odocwiki_index"@ @@<<a_api text="establish_server_2"| value Lwt_io.Versioned.establish_server_2 >> ~[<<a_api | module Lwt_io.Versioned >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_deprecated"|~Since ~Lwt ~3~.~0~.~0~, this is just an alias for <<a_api | val Lwt_io.establish_server >>~.
>>>>
|
|@@class="odocwiki_index"@ @@<<a_api text="establish_server_with_client_address"| value Lwt_io.establish_server_with_client_address >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|establish~_server~_with~_client~_address listen~_address f>> creates a server
    which listens for incoming connections on <<span class="odocwiki_inlinecode"|listen~_address>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="exec"| value Lwt_process.exec >> ~[<<a_api | module Lwt_process >>~]|<<div class="odocwiki_info"|~Executes the given command and returns its exit status~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="execute_job"| value Lwt_unix.execute_job >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_deprecated"|>>>>
|
|@@class="odocwiki_index"@ @@<<a_api text="exists_p"| value Lwt_list.exists_p >> ~[<<a_api | module Lwt_list >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="exists_s"| value Lwt_list.exists_s >> ~[<<a_api | module Lwt_list >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="exit_hooks"| value Lwt_main.exit_hooks >> ~[<<a_api | module Lwt_main >>~]|<<div class="odocwiki_info"|~Sets of functions executed just before the program exit~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="extract"| value Lwt_bytes.extract >> ~[<<a_api | module Lwt_bytes >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|extract buffer offset length>> creates a new byte array of
      length <<span class="odocwiki_inlinecode"|length>> and copy the <<span class="odocwiki_inlinecode"|length>> bytes of <<span class="odocwiki_inlinecode"|buffer>> at
      <<span class="odocwiki_inlinecode"|offset>> into it~.
>>
|
|@@ @style="tet-align: left;"@@\\F|
|@@class="odocwiki_index"@ @@<<a_api text="fail"| value Lwt.fail >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~Lwt~.fail exn>> is like <<a_api | val Lwt.return >>~, except the new [[ #TYPEt| promise]]
    that is //already rejected// with <<span class="odocwiki_inlinecode"|exn>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="fail"| value Lwt_result.fail >> ~[<<a_api | module Lwt_result >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="fail_invalid_arg"| value Lwt.fail_invalid_arg >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~Lwt~.invalid~_arg s>> is an abbreviation for
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="fail_with"| value Lwt.fail_with >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~Lwt~.fail~_with s>> is an abbreviation for
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="fake_event"| value Lwt_engine.fake_event >> ~[<<a_api | module Lwt_engine >>~]|<<div class="odocwiki_info"|~Event which does nothing when stopped~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="fake_io"| value Lwt_engine.fake_io >> ~[<<a_api | module Lwt_engine >>~]|<<div class="odocwiki_info"|~Simulates activity on the given file descriptor~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="fchmod"| value Lwt_unix.fchmod >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.fchmod>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="fchown"| value Lwt_unix.fchown >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.fchown>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="fdatasync"| value Lwt_unix.fdatasync >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Synchronise all data ~(but not metadata~) of the file descriptor
      with the disk~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="file_exists"| value Lwt_unix.LargeFile.file_exists >> ~[<<a_api | module Lwt_unix.LargeFile >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|file~_exists name>> tests if a file named <<span class="odocwiki_inlinecode"|name>> exists~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="file_exists"| value Lwt_unix.file_exists >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|file~_exists name>> tests if a file named <<span class="odocwiki_inlinecode"|name>> exists~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="file_length"| value Lwt_io.file_length >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|~Retrieves the length of the file at the given path~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="files_of_directory"| value Lwt_unix.files_of_directory >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|files~_of~_directory dir>> returns the stream of all files of
      <<span class="odocwiki_inlinecode"|dir>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="fill"| value Lwt_bytes.fill >> ~[<<a_api | module Lwt_bytes >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|fill buffer offset length value>> puts <<span class="odocwiki_inlinecode"|value>> in all <<span class="odocwiki_inlinecode"|length>>
      bytes of <<span class="odocwiki_inlinecode"|buffer>> starting at offset <<span class="odocwiki_inlinecode"|offset>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="filter"| value Lwt_stream.filter >> ~[<<a_api | module Lwt_stream >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="filter_map"| value Lwt_stream.filter_map >> ~[<<a_api | module Lwt_stream >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="filter_map_p"| value Lwt_list.filter_map_p >> ~[<<a_api | module Lwt_list >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="filter_map_s"| value Lwt_list.filter_map_s >> ~[<<a_api | module Lwt_list >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="filter_map_s"| value Lwt_stream.filter_map_s >> ~[<<a_api | module Lwt_stream >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|filter~_map f st>> filter and map <<span class="odocwiki_inlinecode"|st>> at the same time
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="filter_p"| value Lwt_react.E.filter_p >> ~[<<a_api | module Lwt_react.E >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="filter_p"| value Lwt_list.filter_p >> ~[<<a_api | module Lwt_list >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="filter_s"| value Lwt_react.S.filter_s >> ~[<<a_api | module Lwt_react.S >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="filter_s"| value Lwt_react.E.filter_s >> ~[<<a_api | module Lwt_react.E >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="filter_s"| value Lwt_list.filter_s >> ~[<<a_api | module Lwt_list >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="filter_s"| value Lwt_stream.filter_s >> ~[<<a_api | module Lwt_stream >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|filter f st>> keeps only values~, <<span class="odocwiki_inlinecode"|x>>~, such that <<span class="odocwiki_inlinecode"|f x>> is <<span class="odocwiki_inlinecode"|true>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="finalise"| value Lwt_gc.finalise >> ~[<<a_api | module Lwt_gc >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|finalise f x>> ensures <<span class="odocwiki_inlinecode"|f x>> is evaluated after <<span class="odocwiki_inlinecode"|x>> has been
      garbage collected~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="finalise_or_exit"| value Lwt_gc.finalise_or_exit >> ~[<<a_api | module Lwt_gc >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|finalise~_or~_exit f x>> call <<span class="odocwiki_inlinecode"|f x>> when <<span class="odocwiki_inlinecode"|x>> is garbage collected
      or ~(exclusively~) when the program exits~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="finalize"| value Lwt.finalize >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~Lwt~.finalize f c>> applies <<span class="odocwiki_inlinecode"|f ~(~)>>~, which returns a promise~, and then makes
    it so <<span class="odocwiki_inlinecode"|c>> ~(“cleanup”~) will run when that promise is [[ #TYPEt|
    //resolved//]]~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="find"| value Lwt_stream.find >> ~[<<a_api | module Lwt_stream >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="find_map"| value Lwt_stream.find_map >> ~[<<a_api | module Lwt_stream >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="find_map_s"| value Lwt_stream.find_map_s >> ~[<<a_api | module Lwt_stream >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|find~_map f s>> find and map at the same time~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="find_min"| value Lwt_pqueue.S.find_min >> ~[<<a_api | module Lwt_pqueue.S >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|find~_min q>> evaluates to the minimum element of <<span class="odocwiki_inlinecode"|q>> if it is not empty~,
        and raises <<span class="odocwiki_inlinecode"|~Not~_found>> otherwise~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="find_node_l"| value Lwt_sequence.find_node_l >> ~[<<a_api | module Lwt_sequence >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|find~_node~_l f s>> returns the first node of <<span class="odocwiki_inlinecode"|s>> starting from the left
      that satisfies <<span class="odocwiki_inlinecode"|f>> or raises <<span class="odocwiki_inlinecode"|~Not~_found>> if none exists~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="find_node_opt_l"| value Lwt_sequence.find_node_opt_l >> ~[<<a_api | module Lwt_sequence >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|find~_node~_opt~_l f s>> returns <<span class="odocwiki_inlinecode"|~Some x>>~, where <<span class="odocwiki_inlinecode"|x>> is the first node of
      <<span class="odocwiki_inlinecode"|s>> starting from the left that satisfies <<span class="odocwiki_inlinecode"|f>> or <<span class="odocwiki_inlinecode"|~None>> if none
      exists~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="find_node_opt_r"| value Lwt_sequence.find_node_opt_r >> ~[<<a_api | module Lwt_sequence >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|find~_node~_opt~_r f s>> returns <<span class="odocwiki_inlinecode"|~Some x>>~, where <<span class="odocwiki_inlinecode"|x>> is the first node of
      <<span class="odocwiki_inlinecode"|s>> starting from the right that satisfies <<span class="odocwiki_inlinecode"|f>> or <<span class="odocwiki_inlinecode"|~None>> if none
      exists~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="find_node_r"| value Lwt_sequence.find_node_r >> ~[<<a_api | module Lwt_sequence >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|find~_node~_r f s>> returns the first node of <<span class="odocwiki_inlinecode"|s>> starting from the right
      that satisfies <<span class="odocwiki_inlinecode"|f>> or raises <<span class="odocwiki_inlinecode"|~Not~_found>> if none exists~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="find_s"| value Lwt_list.find_s >> ~[<<a_api | module Lwt_list >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="find_s"| value Lwt_stream.find_s >> ~[<<a_api | module Lwt_stream >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|find f s>> find an element in a stream~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="flatten"| value Lwt_stream.flatten >> ~[<<a_api | module Lwt_stream >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|flatten st ~= map~_list ~(fun l ~-~> l~) st>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="flush"| value Lwt_io.flush >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|flush oc>> performs all pending writes on <<span class="odocwiki_inlinecode"|oc>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="flush_all"| value Lwt_io.flush_all >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|flush~_all ~(~)>> flushes all open output channels
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="fmap_p"| value Lwt_react.E.fmap_p >> ~[<<a_api | module Lwt_react.E >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="fmap_s"| value Lwt_react.S.fmap_s >> ~[<<a_api | module Lwt_react.S >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="fmap_s"| value Lwt_react.E.fmap_s >> ~[<<a_api | module Lwt_react.E >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="fold"| value Lwt_stream.fold >> ~[<<a_api | module Lwt_stream >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="fold_l"| value Lwt_sequence.fold_l >> ~[<<a_api | module Lwt_sequence >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|fold~_l f s>> is~:
      
<<code language='ocaml'|        fold_l f s x = f en (... (f e2 (f e1 x)))
      >>

      where <<span class="odocwiki_inlinecode"|e~1>>~, <<span class="odocwiki_inlinecode"|e~2>>~, ~.~.~.~, <<span class="odocwiki_inlinecode"|en>> are the elements of <<span class="odocwiki_inlinecode"|s>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="fold_left_s"| value Lwt_list.fold_left_s >> ~[<<a_api | module Lwt_list >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="fold_r"| value Lwt_sequence.fold_r >> ~[<<a_api | module Lwt_sequence >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|fold~_r f s>> is~:
      
<<code language='ocaml'|        fold_r f s x = f e1 (f e2 (... (f en x)))
      >>

      where <<span class="odocwiki_inlinecode"|e~1>>~, <<span class="odocwiki_inlinecode"|e~2>>~, ~.~.~.~, <<span class="odocwiki_inlinecode"|en>> are the elements of <<span class="odocwiki_inlinecode"|s>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="fold_right_s"| value Lwt_list.fold_right_s >> ~[<<a_api | module Lwt_list >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="fold_s"| value Lwt_react.S.fold_s >> ~[<<a_api | module Lwt_react.S >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="fold_s"| value Lwt_react.E.fold_s >> ~[<<a_api | module Lwt_react.E >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="fold_s"| value Lwt_stream.fold_s >> ~[<<a_api | module Lwt_stream >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|fold f s x>> fold~_like function for streams~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="for_all_p"| value Lwt_list.for_all_p >> ~[<<a_api | module Lwt_list >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="for_all_s"| value Lwt_list.for_all_s >> ~[<<a_api | module Lwt_list >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="fork"| value Lwt_unix.fork >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|fork ~(~)>> does the same as <<span class="odocwiki_inlinecode"|~Unix~.fork>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="fprint"| value Lwt_io.fprint >> ~[<<a_api | module Lwt_io >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="fprintf"| value Lwt_io.fprintf >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~%!>> does nothing here~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="fprintl"| value Lwt_io.fprintl >> ~[<<a_api | module Lwt_io >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="fprintlf"| value Lwt_io.fprintlf >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~%!>> does nothing here~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="from"| value Lwt_react.E.from >> ~[<<a_api | module Lwt_react.E >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|from f>> creates an event which occurs each time <<span class="odocwiki_inlinecode"|f ~(~)>>
        returns a value~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="from"| value Lwt_stream.from >> ~[<<a_api | module Lwt_stream >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|from f>> creates a stream from the given input function~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="from_direct"| value Lwt_stream.from_direct >> ~[<<a_api | module Lwt_stream >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|from~_direct f>> does the same as <<a_api | val Lwt_stream.from >> but with a function
    that does not return a thread~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="fstat"| value Lwt_unix.LargeFile.fstat >> ~[<<a_api | module Lwt_unix.LargeFile >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.~Large~File~.fstat>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="fstat"| value Lwt_unix.fstat >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.fstat>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="fsync"| value Lwt_unix.fsync >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Synchronise all data and metadata of the file descriptor with
      the disk~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="ftruncate"| value Lwt_unix.LargeFile.ftruncate >> ~[<<a_api | module Lwt_unix.LargeFile >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.~Large~File~.ftruncate>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="ftruncate"| value Lwt_unix.ftruncate >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.ftruncate>>
>>
|
|@@ @style="tet-align: left;"@@\\G|
|@@class="odocwiki_index"@ @@<<a_api text="get"| value Lwt_bytes.get >> ~[<<a_api | module Lwt_bytes >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|get buffer offset>> returns the byte at offset <<span class="odocwiki_inlinecode"|offset>> in
      <<span class="odocwiki_inlinecode"|buffer>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="get"| value Lwt_engine.get >> ~[<<a_api | module Lwt_engine >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|get ~(~)>> returns the engine currently in use~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="get"| value Lwt_sequence.get >> ~[<<a_api | module Lwt_sequence >>~]|<<div class="odocwiki_info"|~Returns the contents of a node
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="get"| value Lwt.get >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|~Retrieves the value currently associated with the given implicit callback
    argument key~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="get"| value Lwt_stream.get >> ~[<<a_api | module Lwt_stream >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|get st>> removes and returns the first element of the stream~, if
    any~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="get_affinity"| value Lwt_unix.get_affinity >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|get~_affinity ~?pid ~(~)>> returns the list of ~C~P~Us the process with
      pid <<span class="odocwiki_inlinecode"|pid>> is allowed to run on~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="get_available"| value Lwt_stream.get_available >> ~[<<a_api | module Lwt_stream >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|get~_available st>> returns all available elements of <<span class="odocwiki_inlinecode"|l>> without
    blocking~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="get_available_up_to"| value Lwt_stream.get_available_up_to >> ~[<<a_api | module Lwt_stream >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|get~_available~_up~_to n st>> returns up to <<span class="odocwiki_inlinecode"|n>> elements of <<span class="odocwiki_inlinecode"|l>>
    without blocking~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="get_bounds"| value Lwt_preemptive.get_bounds >> ~[<<a_api | module Lwt_preemptive >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|get~_bounds ~(~)>> returns the minimum and the maximum number of
      preemptive threads~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="get_cpu"| value Lwt_unix.get_cpu >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|get~_cpu ~(~)>> returns the number of the ~C~P~U the current thread is
      running on~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="get_credentials"| value Lwt_unix.get_credentials >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|get~_credentials fd>> returns credentials information from the
      given socket~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="get_exn"| value Lwt_result.get_exn >> ~[<<a_api | module Lwt_result >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|get~_exn>> is the opposite of <<a_api | val Lwt_result.catch >>~: it unwraps the result type~,
    returning the value in case of success~, calls <<a_api | val Lwt.fail >> in
    case of error~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="get_max_number_of_threads_queued"| value Lwt_preemptive.get_max_number_of_threads_queued >> ~[<<a_api | module Lwt_preemptive >>~]|<<div class="odocwiki_info"|~Returns the size of the waiting queue~, if no more threads are
      available
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="get_while"| value Lwt_stream.get_while >> ~[<<a_api | module Lwt_stream >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="get_while_s"| value Lwt_stream.get_while_s >> ~[<<a_api | module Lwt_stream >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|get~_while f st>> returns the longest prefix of <<span class="odocwiki_inlinecode"|st>> where all
    elements satisfy <<span class="odocwiki_inlinecode"|f>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="getaddrinfo"| value Lwt_unix.getaddrinfo >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.getaddrinfo>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="getcwd"| value Lwt_unix.getcwd >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.getcwd>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="getgrgid"| value Lwt_unix.getgrgid >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.getgrgid>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="getgrnam"| value Lwt_unix.getgrnam >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.getgrnam>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="gethostbyaddr"| value Lwt_unix.gethostbyaddr >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.gethostbyaddr>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="gethostbyname"| value Lwt_unix.gethostbyname >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.gethostbyname>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="gethostname"| value Lwt_unix.gethostname >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.gethostname>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="getlogin"| value Lwt_unix.getlogin >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.getlogin>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="getnameinfo"| value Lwt_unix.getnameinfo >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.getnameinfo>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="getpeername"| value Lwt_unix.getpeername >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.getpeername>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="getprotobyname"| value Lwt_unix.getprotobyname >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.getprotobyname>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="getprotobynumber"| value Lwt_unix.getprotobynumber >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.getprotobynumber>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="getpwnam"| value Lwt_unix.getpwnam >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.getpwnam>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="getpwuid"| value Lwt_unix.getpwuid >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.getpwuid>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="getservbyname"| value Lwt_unix.getservbyname >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.getservbyname>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="getservbyport"| value Lwt_unix.getservbyport >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.getservbyport>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="getsockname"| value Lwt_unix.getsockname >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.getsockname>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="getsockopt"| value Lwt_unix.getsockopt >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.getsockopt>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="getsockopt_error"| value Lwt_unix.getsockopt_error >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.getsockopt~_error>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="getsockopt_float"| value Lwt_unix.getsockopt_float >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.getsockopt~_float>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="getsockopt_int"| value Lwt_unix.getsockopt_int >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.getsockopt~_int>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="getsockopt_optint"| value Lwt_unix.getsockopt_optint >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.getsockopt~_optint>>
>>
|
|@@ @style="tet-align: left;"@@\\H|
|@@class="odocwiki_index"@ @@<<a_api text="handle_unix_error"| value Lwt_unix.handle_unix_error >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Same as <<span class="odocwiki_inlinecode"|~Unix~.handle~_unix~_error>> but catches lwt~-level
      exceptions
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="have"| value Lwt_sys.have >> ~[<<a_api | module Lwt_sys >>~]|<<div class="odocwiki_info"|~Test whether the given feature is available on the current
      system~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="hexdump"| value Lwt_io.hexdump >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|hexdump oc str ~= hexdump~_stream oc ~(~Lwt~_stream~.of~_string str~)>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="hexdump"| value Lwt_stream.hexdump >> ~[<<a_api | module Lwt_stream >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|hexdump byte~_stream>> returns a stream which is the same as the
    output of <<span class="odocwiki_inlinecode"|hexdump ~-~C>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="hexdump_stream"| value Lwt_io.hexdump_stream >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|hexdump~_stream oc byte~_stream>> produces the same output as the
      command <<span class="odocwiki_inlinecode"|hexdump ~-~C>>~.
>>
|
|@@ @style="tet-align: left;"@@\\I|
|@@class="odocwiki_index"@ @@<<a_api text="ignore_result"| value Lwt.ignore_result >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|~An obsolete variant of <<a_api | val Lwt.async >>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="init"| value Lwt_preemptive.init >> ~[<<a_api | module Lwt_preemptive >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|init min max log>> initialises this module~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="input"| value Lwt_io.input >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|input>> input mode representation
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="io_vector"| value Lwt_bytes.io_vector >> ~[<<a_api | module Lwt_bytes >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="io_vector"| value Lwt_unix.io_vector >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Creates an io~-vector
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="is_busy"| value Lwt_io.is_busy >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|is~_busy channel>> returns whether the given channel is currently
      busy~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="is_closed"| value Lwt_stream.is_closed >> ~[<<a_api | module Lwt_stream >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|is~_closed st>> returns whether the given stream has been closed~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="is_empty"| value Lwt_unix.IO_vectors.is_empty >> ~[<<a_api | module Lwt_unix.IO_vectors >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|is~_empty vs>> is <<span class="odocwiki_inlinecode"|true>> if and only if <<span class="odocwiki_inlinecode"|vs>> has no ~I~/~O vectors~, or all ~I~/~O
      vectors in <<span class="odocwiki_inlinecode"|vs>> have zero bytes~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="is_empty"| value Lwt_sequence.is_empty >> ~[<<a_api | module Lwt_sequence >>~]|<<div class="odocwiki_info"|~Returns <<span class="odocwiki_inlinecode"|true>> iff the given sequence is empty
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="is_empty"| value Lwt_pqueue.S.is_empty >> ~[<<a_api | module Lwt_pqueue.S >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|is~_empty q>> evaluates to <<span class="odocwiki_inlinecode"|true>> iff <<span class="odocwiki_inlinecode"|q>> is empty~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="is_empty"| value Lwt_mutex.is_empty >> ~[<<a_api | module Lwt_mutex >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|is~_empty mutex>> returns <<span class="odocwiki_inlinecode"|true>> if they are no thread waiting on
      the mutex~, and <<span class="odocwiki_inlinecode"|false>> otherwise
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="is_empty"| value Lwt_mvar.is_empty >> ~[<<a_api | module Lwt_mvar >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|is~_empty mvar>> indicates if <<span class="odocwiki_inlinecode"|put mvar>> can be called without
      blocking~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="is_empty"| value Lwt_stream.is_empty >> ~[<<a_api | module Lwt_stream >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|is~_empty st>> returns whether the given stream is empty~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="is_locked"| value Lwt_mutex.is_locked >> ~[<<a_api | module Lwt_mutex >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|locked mutex>> returns whether <<span class="odocwiki_inlinecode"|mutex>> is currently locked
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="is_on"| value Lwt_switch.is_on >> ~[<<a_api | module Lwt_switch >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|is~_on switch>> returns <<span class="odocwiki_inlinecode"|true>> if the switch is currently on~, and
      <<span class="odocwiki_inlinecode"|false>> otherwise~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="is_sleeping"| value Lwt.is_sleeping >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~Lwt~.is~_sleeping p>> is equivalent to <<a_api | val Lwt.state >><<span class="odocwiki_inlinecode"| p ~= ~Lwt~.~Sleep>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="isatty"| value Lwt_unix.isatty >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.isatty>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="iter"| value Lwt_engine.iter >> ~[<<a_api | module Lwt_engine >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|iter block>> performs one iteration of the main loop~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="iter"| value Lwt_stream.iter >> ~[<<a_api | module Lwt_stream >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="iter_l"| value Lwt_sequence.iter_l >> ~[<<a_api | module Lwt_sequence >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|iter~_l f s>> applies <<span class="odocwiki_inlinecode"|f>> on all elements of <<span class="odocwiki_inlinecode"|s>> starting from
      the left
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="iter_n"| value Lwt_stream.iter_n >> ~[<<a_api | module Lwt_stream >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|iter~_n ~?max~_threads f s>> iterates over all elements of the stream <<span class="odocwiki_inlinecode"|s>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="iter_node_l"| value Lwt_sequence.iter_node_l >> ~[<<a_api | module Lwt_sequence >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|iter~_l f s>> applies <<span class="odocwiki_inlinecode"|f>> on all nodes of <<span class="odocwiki_inlinecode"|s>> starting from
      the left
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="iter_node_r"| value Lwt_sequence.iter_node_r >> ~[<<a_api | module Lwt_sequence >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|iter~_l f s>> applies <<span class="odocwiki_inlinecode"|f>> on all nodes of <<span class="odocwiki_inlinecode"|s>> starting from
      the right
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="iter_p"| value Lwt_list.iter_p >> ~[<<a_api | module Lwt_list >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="iter_p"| value Lwt_stream.iter_p >> ~[<<a_api | module Lwt_stream >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="iter_r"| value Lwt_sequence.iter_r >> ~[<<a_api | module Lwt_sequence >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|iter~_l f s>> applies <<span class="odocwiki_inlinecode"|f>> on all elements of <<span class="odocwiki_inlinecode"|s>> starting from
      the right
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="iter_s"| value Lwt_list.iter_s >> ~[<<a_api | module Lwt_list >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="iter_s"| value Lwt_stream.iter_s >> ~[<<a_api | module Lwt_stream >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|iter f s>> iterates over all elements of the stream~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="iteri_p"| value Lwt_list.iteri_p >> ~[<<a_api | module Lwt_list >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="iteri_s"| value Lwt_list.iteri_s >> ~[<<a_api | module Lwt_list >>~]||
|@@ @style="tet-align: left;"@@\\J|
|@@class="odocwiki_index"@ @@<<a_api text="join"| value Lwt.join >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~Lwt~.join ps>> returns a promise that is pending until //all// promises in
    the list <<span class="odocwiki_inlinecode"|ps>> become [[ #TYPEt| //resolved//]]~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="junk"| value Lwt_stream.junk >> ~[<<a_api | module Lwt_stream >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|junk st>> removes the first element of <<span class="odocwiki_inlinecode"|st>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="junk_old"| value Lwt_stream.junk_old >> ~[<<a_api | module Lwt_stream >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|junk~_old st>> removes all elements that are ready to be read
    without yielding from <<span class="odocwiki_inlinecode"|st>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="junk_while"| value Lwt_stream.junk_while >> ~[<<a_api | module Lwt_stream >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="junk_while_s"| value Lwt_stream.junk_while_s >> ~[<<a_api | module Lwt_stream >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|junk~_while f st>> removes all elements at the beginning of the
    streams which satisfy <<span class="odocwiki_inlinecode"|f>>~.
>>
|
|@@ @style="tet-align: left;"@@\\K|
|@@class="odocwiki_index"@ @@<<a_api text="keep"| value Lwt_react.S.keep >> ~[<<a_api | module Lwt_react.S >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|keep s>> keeps a reference to <<span class="odocwiki_inlinecode"|s>> so it will never be garbage
        collected~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="keep"| value Lwt_react.E.keep >> ~[<<a_api | module Lwt_react.E >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|keep e>> keeps a reference to <<span class="odocwiki_inlinecode"|e>> so it will never be garbage
        collected~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="kqueue"| value Lwt_engine.Ev_backend.kqueue >> ~[<<a_api | module Lwt_engine.Ev_backend >>~]||
|@@ @style="tet-align: left;"@@\\L|
|@@class="odocwiki_index"@ @@<<a_api text="l1_s"| value Lwt_react.S.l1_s >> ~[<<a_api | module Lwt_react.S >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="l2_s"| value Lwt_react.S.l2_s >> ~[<<a_api | module Lwt_react.S >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="l3_s"| value Lwt_react.S.l3_s >> ~[<<a_api | module Lwt_react.S >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="l4_s"| value Lwt_react.S.l4_s >> ~[<<a_api | module Lwt_react.S >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="l5_s"| value Lwt_react.S.l5_s >> ~[<<a_api | module Lwt_react.S >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="l6_s"| value Lwt_react.S.l6_s >> ~[<<a_api | module Lwt_react.S >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="last_new"| value Lwt_stream.last_new >> ~[<<a_api | module Lwt_stream >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|last~_new st>> returns the last element that can be obtained
    without sleeping~, or wait for one if none is available~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="leave_iter_hooks"| value Lwt_main.leave_iter_hooks >> ~[<<a_api | module Lwt_main >>~]|<<div class="odocwiki_info"|~Functions that are called after the main iteration~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="length"| value Lwt_bytes.length >> ~[<<a_api | module Lwt_bytes >>~]|<<div class="odocwiki_info"|~Returns the length of the given byte array~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="length"| value Lwt_io.length >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|~Returns the length of the channel in bytes
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="length"| value Lwt_sequence.length >> ~[<<a_api | module Lwt_sequence >>~]|<<div class="odocwiki_info"|~Returns the number of elemenets in the given sequence~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="lift"| value Lwt_result.lift >> ~[<<a_api | module Lwt_result >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="limit"| value Lwt_react.S.limit >> ~[<<a_api | module Lwt_react.S >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|limit f s>> limits the rate of <<span class="odocwiki_inlinecode"|s>> update with <<span class="odocwiki_inlinecode"|f>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="limit"| value Lwt_react.E.limit >> ~[<<a_api | module Lwt_react.E >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|limit f e>> limits the rate of <<span class="odocwiki_inlinecode"|e>> with <<span class="odocwiki_inlinecode"|f>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="lines_of_file"| value Lwt_io.lines_of_file >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|lines~_of~_file name>> returns a stream of all lines of the file
      with name <<span class="odocwiki_inlinecode"|name>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="lines_to_file"| value Lwt_io.lines_to_file >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|lines~_to~_file name lines>> writes all lines of <<span class="odocwiki_inlinecode"|lines>> to
      file with name <<span class="odocwiki_inlinecode"|name>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="link"| value Lwt_unix.link >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.link>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="listen"| value Lwt_unix.listen >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.listen>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="lock"| value Lwt_mutex.lock >> ~[<<a_api | module Lwt_mutex >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|lock mutex>> lockcs the mutex~, that is~:
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="lockf"| value Lwt_unix.lockf >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.lockf>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="lookup_min"| value Lwt_pqueue.S.lookup_min >> ~[<<a_api | module Lwt_pqueue.S >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|lookup~_min q>> evaluates to <<span class="odocwiki_inlinecode"|~Some e>>~, where <<span class="odocwiki_inlinecode"|e>> is the minimum element
        of <<span class="odocwiki_inlinecode"|q>>~, if <<span class="odocwiki_inlinecode"|q>> is not empty~, and evaluates to <<span class="odocwiki_inlinecode"|~None>> otherwise~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="lseek"| value Lwt_unix.LargeFile.lseek >> ~[<<a_api | module Lwt_unix.LargeFile >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.~Large~File~.lseek>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="lseek"| value Lwt_unix.lseek >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.lseek>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="lstat"| value Lwt_unix.LargeFile.lstat >> ~[<<a_api | module Lwt_unix.LargeFile >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.~Large~File~.lstat>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="lstat"| value Lwt_unix.lstat >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.lstat>>
>>
|
|@@ @style="tet-align: left;"@@\\M|
|@@class="odocwiki_index"@ @@<<a_api text="madvise"| value Lwt_bytes.madvise >> ~[<<a_api | module Lwt_bytes >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|madvise buffer pos len advice>> advises the kernel how the
      program will use the memory mapped file between <<span class="odocwiki_inlinecode"|pos>> and
      <<span class="odocwiki_inlinecode"|pos ~+ len>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="make"| value Lwt_io.make >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|make ~?buffer ~?close ~~mode perform~_io>> is the
      main function for creating new channels~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="make_error"| value Lwt.make_error >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~Lwt~.make~_error exn>> is equivalent to
    [[ https://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#TYPEresult|
    <<span class="odocwiki_inlinecode"|~Error exn>>]] since ~O~Caml ~4~.~0~3~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="make_notification"| value Lwt_unix.make_notification >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|new~_notifier ~?once f>> registers a new notifier~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="make_value"| value Lwt.make_value >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~Lwt~.make~_value v>> is equivalent to
    [[ https://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#TYPEresult|
    <<span class="odocwiki_inlinecode"|~Ok v>>]] since ~O~Caml ~4~.~0~3~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="map"| value Lwt.map >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~Lwt~.map f p~_~1>> is similar to <<a_api | val Lwt.bind >><<span class="odocwiki_inlinecode"| p~_~1 f>>~, but <<span class="odocwiki_inlinecode"|f>> is not expected
    to return a promise~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="map"| value Lwt_stream.map >> ~[<<a_api | module Lwt_stream >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="map"| value Lwt_result.map >> ~[<<a_api | module Lwt_result >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="map_err"| value Lwt_result.map_err >> ~[<<a_api | module Lwt_result >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="map_exn"| value Lwt_stream.map_exn >> ~[<<a_api | module Lwt_stream >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_deprecated"|<<span class="odocwiki_inlinecode"|map~_exn s>> returns a stream that captures all exceptions raised
    by the source of the stream ~(the function passed to <<a_api | val Lwt_stream.from >>~)~.
>>>>
|
|@@class="odocwiki_index"@ @@<<a_api text="map_file"| value Lwt_bytes.map_file >> ~[<<a_api | module Lwt_bytes >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|map~_file ~~fd ~?pos ~~shared ~?size ~(~)>> maps the file descriptor
      <<span class="odocwiki_inlinecode"|fd>> to an array of bytes~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="map_list"| value Lwt_stream.map_list >> ~[<<a_api | module Lwt_stream >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="map_list_s"| value Lwt_stream.map_list_s >> ~[<<a_api | module Lwt_stream >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|map~_list f st>> applies <<span class="odocwiki_inlinecode"|f>> on each element of <<span class="odocwiki_inlinecode"|st>> and flattens
    the lists returned
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="map_p"| value Lwt_react.E.map_p >> ~[<<a_api | module Lwt_react.E >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="map_p"| value Lwt_list.map_p >> ~[<<a_api | module Lwt_list >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="map_s"| value Lwt_react.S.map_s >> ~[<<a_api | module Lwt_react.S >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="map_s"| value Lwt_react.E.map_s >> ~[<<a_api | module Lwt_react.E >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="map_s"| value Lwt_list.map_s >> ~[<<a_api | module Lwt_list >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="map_s"| value Lwt_stream.map_s >> ~[<<a_api | module Lwt_stream >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|map f st>> maps the value returned by <<span class="odocwiki_inlinecode"|st>> with <<span class="odocwiki_inlinecode"|f>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="mapi_p"| value Lwt_list.mapi_p >> ~[<<a_api | module Lwt_list >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="mapi_s"| value Lwt_list.mapi_s >> ~[<<a_api | module Lwt_list >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="mapped"| value Lwt_bytes.mapped >> ~[<<a_api | module Lwt_bytes >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|mapped buffer>> returns <<span class="odocwiki_inlinecode"|true>> iff <<span class="odocwiki_inlinecode"|buffer>> is a memory mapped
      file~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="mapper"| value Ppx_lwt.mapper >> ~[<<a_api | module Ppx_lwt >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="mcast_add_membership"| value Lwt_unix.mcast_add_membership >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|mcast~_add~_membership fd ~~ifname addr>> joins the multicast group <<span class="odocwiki_inlinecode"|addr>>
      on the network interface <<span class="odocwiki_inlinecode"|ifname>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="mcast_drop_membership"| value Lwt_unix.mcast_drop_membership >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|mcast~_drop~_membership fd ~~ifname addr>> leaves the multicast group <<span class="odocwiki_inlinecode"|addr>>
      on the network interface <<span class="odocwiki_inlinecode"|ifname>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="mcast_set_loop"| value Lwt_unix.mcast_set_loop >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Whether sent multicast messages are received by the sending host
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="mcast_set_ttl"| value Lwt_unix.mcast_set_ttl >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Set ~T~T~L~/hops value
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="merge_s"| value Lwt_react.S.merge_s >> ~[<<a_api | module Lwt_react.S >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="merge_s"| value Lwt_react.E.merge_s >> ~[<<a_api | module Lwt_react.E >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="mincore"| value Lwt_bytes.mincore >> ~[<<a_api | module Lwt_bytes >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|mincore buffer offset states>> tests whether the given pages are
      in the system memory ~(the ~R~A~M~)~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="mkdir"| value Lwt_unix.mkdir >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.mkdir>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="mkfifo"| value Lwt_unix.mkfifo >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.mkfifo>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="mode"| value Lwt_io.mode >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|mode ch>> returns the mode of a channel
>>
|
|@@ @style="tet-align: left;"@@\\N|
|@@class="odocwiki_index"@ @@<<a_api text="nchoose"| value Lwt.nchoose >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~Lwt~.nchoose ps>> is the same as <<a_api | val Lwt.npick >><<span class="odocwiki_inlinecode"| ps>>~, except that it does not
    try to cancel pending promises in <<span class="odocwiki_inlinecode"|ps>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="nchoose_split"| value Lwt.nchoose_split >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~Lwt~.nchoose~_split ps>> is the same as <<a_api | val Lwt.nchoose >><<span class="odocwiki_inlinecode"| ps>>~, except that when
    multiple promises in <<span class="odocwiki_inlinecode"|ps>> are fulfilled simultaneously ~(and none are
    rejected~)~, the result promise is fulfilled with //both// the list of values
    of the fulfilled promises~, and the list of promises that are still
    pending~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="new_key"| value Lwt.new_key >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|~Creates a fresh implicit callback argument key~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="next"| value Lwt_react.E.next >> ~[<<a_api | module Lwt_react.E >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|next e>> returns the next occurrence of <<span class="odocwiki_inlinecode"|e>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="next"| value Lwt_stream.next >> ~[<<a_api | module Lwt_stream >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|next st>> removes and returns the next element of the stream or
    fails with <<a_api | exception Lwt_stream.Empty >>~, if the stream is empty~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="nget"| value Lwt_stream.nget >> ~[<<a_api | module Lwt_stream >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|nget n st>> removes and returns at most the first <<span class="odocwiki_inlinecode"|n>> elements of
    <<span class="odocwiki_inlinecode"|st>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="njunk"| value Lwt_stream.njunk >> ~[<<a_api | module Lwt_stream >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|njunk n st>> removes at most the first <<span class="odocwiki_inlinecode"|n>> elements of the
    stream~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="no_cancel"| value Lwt.no_cancel >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~Lwt~.no~_cancel p>> creates a non~-[[ #VALcancel|cancelable]] promise <<span class="odocwiki_inlinecode"|p~'>>~,
    with the same state as <<span class="odocwiki_inlinecode"|p>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="npeek"| value Lwt_stream.npeek >> ~[<<a_api | module Lwt_stream >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|npeek n st>> returns at most the first <<span class="odocwiki_inlinecode"|n>> elements of <<span class="odocwiki_inlinecode"|st>>~,
    without removing them~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="npick"| value Lwt.npick >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~Lwt~.npick ps>> is similar to <<a_api | val Lwt.pick >><<span class="odocwiki_inlinecode"| ps>>~, the difference being that
    when multiple promises in <<span class="odocwiki_inlinecode"|ps>> are fulfilled simultaneously ~(and none are
    rejected~)~, the result promise is fulfilled with the //list// of values the
    promises were fulfilled with~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="null"| value Lwt_io.null >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|~Output which drops everything
>>
|
|@@ @style="tet-align: left;"@@\\O|
|@@class="odocwiki_index"@ @@<<a_api text="of_array"| value Lwt_stream.of_array >> ~[<<a_api | module Lwt_stream >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|of~_array a>> creates a stream returning all elements of <<span class="odocwiki_inlinecode"|a>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="of_bytes"| value Lwt_bytes.of_bytes >> ~[<<a_api | module Lwt_bytes >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|of~_bytes buf>> returns a newly allocated byte array with the
      same contents as <<span class="odocwiki_inlinecode"|buf>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="of_bytes"| value Lwt_io.of_bytes >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|~Create a channel from a byte array~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="of_fd"| value Lwt_io.of_fd >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|of~_fd ~?buffer ~?close ~~mode fd>> creates a channel from a
      file descriptor~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="of_list"| value Lwt_stream.of_list >> ~[<<a_api | module Lwt_stream >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|of~_list l>> creates a stream returning all elements of <<span class="odocwiki_inlinecode"|l>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="of_result"| value Lwt.of_result >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~Lwt~.of~_result r>> converts an r to a resolved promise~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="of_stream"| value Lwt_react.E.of_stream >> ~[<<a_api | module Lwt_react.E >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|of~_stream stream>> creates an event which occurs each time a
        value is available on the stream~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="of_string"| value Lwt_bytes.of_string >> ~[<<a_api | module Lwt_bytes >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|of~_string buf>> returns a newly allocated byte array with the
      same contents as <<span class="odocwiki_inlinecode"|buf>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="of_string"| value Lwt_stream.of_string >> ~[<<a_api | module Lwt_stream >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|of~_string str>> creates a stream returning all characters of <<span class="odocwiki_inlinecode"|str>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="of_unix_fd"| value Lwt_io.of_unix_fd >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|of~_unix~_fd ~?buffer ~?close ~~mode fd>> is a short~-hand for~:
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="of_unix_file_descr"| value Lwt_unix.of_unix_file_descr >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wraps a <<span class="odocwiki_inlinecode"|~Unix>> file descriptor <<span class="odocwiki_inlinecode"|fd>> in an <<span class="odocwiki_inlinecode"|~Lwt~_unix~.file~_descr>> <<span class="odocwiki_inlinecode"|fd~'>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="ok"| value Lwt_result.ok >> ~[<<a_api | module Lwt_result >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="on_any"| value Lwt.on_any >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~Lwt~.on~_any p f g>> makes it so that~:
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="on_cancel"| value Lwt.on_cancel >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~Lwt~.on~_cancel p f>> makes it so that <<span class="odocwiki_inlinecode"|f>> will run when <<span class="odocwiki_inlinecode"|p>> becomes
    [[ #EXCEPTIONCanceled| //canceled//]]~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="on_failure"| value Lwt.on_failure >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~Lwt~.on~_failure p f>> makes it so that <<span class="odocwiki_inlinecode"|f>> will run when <<span class="odocwiki_inlinecode"|p>> is [[ #TYPEt|
    //rejected//]]~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="on_readable"| value Lwt_engine.on_readable >> ~[<<a_api | module Lwt_engine >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|on~_readable fd f>> calls <<span class="odocwiki_inlinecode"|f>> each time <<span class="odocwiki_inlinecode"|fd>> becomes readable~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="on_signal"| value Lwt_unix.on_signal >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|on~_signal signum f>> calls <<span class="odocwiki_inlinecode"|f>> each time the signal with numnber
      <<span class="odocwiki_inlinecode"|signum>> is received by the process~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="on_signal_full"| value Lwt_unix.on_signal_full >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|on~_signal~_full f>> is the same as <<span class="odocwiki_inlinecode"|on~_signal f>> except that <<span class="odocwiki_inlinecode"|f>>
      also receive the signal handler identifier as argument so it can
      disable it~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="on_success"| value Lwt.on_success >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~Lwt~.on~_success p f>> makes it so that <<span class="odocwiki_inlinecode"|f>> will run when <<span class="odocwiki_inlinecode"|p>> is [[ #TYPEt|
    //fulfilled//]]~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="on_terminate"| value Lwt_stream.on_terminate >> ~[<<a_api | module Lwt_stream >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_deprecated"|~Same as <<a_api | val Lwt_stream.on_termination >>~.
>>>>
|
|@@class="odocwiki_index"@ @@<<a_api text="on_termination"| value Lwt.on_termination >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~Lwt~.on~_termination p f>> makes it so that <<span class="odocwiki_inlinecode"|f>> will run when <<span class="odocwiki_inlinecode"|p>> is
    [[ #TYPEt| //resolved//]] – that is~, fulfilled //or// rejected~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="on_termination"| value Lwt_stream.on_termination >> ~[<<a_api | module Lwt_stream >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_deprecated"|<<span class="odocwiki_inlinecode"|on~_termination st f>> executes <<span class="odocwiki_inlinecode"|f>> when the end of the stream <<span class="odocwiki_inlinecode"|st>>
    is reached~.
>>>>
|
|@@class="odocwiki_index"@ @@<<a_api text="on_timer"| value Lwt_engine.on_timer >> ~[<<a_api | module Lwt_engine >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|on~_timer delay repeat f>> calls <<span class="odocwiki_inlinecode"|f>> one time after <<span class="odocwiki_inlinecode"|delay>>
      seconds~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="on_writable"| value Lwt_engine.on_writable >> ~[<<a_api | module Lwt_engine >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|on~_readable fd f>> calls <<span class="odocwiki_inlinecode"|f>> each time <<span class="odocwiki_inlinecode"|fd>> becomes writable~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="open_connection"| value Lwt_io.open_connection >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|open~_connection ~?fd ~?in~_buffer ~?out~_buffer addr>> opens a
      connection to the given address and returns two channels for using
      it~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="open_file"| value Lwt_io.open_file >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|open~_file ~?buffer ~?flags ~?perm ~~mode filename>> opens the
      file with name <<span class="odocwiki_inlinecode"|filename>> and returns a channel for
      reading~/writing it~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="open_process"| value Lwt_process.open_process >> ~[<<a_api | module Lwt_process >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="open_process_full"| value Lwt_process.open_process_full >> ~[<<a_api | module Lwt_process >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="open_process_in"| value Lwt_process.open_process_in >> ~[<<a_api | module Lwt_process >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="open_process_none"| value Lwt_process.open_process_none >> ~[<<a_api | module Lwt_process >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="open_process_out"| value Lwt_process.open_process_out >> ~[<<a_api | module Lwt_process >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="open_temp_file"| value Lwt_io.open_temp_file >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|open~_temp~_file ~(~)>> starts creating a new temporary file~, and evaluates to a
    promise for the pair of the file~'s name~, and an output channel for writing
    to the file~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="opendir"| value Lwt_unix.opendir >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Opens a directory for listing~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="openfile"| value Lwt_unix.openfile >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.openfile>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="output"| value Lwt_io.output >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|output>> output mode representation
>>
|
|@@ @style="tet-align: left;"@@\\P|
|@@class="odocwiki_index"@ @@<<a_api text="page_size"| value Lwt_bytes.page_size >> ~[<<a_api | module Lwt_bytes >>~]|<<div class="odocwiki_info"|~Size of pages~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="parse"| value Lwt_stream.parse >> ~[<<a_api | module Lwt_stream >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|parse st f>> parses <<span class="odocwiki_inlinecode"|st>> with <<span class="odocwiki_inlinecode"|f>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="partition_p"| value Lwt_list.partition_p >> ~[<<a_api | module Lwt_list >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="partition_s"| value Lwt_list.partition_s >> ~[<<a_api | module Lwt_list >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="pause"| value Lwt.pause >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~Lwt~.pause ~(~)>> creates a pending promise that is fulfilled after ~Lwt
    finishes calling all currently ready callbacks~, i~.e~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="peek"| value Lwt_stream.peek >> ~[<<a_api | module Lwt_stream >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|peek st>> returns the first element of the stream~, if any~,
    without removing it~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="pick"| value Lwt.pick >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~Lwt~.pick ps>> returns a promise that is pending until //one// promise in
    the list <<span class="odocwiki_inlinecode"|ps>> becomes [[ #TYPEt| //resolved//]]~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="pipe"| value Lwt_io.pipe >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|pipe ~?in~_buffer ~?out~_buffer ~(~)>> creates a pipe using
      <<a_api | val Lwt_unix.pipe >> and makes two channels from the two returned file
      descriptors
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="pipe"| value Lwt_unix.pipe >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|pipe ~(~)>> creates pipe using <<span class="odocwiki_inlinecode"|~Unix~.pipe>> and returns two lwt **      file descriptor**s created from unix **file~_descriptor**
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="pipe_in"| value Lwt_unix.pipe_in >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|pipe~_in ~(~)>> is the same as <<a_api | val Lwt_unix.pipe >> but maps only the unix **      file descriptor** for reading into a lwt one~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="pipe_out"| value Lwt_unix.pipe_out >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|pipe~_out ~(~)>> is the inverse of <<a_api | val Lwt_unix.pipe_in >>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="pmap"| value Lwt_process.pmap >> ~[<<a_api | module Lwt_process >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="pmap_chars"| value Lwt_process.pmap_chars >> ~[<<a_api | module Lwt_process >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="pmap_line"| value Lwt_process.pmap_line >> ~[<<a_api | module Lwt_process >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="pmap_lines"| value Lwt_process.pmap_lines >> ~[<<a_api | module Lwt_process >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="poll"| value Lwt_engine.Ev_backend.poll >> ~[<<a_api | module Lwt_engine.Ev_backend >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="pool_size"| value Lwt_unix.pool_size >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Maximum number of system threads that can be started~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="port"| value Lwt_engine.Ev_backend.port >> ~[<<a_api | module Lwt_engine.Ev_backend >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="position"| value Lwt_io.position >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|position ch>> ~Returns the current position in the channel~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="pp"| value Lwt_engine.Ev_backend.pp >> ~[<<a_api | module Lwt_engine.Ev_backend >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="pread"| value Lwt_process.pread >> ~[<<a_api | module Lwt_process >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="pread_chars"| value Lwt_process.pread_chars >> ~[<<a_api | module Lwt_process >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="pread_line"| value Lwt_process.pread_line >> ~[<<a_api | module Lwt_process >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="pread_lines"| value Lwt_process.pread_lines >> ~[<<a_api | module Lwt_process >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="print"| value Lwt_io.print >> ~[<<a_api | module Lwt_io >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="printf"| value Lwt_io.printf >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~%!>> does nothing here~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="printl"| value Lwt_io.printl >> ~[<<a_api | module Lwt_io >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="printlf"| value Lwt_io.printlf >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~%!>> does nothing here~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="protected"| value Lwt.protected >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~Lwt~.protected p>> creates a [[ #VALcancel| cancelable]] promise <<span class="odocwiki_inlinecode"|p~'>> with
    the same state as <<span class="odocwiki_inlinecode"|p>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="proxy"| value Lwt_bytes.proxy >> ~[<<a_api | module Lwt_bytes >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|proxy buffer offset length>> creates a ``proxy~'~'~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="put"| value Lwt_mvar.put >> ~[<<a_api | module Lwt_mvar >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|put mvar value>> puts a value into a mailbox variable~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="pwrite"| value Lwt_process.pwrite >> ~[<<a_api | module Lwt_process >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="pwrite_chars"| value Lwt_process.pwrite_chars >> ~[<<a_api | module Lwt_process >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="pwrite_line"| value Lwt_process.pwrite_line >> ~[<<a_api | module Lwt_process >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="pwrite_lines"| value Lwt_process.pwrite_lines >> ~[<<a_api | module Lwt_process >>~]||
|@@ @style="tet-align: left;"@@\\R|
|@@class="odocwiki_index"@ @@<<a_api text="read"| value Lwt_bytes.read >> ~[<<a_api | module Lwt_bytes >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="read"| value Lwt_io.read >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|~If <<span class="odocwiki_inlinecode"|~~count>> is specified~, <<span class="odocwiki_inlinecode"|read ~~count ic>> reads at most <<span class="odocwiki_inlinecode"|~~count>> characters
    from <<span class="odocwiki_inlinecode"|ic>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="read"| value Lwt_unix.read >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|read fd buf ofs len>> reads up to <<span class="odocwiki_inlinecode"|len>> bytes from <<span class="odocwiki_inlinecode"|fd>>~, and writes them to
    <<span class="odocwiki_inlinecode"|buf>>~, starting at offset <<span class="odocwiki_inlinecode"|ofs>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="read_char"| value Lwt_io.read_char >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|read~_char ic>> reads the next character of <<span class="odocwiki_inlinecode"|ic>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="read_char_opt"| value Lwt_io.read_char_opt >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|~Same as <<a_api | val Lwt_io.read_char >>~, but does not raise <<span class="odocwiki_inlinecode"|~End~_of~_file>> on end of
      input
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="read_chars"| value Lwt_io.read_chars >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|read~_chars ic>> returns a stream holding all characters of
      <<span class="odocwiki_inlinecode"|ic>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="read_float32"| value Lwt_io.NumberIO.read_float32 >> ~[<<a_api | module Lwt_io.NumberIO >>~]|<<div class="odocwiki_info"|~Reads an ~I~E~E~E single precision floating point value
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="read_float64"| value Lwt_io.NumberIO.read_float64 >> ~[<<a_api | module Lwt_io.NumberIO >>~]|<<div class="odocwiki_info"|~Reads an ~I~E~E~E double precision floating point value
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="read_int"| value Lwt_io.NumberIO.read_int >> ~[<<a_api | module Lwt_io.NumberIO >>~]|<<div class="odocwiki_info"|~Reads a ~3~2~-bits integer as an ocaml int
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="read_int16"| value Lwt_io.NumberIO.read_int16 >> ~[<<a_api | module Lwt_io.NumberIO >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="read_int32"| value Lwt_io.NumberIO.read_int32 >> ~[<<a_api | module Lwt_io.NumberIO >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="read_int64"| value Lwt_io.NumberIO.read_int64 >> ~[<<a_api | module Lwt_io.NumberIO >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="read_into"| value Lwt_io.read_into >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|read~_into ic buffer offset length>> reads up to <<span class="odocwiki_inlinecode"|length>> bytes~,
      stores them in <<span class="odocwiki_inlinecode"|buffer>> at offset <<span class="odocwiki_inlinecode"|offset>>~, and returns the
      number of bytes read~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="read_into_exactly"| value Lwt_io.read_into_exactly >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|read~_into~_exactly ic buffer offset length>> reads exactly
      <<span class="odocwiki_inlinecode"|length>> bytes and stores them in <<span class="odocwiki_inlinecode"|buffer>> at offset <<span class="odocwiki_inlinecode"|offset>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="read_line"| value Lwt_io.read_line >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|read~_line ic>> reads one complete line from <<span class="odocwiki_inlinecode"|ic>> and returns it
      without the end of line~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="read_line_opt"| value Lwt_io.read_line_opt >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|~Same as <<a_api | val Lwt_io.read_line >> but do not raise <<span class="odocwiki_inlinecode"|~End~_of~_file>> on end of
      input~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="read_lines"| value Lwt_io.read_lines >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|read~_lines ic>> returns a stream holding all lines of <<span class="odocwiki_inlinecode"|ic>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="read_value"| value Lwt_io.read_value >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|read~_value channel>> reads a marshaled value from <<span class="odocwiki_inlinecode"|channel>>~; it corresponds
    to the standard library~'s
    [[https://caml.inria.fr/pub/docs/manual-ocaml/libref/Marshal.html#VALfrom_channel| <<span class="odocwiki_inlinecode"|~Marshal~.from~_channel>>]]~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="readable"| value Lwt_unix.readable >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Returns whether the given file descriptor is currently
      readable~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="readable_count"| value Lwt_engine.readable_count >> ~[<<a_api | module Lwt_engine >>~]|<<div class="odocwiki_info"|~Returns the number of events waiting for a file descriptor to
      become readable~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="readdir"| value Lwt_unix.readdir >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Reads the next directory entry from the given directory~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="readdir_n"| value Lwt_unix.readdir_n >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|readdir~_n handle count>> reads at most <<span class="odocwiki_inlinecode"|count>> entries from the
      given directory~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="readlink"| value Lwt_unix.readlink >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.readlink>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="readv"| value Lwt_unix.readv >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|readv fd vs>> reads bytes from <<span class="odocwiki_inlinecode"|fd>> into the buffer slices <<span class="odocwiki_inlinecode"|vs>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="recv"| value Lwt_bytes.recv >> ~[<<a_api | module Lwt_bytes >>~]|<<div class="odocwiki_info"|~Not implemented on ~Windows~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="recv"| value Lwt_unix.recv >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.recv>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="recv_msg"| value Lwt_bytes.recv_msg >> ~[<<a_api | module Lwt_bytes >>~]|<<div class="odocwiki_info"|~Not implemented on ~Windows~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="recv_msg"| value Lwt_unix.recv_msg >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|recv~_msg ~~socket ~~io~_vectors>> receives data into a list of
    io~-vectors~, plus any file~-descriptors that may accompany the
    messages~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="recvfrom"| value Lwt_bytes.recvfrom >> ~[<<a_api | module Lwt_bytes >>~]|<<div class="odocwiki_info"|~Not implemented on ~Windows~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="recvfrom"| value Lwt_unix.recvfrom >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.recvfrom>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="register_action"| value Lwt_unix.register_action >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|register~_action set fd action>> registers <<span class="odocwiki_inlinecode"|action>> on <<span class="odocwiki_inlinecode"|fd>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="reinstall_signal_handler"| value Lwt_unix.reinstall_signal_handler >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|reinstall~_signal~_handler signum>> if any signal handler is
      registered for this signal with <<a_api | val Lwt_unix.on_signal >>~, it reinstall the
      signal handler ~(with <<span class="odocwiki_inlinecode"|~Sys~.set~_signal>>~)~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="remove"| value Lwt_sequence.remove >> ~[<<a_api | module Lwt_sequence >>~]|<<div class="odocwiki_info"|~Removes a node from the sequence it is part of~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="remove_min"| value Lwt_pqueue.S.remove_min >> ~[<<a_api | module Lwt_pqueue.S >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|remove~_min q>> evaluates to a new priority queue~, which contains all the
        elements of <<span class="odocwiki_inlinecode"|q>> except for its minimum element~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="rename"| value Lwt_unix.rename >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.rename>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="resize_buffer"| value Lwt_io.resize_buffer >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|~Resize the internal buffer to the given size
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="return"| value Lwt_react.S.return >> ~[<<a_api | module Lwt_react.S >>~]|<<div class="odocwiki_info"|~Same as <<span class="odocwiki_inlinecode"|const>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="return"| value Lwt.return >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~Lwt~.return v>> creates a new [[ #TYPEt| promise]] that is //already
    fulfilled// with value <<span class="odocwiki_inlinecode"|v>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="return"| value Lwt_result.return >> ~[<<a_api | module Lwt_result >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="return_error"| value Lwt.return_error >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|~Like <<a_api | val Lwt.return_some >>~, this function performs no optimization~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="return_false"| value Lwt.return_false >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~Lwt~.return~_false>> is like <<a_api | val Lwt.return_unit >>~, but for
    <<a_api | val Lwt.return >><<span class="odocwiki_inlinecode"| false>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="return_nil"| value Lwt.return_nil >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~Lwt~.return~_nil>> is like <<a_api | val Lwt.return_unit >>~, but for <<a_api | val Lwt.return >><<span class="odocwiki_inlinecode"| ~[~]>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="return_none"| value Lwt.return_none >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~Lwt~.return~_none>> is like <<a_api | val Lwt.return_unit >>~, but for
    <<a_api | val Lwt.return >><<span class="odocwiki_inlinecode"| ~None>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="return_ok"| value Lwt.return_ok >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|~Like <<a_api | val Lwt.return_some >>~, this function performs no optimization~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="return_some"| value Lwt.return_some >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|~Counterpart to <<a_api | val Lwt.return_none >>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="return_true"| value Lwt.return_true >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~Lwt~.return~_true>> is like <<a_api | val Lwt.return_unit >>~, but for
    <<a_api | val Lwt.return >><<span class="odocwiki_inlinecode"| true>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="return_unit"| value Lwt.return_unit >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~Lwt~.return~_unit>> is defined as <<a_api | val Lwt.return >><<span class="odocwiki_inlinecode"| ~(~)>>~, but this definition is
    evaluated only once~, during initialization of module <<span class="odocwiki_inlinecode"|~Lwt>>~, at the beginning
    of your program~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="rev_map_p"| value Lwt_list.rev_map_p >> ~[<<a_api | module Lwt_list >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="rev_map_s"| value Lwt_list.rev_map_s >> ~[<<a_api | module Lwt_list >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="rewinddir"| value Lwt_unix.rewinddir >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Resets the given directory handle~, so that directory listing can be
    restarted~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="rmdir"| value Lwt_unix.rmdir >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.rmdir>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="run"| value Lwt_main.run >> ~[<<a_api | module Lwt_main >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|run p>> calls the ~Lwt scheduler repeatedly until <<span class="odocwiki_inlinecode"|p>> resolves~,
      and returns the value of <<span class="odocwiki_inlinecode"|p>> if it is fulfilled~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="run_in_main"| value Lwt_preemptive.run_in_main >> ~[<<a_api | module Lwt_preemptive >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|run~_in~_main f>> can be called from a detached computation to execute
      <<span class="odocwiki_inlinecode"|f ~(~)>> in the main preemptive thread~, i~.e~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="run_job"| value Lwt_unix.run_job >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|run~_job ~?async~_method job>> starts <<span class="odocwiki_inlinecode"|job>> and wait for its
      termination~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="run_p"| value Lwt_react.E.run_p >> ~[<<a_api | module Lwt_react.E >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="run_s"| value Lwt_react.S.run_s >> ~[<<a_api | module Lwt_react.S >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="run_s"| value Lwt_react.E.run_s >> ~[<<a_api | module Lwt_react.E >>~]||
|@@ @style="tet-align: left;"@@\\S|
|@@class="odocwiki_index"@ @@<<a_api text="sample_s"| value Lwt_react.S.sample_s >> ~[<<a_api | module Lwt_react.S >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="select"| value Lwt_engine.Ev_backend.select >> ~[<<a_api | module Lwt_engine.Ev_backend >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="send"| value Lwt_bytes.send >> ~[<<a_api | module Lwt_bytes >>~]|<<div class="odocwiki_info"|~Not implemented on ~Windows~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="send"| value Lwt_unix.send >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.send>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="send_msg"| value Lwt_bytes.send_msg >> ~[<<a_api | module Lwt_bytes >>~]|<<div class="odocwiki_info"|~Not implemented on ~Windows~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="send_msg"| value Lwt_unix.send_msg >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|send~_msg ~~socket ~~io~_vectors ~~fds>> sends data from a list of
    io~-vectors~, accompanied with a list of file~-descriptors~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="send_notification"| value Lwt_unix.send_notification >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|send~_notification id>> sends a notification~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="sendto"| value Lwt_bytes.sendto >> ~[<<a_api | module Lwt_bytes >>~]|<<div class="odocwiki_info"|~Not implemented on ~Windows~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="sendto"| value Lwt_unix.sendto >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.sendto>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="set"| value Lwt_bytes.set >> ~[<<a_api | module Lwt_bytes >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|get buffer offset value>> changes the value of the byte at
      offset <<span class="odocwiki_inlinecode"|offset>> in <<span class="odocwiki_inlinecode"|buffer>> to <<span class="odocwiki_inlinecode"|value>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="set"| value Lwt_engine.set >> ~[<<a_api | module Lwt_engine >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|set ~?transfer ~?destroy engine>> replaces the current engine by
      the given one~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="set"| value Lwt_sequence.set >> ~[<<a_api | module Lwt_sequence >>~]|<<div class="odocwiki_info"|~Change the contents of a node
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="set_affinity"| value Lwt_unix.set_affinity >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|set~_affinity ~?pid cpus>> sets the list of ~C~P~Us the given process
      is allowed to run on~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="set_blocking"| value Lwt_unix.set_blocking >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|set~_blocking fd b>> causes ~Lwt to internally use blocking or non~-blocking
    ~I~/~O with <<span class="odocwiki_inlinecode"|fd>>~, according to the value of <<span class="odocwiki_inlinecode"|b>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="set_bounds"| value Lwt_preemptive.set_bounds >> ~[<<a_api | module Lwt_preemptive >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|set~_bounds ~(min~, max~)>> set the minimum and the maximum number
      of preemptive threads~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="set_close_on_exec"| value Lwt_unix.set_close_on_exec >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.set~_close~_on~_exec>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="set_default_async_method"| value Lwt_unix.set_default_async_method >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Sets the default async method~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="set_default_buffer_size"| value Lwt_io.set_default_buffer_size >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|~Change the default buffer size~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="set_exn_handler"| value Lwt_timeout.set_exn_handler >> ~[<<a_api | module Lwt_timeout >>~]|<<div class="odocwiki_info"|set the default handler for exception occurring after a timeout~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="set_max_number_of_threads_queued"| value Lwt_preemptive.set_max_number_of_threads_queued >> ~[<<a_api | module Lwt_preemptive >>~]|<<div class="odocwiki_info"|~Sets the size of the waiting queue~, if no more preemptive
      threads are available~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="set_notification"| value Lwt_unix.set_notification >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|set~_notification id f>> replace the function associated to the
      notification by <<span class="odocwiki_inlinecode"|f>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="set_pool_size"| value Lwt_unix.set_pool_size >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Change the size of the pool~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="set_position"| value Lwt_io.set_position >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|set~_position ch pos>> ~Sets the position in the output channel~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="setsockopt"| value Lwt_unix.setsockopt >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.setsockopt>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="setsockopt_float"| value Lwt_unix.setsockopt_float >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.setsockopt~_float>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="setsockopt_int"| value Lwt_unix.setsockopt_int >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.setsockopt~_int>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="setsockopt_optint"| value Lwt_unix.setsockopt_optint >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.setsockopt~_optint>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="shell"| value Lwt_process.shell >> ~[<<a_api | module Lwt_process >>~]|<<div class="odocwiki_info"|~A command executed with the shell~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="shutdown"| value Lwt_unix.shutdown >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.shutdown>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="shutdown_server"| value Lwt_io.shutdown_server >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|~Closes the given server~'s listening socket~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="shutdown_server_1"| value Lwt_io.Versioned.shutdown_server_1 >> ~[<<a_api | module Lwt_io.Versioned >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_deprecated"|~Old version of <<a_api | val Lwt_io.shutdown_server >>~.
>>>>
|
|@@class="odocwiki_index"@ @@<<a_api text="shutdown_server_2"| value Lwt_io.Versioned.shutdown_server_2 >> ~[<<a_api | module Lwt_io.Versioned >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_deprecated"|~Since ~Lwt ~3~.~0~.~0~, this is just an alias for <<a_api | val Lwt_io.shutdown_server >>~.
>>>>
|
|@@class="odocwiki_index"@ @@<<a_api text="signal"| value Lwt_condition.signal >> ~[<<a_api | module Lwt_condition >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|signal condvar value>> notifies that a condition is ready~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="signal_count"| value Lwt_unix.signal_count >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Returns the number of registered signal handler~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="simple_init"| value Lwt_preemptive.simple_init >> ~[<<a_api | module Lwt_preemptive >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|simple~_init ~(~)>> checks if the library is not yet initialized~, and if not~,
    does a //simple initialization//~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="size"| value Lwt_pqueue.S.size >> ~[<<a_api | module Lwt_pqueue.S >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|size q>> evaluates to the number of elements in <<span class="odocwiki_inlinecode"|q>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="sleep"| value Lwt_unix.sleep >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|sleep d>> is a thread that remains suspended for <<span class="odocwiki_inlinecode"|d>> seconds
      and then terminates~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="socket"| value Lwt_unix.socket >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|socket domain type proto>> is the same as <<span class="odocwiki_inlinecode"|~Unix~.socket>> but maps
      the result into a lwt **file descriptor**
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="socketpair"| value Lwt_unix.socketpair >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.socketpair>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="start"| value Lwt_timeout.start >> ~[<<a_api | module Lwt_timeout >>~]|<<div class="odocwiki_info"|starts a timeout~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="stat"| value Lwt_unix.LargeFile.stat >> ~[<<a_api | module Lwt_unix.LargeFile >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.~Large~File~.stat>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="stat"| value Lwt_unix.stat >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.stat>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="state"| value Lwt_unix.state >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|state fd>> returns the state of <<span class="odocwiki_inlinecode"|fd>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="state"| value Lwt.state >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~Lwt~.state p>> evaluates to the current state of promise <<span class="odocwiki_inlinecode"|p>>~:
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="stderr"| value Lwt_io.stderr >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|~The standard output for error messages~, it writes data to
      <<a_api | val Lwt_unix.stderr >>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="stderr"| value Lwt_unix.stderr >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~The standard **file descriptor** for printing error messages
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="stdin"| value Lwt_io.stdin >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|~The standard input~, it reads data from <<a_api | val Lwt_unix.stdin >>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="stdin"| value Lwt_unix.stdin >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~The standard **file descriptor** for input~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="stdout"| value Lwt_io.stdout >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|~The standard output~, it writes data to <<a_api | val Lwt_unix.stdout >>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="stdout"| value Lwt_unix.stdout >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~The standard **file descriptor** for output
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="stop"| value Lwt_timeout.stop >> ~[<<a_api | module Lwt_timeout >>~]|<<div class="odocwiki_info"|stops a timeout~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="stop_event"| value Lwt_engine.stop_event >> ~[<<a_api | module Lwt_engine >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|stop~_event event>> stops the given event~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="stop_notification"| value Lwt_unix.stop_notification >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Stop the given notification~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="symlink"| value Lwt_unix.symlink >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.symlink>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="system"| value Lwt_unix.system >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Executes the given command~, waits until it terminates~, and
      return its termination status~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="system_byte_order"| value Lwt_io.system_byte_order >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|~Same as <<a_api | val Lwt_sys.byte_order >>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="system_limit"| value Lwt_unix.IO_vectors.system_limit >> ~[<<a_api | module Lwt_unix.IO_vectors >>~]|<<div class="odocwiki_info"|~Some systems limit the number of ~I~/~O vectors that can be passed in a
      single call to their <<span class="odocwiki_inlinecode"|writev>> or <<span class="odocwiki_inlinecode"|readv>> system calls~.
>>
|
|@@ @style="tet-align: left;"@@\\T|
|@@class="odocwiki_index"@ @@<<a_api text="take"| value Lwt_mvar.take >> ~[<<a_api | module Lwt_mvar >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|take mvar>> will take any currently available value from the
      mailbox variable~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="take_available"| value Lwt_mvar.take_available >> ~[<<a_api | module Lwt_mvar >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|take~_available mvar>> immediately takes the value from <<span class="odocwiki_inlinecode"|mvar>> without
      blocking~, returning <<span class="odocwiki_inlinecode"|~None>> if the mailbox is empty~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="take_l"| value Lwt_sequence.take_l >> ~[<<a_api | module Lwt_sequence >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|take~_l x s>> remove and returns the leftmost element of <<span class="odocwiki_inlinecode"|s>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="take_opt_l"| value Lwt_sequence.take_opt_l >> ~[<<a_api | module Lwt_sequence >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|take~_opt~_l x s>> remove and returns <<span class="odocwiki_inlinecode"|~Some x>> where <<span class="odocwiki_inlinecode"|x>> is the
      leftmost element of <<span class="odocwiki_inlinecode"|s>> or <<span class="odocwiki_inlinecode"|~None>> if <<span class="odocwiki_inlinecode"|s>> is empty
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="take_opt_r"| value Lwt_sequence.take_opt_r >> ~[<<a_api | module Lwt_sequence >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|take~_opt~_l x s>> remove and returns <<span class="odocwiki_inlinecode"|~Some x>> where <<span class="odocwiki_inlinecode"|x>> is the
      rightmost element of <<span class="odocwiki_inlinecode"|s>> or <<span class="odocwiki_inlinecode"|~None>> if <<span class="odocwiki_inlinecode"|s>> is empty
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="take_r"| value Lwt_sequence.take_r >> ~[<<a_api | module Lwt_sequence >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|take~_l x s>> remove and returns the rightmost element of <<span class="odocwiki_inlinecode"|s>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="task"| value Lwt.task >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|~Creates a new pending [[ #TYPEt| promise]]~, paired with its [[ #TYPEu|
    resolver]]~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="tcdrain"| value Lwt_unix.tcdrain >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.tcdrain>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="tcflow"| value Lwt_unix.tcflow >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.tcflow>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="tcflush"| value Lwt_unix.tcflush >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.tcflush>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="tcgetattr"| value Lwt_unix.tcgetattr >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.tcgetattr>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="tcsendbreak"| value Lwt_unix.tcsendbreak >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.tcsendbreak>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="tcsetattr"| value Lwt_unix.tcsetattr >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.tcsetattr>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="thread_count"| value Lwt_unix.thread_count >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~The number of system threads running ~(excluding this one~)~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="thread_waiting_count"| value Lwt_unix.thread_waiting_count >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~The number threads waiting for a job~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="timeout"| value Lwt_unix.timeout >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|timeout d>> is a thread that remains suspended for <<span class="odocwiki_inlinecode"|d>> seconds
      and then fails with <<a_api | exception Lwt_unix.Timeout >>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="timer_count"| value Lwt_engine.timer_count >> ~[<<a_api | module Lwt_engine >>~]|<<div class="odocwiki_info"|~Returns the number of registered timers~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="to_bytes"| value Lwt_bytes.to_bytes >> ~[<<a_api | module Lwt_bytes >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|to~_bytes buf>> returns newly allocated bytes with the same
      contents as <<span class="odocwiki_inlinecode"|buf>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="to_list"| value Lwt_stream.to_list >> ~[<<a_api | module Lwt_stream >>~]|<<div class="odocwiki_info"|~Returns the list of elements of the given stream
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="to_stream"| value Lwt_react.E.to_stream >> ~[<<a_api | module Lwt_react.E >>~]|<<div class="odocwiki_info"|~Creates a stream holding all values occurring on the given
        event
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="to_string"| value Lwt_bytes.to_string >> ~[<<a_api | module Lwt_bytes >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|to~_string buf>> returns a newly allocated string with the same
      contents as <<span class="odocwiki_inlinecode"|buf>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="to_string"| value Lwt_stream.to_string >> ~[<<a_api | module Lwt_stream >>~]|<<div class="odocwiki_info"|~Returns the word composed of all characters of the given
    stream
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="transfer_l"| value Lwt_sequence.transfer_l >> ~[<<a_api | module Lwt_sequence >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|transfer~_l s~1 s~2>> removes all elements of <<span class="odocwiki_inlinecode"|s~1>> and add them at
      the left of <<span class="odocwiki_inlinecode"|s~2>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="transfer_r"| value Lwt_sequence.transfer_r >> ~[<<a_api | module Lwt_sequence >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|transfer~_r s~1 s~2>> removes all elements of <<span class="odocwiki_inlinecode"|s~1>> and add them at
      the right of <<span class="odocwiki_inlinecode"|s~2>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="truncate"| value Lwt_unix.LargeFile.truncate >> ~[<<a_api | module Lwt_unix.LargeFile >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.~Large~File~.truncate>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="truncate"| value Lwt_unix.truncate >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.truncate>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="try_bind"| value Lwt.try_bind >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~Lwt~.try~_bind f g h>> applies <<span class="odocwiki_inlinecode"|f ~(~)>>~, and then makes it so that~:
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="turn_off"| value Lwt_switch.turn_off >> ~[<<a_api | module Lwt_switch >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|turn~_off switch>> turns off the switch~.
>>
|
|@@ @style="tet-align: left;"@@\\U|
|@@class="odocwiki_index"@ @@<<a_api text="union"| value Lwt_pqueue.S.union >> ~[<<a_api | module Lwt_pqueue.S >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|union q q~'>> evaluates to a new priority queue~, which contains all the
        elements of both <<span class="odocwiki_inlinecode"|q>> and <<span class="odocwiki_inlinecode"|q~'>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="unix_file_descr"| value Lwt_unix.unix_file_descr >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Returns the underlying unix **file descriptor**~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="unlink"| value Lwt_unix.unlink >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.unlink>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="unlock"| value Lwt_mutex.unlock >> ~[<<a_api | module Lwt_mutex >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|unlock mutex>> unlock the mutex if no threads is waiting on
      it~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="unsafe_blit"| value Lwt_bytes.unsafe_blit >> ~[<<a_api | module Lwt_bytes >>~]|<<div class="odocwiki_info"|~Same as <<a_api | val Lwt_bytes.blit >> but without bound checking~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="unsafe_blit_from_bytes"| value Lwt_bytes.unsafe_blit_from_bytes >> ~[<<a_api | module Lwt_bytes >>~]|<<div class="odocwiki_info"|~Same as <<a_api | val Lwt_bytes.blit_from_bytes >> but without bounds checking~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="unsafe_blit_to_bytes"| value Lwt_bytes.unsafe_blit_to_bytes >> ~[<<a_api | module Lwt_bytes >>~]|<<div class="odocwiki_info"|~Same as <<a_api | val Lwt_bytes.blit_to_bytes >> but without bounds checking~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="unsafe_fill"| value Lwt_bytes.unsafe_fill >> ~[<<a_api | module Lwt_bytes >>~]|<<div class="odocwiki_info"|~Same as <<a_api | val Lwt_bytes.fill >> but without bounds checking~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="unsafe_get"| value Lwt_bytes.unsafe_get >> ~[<<a_api | module Lwt_bytes >>~]|<<div class="odocwiki_info"|~Same as <<a_api | val Lwt_bytes.get >> but without bounds checking~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="unsafe_set"| value Lwt_bytes.unsafe_set >> ~[<<a_api | module Lwt_bytes >>~]|<<div class="odocwiki_info"|~Same as <<a_api | val Lwt_bytes.set >> but without bounds checking~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="use"| value Lwt_pool.use >> ~[<<a_api | module Lwt_pool >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|use p f>> takes one free element of the pool <<span class="odocwiki_inlinecode"|p>> and gives it to
      the function <<span class="odocwiki_inlinecode"|f>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="utimes"| value Lwt_unix.utimes >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|utimes path atime mtime>> updates the access and modification times of the
    file at <<span class="odocwiki_inlinecode"|path>>~.
>>
|
|@@ @style="tet-align: left;"@@\\W|
|@@class="odocwiki_index"@ @@<<a_api text="wait"| value Lwt_unix.wait >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wrapper for <<span class="odocwiki_inlinecode"|~Unix~.wait>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="wait"| value Lwt_throttle.S.wait >> ~[<<a_api | module Lwt_throttle.S >>~]|<<div class="odocwiki_info"|>>
|
|@@class="odocwiki_index"@ @@<<a_api text="wait"| value Lwt_condition.wait >> ~[<<a_api | module Lwt_condition >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|wait mutex condvar>> will cause the current thread to block~,
        awaiting notification for a condition variable~, <<span class="odocwiki_inlinecode"|condvar>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="wait"| value Lwt.wait >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~Lwt~.wait>> is the same as <<a_api | val Lwt.task >>~, except the resulting promise <<span class="odocwiki_inlinecode"|p>> is
    //not// [[ #VALcancel| cancelable]]~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="wait4"| value Lwt_unix.wait4 >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|wait~4 flags pid>> returns <<span class="odocwiki_inlinecode"|~(pid~, status~, rusage~)>> where <<span class="odocwiki_inlinecode"|~(pid~, status~)>>
      is the same result as <<span class="odocwiki_inlinecode"|~Unix~.waitpid flags pid>>~, and
      <<span class="odocwiki_inlinecode"|rusage>> contains accounting information about the child~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="wait_count"| value Lwt_unix.wait_count >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Returns the number of threads waiting for a child to
      terminate~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="wait_for_jobs"| value Lwt_unix.wait_for_jobs >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Wait for all pending jobs to terminate~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="wait_mincore"| value Lwt_bytes.wait_mincore >> ~[<<a_api | module Lwt_bytes >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|wait~_mincore buffer offset>> waits until the page containing the
      byte at offset <<span class="odocwiki_inlinecode"|offset>> is in ~R~A~M~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="wait_queue_length"| value Lwt_pool.wait_queue_length >> ~[<<a_api | module Lwt_pool >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|wait~_queue~_length p>> returns the number of threads currently
      waiting for an element of the pool <<span class="odocwiki_inlinecode"|p>> to become available~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="wait_read"| value Lwt_unix.wait_read >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Waits ~(without blocking other threads~) until there is something
      to read from the file descriptor~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="wait_write"| value Lwt_unix.wait_write >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Waits ~(without blocking other threads~) until it is possible to
      write on the file descriptor~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="waiter_of_wakener"| value Lwt.waiter_of_wakener >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~Lwt~.waiter~_of~_wakener r>> evaluates to the promise associated with resolver
    <<span class="odocwiki_inlinecode"|r>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="waitpid"| value Lwt_unix.waitpid >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~A promise~-returning analog to
    [[ https://caml.inria.fr/pub/docs/manual-ocaml/libref/Unix.html#VALwaitpid|
    <<span class="odocwiki_inlinecode"|~Unix~.waitpid>>]]~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="wakeup"| value Lwt.wakeup >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~Lwt~.wakeup r v>> is like <<a_api | val Lwt.wakeup_later >><<span class="odocwiki_inlinecode"| r v>>~, except it guarantees
    that callbacks associated with <<span class="odocwiki_inlinecode"|r>> will be called immediately~, deeper on the
    current stack~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="wakeup_exn"| value Lwt.wakeup_exn >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~Lwt~.wakeup~_exn r exn>> is like <<a_api | val Lwt.wakeup_later_exn >><<span class="odocwiki_inlinecode"| r exn>>~, but has
    the same problems as <<a_api | val Lwt.wakeup >>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="wakeup_later"| value Lwt.wakeup_later >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~Lwt~.wakeup~_later r v>> //fulfills//~, with value <<span class="odocwiki_inlinecode"|v>>~, the //pending//
    [[ #TYPEt| promise]] associated with [[ #TYPEu| resolver]] <<span class="odocwiki_inlinecode"|r>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="wakeup_later_exn"| value Lwt.wakeup_later_exn >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~Lwt~.wakeup~_later~_exn r exn>> is like <<a_api | val Lwt.wakeup_later >>~, except~, if the
    associated [[ #TYPEt| promise]] is //pending//~, it is //rejected// with
    <<span class="odocwiki_inlinecode"|exn>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="wakeup_later_result"| value Lwt.wakeup_later_result >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~Lwt~.wakeup~_later~_result r result>> resolves the pending promise <<span class="odocwiki_inlinecode"|p>>
    associated to resolver <<span class="odocwiki_inlinecode"|r>>~, according to <<span class="odocwiki_inlinecode"|result>>~:
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="wakeup_result"| value Lwt.wakeup_result >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~Lwt~.wakeup~_result r result>> is like <<a_api | val Lwt.wakeup_later_result >><<span class="odocwiki_inlinecode"| r result>>~,
    but has the same problems as <<a_api | val Lwt.wakeup >>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="windows"| value Lwt_sys.windows >> ~[<<a_api | module Lwt_sys >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_deprecated"|>>>>
|
|@@class="odocwiki_index"@ @@<<a_api text="with_async_detach"| value Lwt_unix.with_async_detach >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|with~_async~_detach f>> is a shorthand for~:
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="with_async_none"| value Lwt_unix.with_async_none >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|with~_async~_none f>> is a shorthand for~:
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="with_async_switch"| value Lwt_unix.with_async_switch >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|with~_async~_switch f>> is a shorthand for~:
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="with_connection"| value Lwt_io.with_connection >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|with~_connection ~?fd ~?in~_buffer ~?out~_buffer addr f>> opens a
      connection to the given address and passes the channels to
      <<span class="odocwiki_inlinecode"|f>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="with_file"| value Lwt_io.with_file >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|with~_file ~?buffer ~?flags ~?perm ~~mode filename f>> opens a
      file and passes the channel to <<span class="odocwiki_inlinecode"|f>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="with_finaliser"| value Lwt_react.S.with_finaliser >> ~[<<a_api | module Lwt_react.S >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|with~_finaliser f s>> returns a signal <<span class="odocwiki_inlinecode"|s~'>> which behave as
        <<span class="odocwiki_inlinecode"|s>>~, except that <<span class="odocwiki_inlinecode"|f>> is called when <<span class="odocwiki_inlinecode"|s~'>> is garbage
        collected~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="with_finaliser"| value Lwt_react.E.with_finaliser >> ~[<<a_api | module Lwt_react.E >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|with~_finaliser f e>> returns an event <<span class="odocwiki_inlinecode"|e~'>> which behave as
        <<span class="odocwiki_inlinecode"|e>>~, except that <<span class="odocwiki_inlinecode"|f>> is called when <<span class="odocwiki_inlinecode"|e~'>> is garbage
        collected~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="with_lock"| value Lwt_mutex.with_lock >> ~[<<a_api | module Lwt_mutex >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|with~_lock lock f>> is used to lock a mutex within a block scope~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="with_process"| value Lwt_process.with_process >> ~[<<a_api | module Lwt_process >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="with_process_full"| value Lwt_process.with_process_full >> ~[<<a_api | module Lwt_process >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="with_process_in"| value Lwt_process.with_process_in >> ~[<<a_api | module Lwt_process >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="with_process_none"| value Lwt_process.with_process_none >> ~[<<a_api | module Lwt_process >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="with_process_out"| value Lwt_process.with_process_out >> ~[<<a_api | module Lwt_process >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="with_switch"| value Lwt_switch.with_switch >> ~[<<a_api | module Lwt_switch >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|with~_switch fn>> is <<span class="odocwiki_inlinecode"|fn switch>>~, where <<span class="odocwiki_inlinecode"|switch>> is a fresh switch
      that is turned off when the callback thread finishes ~(whether it
      succeeds or fails~)~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="with_temp_file"| value Lwt_io.with_temp_file >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|with~_temp~_file f>> calls <<a_api | val Lwt_io.open_temp_file >><<span class="odocwiki_inlinecode"| ~(~)>>~, passing all optional
    arguments directly to it~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="with_timeout"| value Lwt_unix.with_timeout >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|with~_timeout d f>> is a short~-hand for~:
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="with_value"| value Lwt.with_value >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~Lwt~.with~_value k v f>> sets <<span class="odocwiki_inlinecode"|k>> to <<span class="odocwiki_inlinecode"|v>> in ~Lwt~'s internal implicit callback
    argument map~, then runs <<span class="odocwiki_inlinecode"|f ~(~)>>~, then restores the previous value associated
    with <<span class="odocwiki_inlinecode"|k>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="wrap"| value Lwt.wrap >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|~Lwt~.wrap f>> applies <<span class="odocwiki_inlinecode"|f ~(~)>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="wrap1"| value Lwt.wrap1 >> ~[<<a_api | module Lwt >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="wrap2"| value Lwt.wrap2 >> ~[<<a_api | module Lwt >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="wrap3"| value Lwt.wrap3 >> ~[<<a_api | module Lwt >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="wrap4"| value Lwt.wrap4 >> ~[<<a_api | module Lwt >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="wrap5"| value Lwt.wrap5 >> ~[<<a_api | module Lwt >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="wrap6"| value Lwt.wrap6 >> ~[<<a_api | module Lwt >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="wrap7"| value Lwt.wrap7 >> ~[<<a_api | module Lwt >>~]|<<div class="odocwiki_info"|~As a “prototype~,” <<span class="odocwiki_inlinecode"|~Lwt~_wrap~1 f>> creates a promise~-valued function <<span class="odocwiki_inlinecode"|g>>~:
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="wrap_exn"| value Lwt_stream.wrap_exn >> ~[<<a_api | module Lwt_stream >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|wrap~_exn s>> is a stream <<span class="odocwiki_inlinecode"|s~'>> such that each time <<span class="odocwiki_inlinecode"|s>> yields a value <<span class="odocwiki_inlinecode"|v>>~,
    <<span class="odocwiki_inlinecode"|s~'>> yields <<span class="odocwiki_inlinecode"|~Result~.~Ok v>>~, and when the source of <<span class="odocwiki_inlinecode"|s>> raises an exception
    <<span class="odocwiki_inlinecode"|e>>~, <<span class="odocwiki_inlinecode"|s~'>> yields <<span class="odocwiki_inlinecode"|~Result~.~Error e>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="wrap_syscall"| value Lwt_unix.wrap_syscall >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|wrap~_syscall set fd action>> wrap an action on a **file
      descriptor**~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="writable"| value Lwt_unix.writable >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~Returns whether the given file descriptor is currently
      writable~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="writable_count"| value Lwt_engine.writable_count >> ~[<<a_api | module Lwt_engine >>~]|<<div class="odocwiki_info"|~Returns the number of events waiting for a file descriptor to
      become writable~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="write"| value Lwt_bytes.write >> ~[<<a_api | module Lwt_bytes >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="write"| value Lwt_io.write >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|write oc str>> writes all characters of <<span class="odocwiki_inlinecode"|str>> on <<span class="odocwiki_inlinecode"|oc>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="write"| value Lwt_unix.write >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|write fd buf ofs len>> writes up to <<span class="odocwiki_inlinecode"|len>> bytes to <<span class="odocwiki_inlinecode"|fd>> from <<span class="odocwiki_inlinecode"|buf>>~, starting
    at buffer offset <<span class="odocwiki_inlinecode"|ofs>>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="write_char"| value Lwt_io.write_char >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|write~_char oc char>> writes <<span class="odocwiki_inlinecode"|char>> on <<span class="odocwiki_inlinecode"|oc>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="write_chars"| value Lwt_io.write_chars >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|write~_chars oc chars>> writes all characters of <<span class="odocwiki_inlinecode"|chars>> on
      <<span class="odocwiki_inlinecode"|oc>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="write_float32"| value Lwt_io.NumberIO.write_float32 >> ~[<<a_api | module Lwt_io.NumberIO >>~]|<<div class="odocwiki_info"|~Writes an ~I~E~E~E single precision floating point value
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="write_float64"| value Lwt_io.NumberIO.write_float64 >> ~[<<a_api | module Lwt_io.NumberIO >>~]|<<div class="odocwiki_info"|~Writes an ~I~E~E~E double precision floating point value
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="write_from"| value Lwt_io.write_from >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|write~_from oc buffer offset length>> writes up to <<span class="odocwiki_inlinecode"|length>> bytes
      to <<span class="odocwiki_inlinecode"|oc>>~, from <<span class="odocwiki_inlinecode"|buffer>> at offset <<span class="odocwiki_inlinecode"|offset>> and returns the number
      of bytes actually written
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="write_from_exactly"| value Lwt_io.write_from_exactly >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|write~_from~_exactly oc buffer offset length>> writes all <<span class="odocwiki_inlinecode"|length>>
      bytes from <<span class="odocwiki_inlinecode"|buffer>> at offset <<span class="odocwiki_inlinecode"|offset>> to <<span class="odocwiki_inlinecode"|oc>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="write_from_string"| value Lwt_io.write_from_string >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|~See <<a_api | val Lwt_io.write >>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="write_from_string_exactly"| value Lwt_io.write_from_string_exactly >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|~See <<a_api | val Lwt_io.write_from_exactly >>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="write_int"| value Lwt_io.NumberIO.write_int >> ~[<<a_api | module Lwt_io.NumberIO >>~]|<<div class="odocwiki_info"|~Writes an ocaml int as a ~3~2~-bits integer
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="write_int16"| value Lwt_io.NumberIO.write_int16 >> ~[<<a_api | module Lwt_io.NumberIO >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="write_int32"| value Lwt_io.NumberIO.write_int32 >> ~[<<a_api | module Lwt_io.NumberIO >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="write_int64"| value Lwt_io.NumberIO.write_int64 >> ~[<<a_api | module Lwt_io.NumberIO >>~]||
|@@class="odocwiki_index"@ @@<<a_api text="write_line"| value Lwt_io.write_line >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|write~_line oc str>> writes <<span class="odocwiki_inlinecode"|str>> on <<span class="odocwiki_inlinecode"|oc>> followed by a
      new~-line~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="write_lines"| value Lwt_io.write_lines >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|write~_lines oc lines>> writes all lines of <<span class="odocwiki_inlinecode"|lines>> to <<span class="odocwiki_inlinecode"|oc>>
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="write_string"| value Lwt_unix.write_string >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|~See <<a_api | val Lwt_unix.write >>~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="write_value"| value Lwt_io.write_value >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|write~_value channel ~?flags v>> writes <<span class="odocwiki_inlinecode"|v>> to <<span class="odocwiki_inlinecode"|channel>> using the <<span class="odocwiki_inlinecode"|~Marshal>>
    module of the standard library~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="writev"| value Lwt_unix.writev >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|writev fd vs>> writes the bytes in the buffer slices <<span class="odocwiki_inlinecode"|vs>> to the file
    descriptor <<span class="odocwiki_inlinecode"|fd>>~.
>>
|
|@@ @style="tet-align: left;"@@\\Y|
|@@class="odocwiki_index"@ @@<<a_api text="yield"| value Lwt_unix.yield >> ~[<<a_api | module Lwt_unix >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|yield ~(~)>> is a thread that suspends itself and then resumes
      as soon as possible and terminates~.
>>
|
|@@class="odocwiki_index"@ @@<<a_api text="yield"| value Lwt_main.yield >> ~[<<a_api | module Lwt_main >>~]|<<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|yield ~(~)>> is a threads which suspends itself and then resumes
      as soon as possible and terminates~.
>>
|
|@@ @style="tet-align: left;"@@\\Z|
|@@class="odocwiki_index"@ @@<<a_api text="zero"| value Lwt_io.zero >> ~[<<a_api | module Lwt_io >>~]|<<div class="odocwiki_info"|~Inputs which returns always <<span class="odocwiki_inlinecode"|~'~\x~0~0~'>>
>>
|
\\
