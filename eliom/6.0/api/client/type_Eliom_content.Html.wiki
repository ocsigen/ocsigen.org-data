<<code language="ocaml" | sig
  type +'a elt
  type +'a attrib
  type uri = Eliom_content.Xml.uri
  type 'a form_param
  module F :
    sig
      module Raw :
        sig
          type 'a elt = 'a elt
          type doc = [ `Html ] elt
          type 'a attrib = 'a attrib
          module Xml :
            sig
              module W :
                sig
                  type 'a t = 'a Xml.W.t
                  val return : 'a -> 'a t
                  type ('a, 'b) ft = ('a, 'b) Xml.W.ft
                  val fmap : ('a, 'b) ft -> 'a t -> 'b t
                  type 'a tlist = 'a Xml.W.tlist
                  val nil : unit -> 'a tlist
                  val singleton : 'a t -> 'a tlist
                  val cons : 'a t -> 'a tlist -> 'a tlist
                  val append : 'a tlist -> 'a tlist -> 'a tlist
                  val map : ('a, 'b) ft -> 'a tlist -> 'b tlist
                end
              type 'a wrap = 'a W.t
              type 'a list_wrap = 'a W.tlist
              type uri = Xml.uri
              val string_of_uri : (uri, string) W.ft
              val uri_of_string : (string, uri) W.ft
              type aname = string
              type event_handler = Xml.event_handler
              type mouse_event_handler = Xml.mouse_event_handler
              type keyboard_event_handler = Xml.keyboard_event_handler
              type attrib = Xml.attrib
              val float_attrib : aname -> float wrap -> attrib
              val int_attrib : aname -> int wrap -> attrib
              val string_attrib : aname -> string wrap -> attrib
              val space_sep_attrib : aname -> string list wrap -> attrib
              val comma_sep_attrib : aname -> string list wrap -> attrib
              val event_handler_attrib : aname -> event_handler -> attrib
              val mouse_event_handler_attrib :
                aname -> mouse_event_handler -> attrib
              val keyboard_event_handler_attrib :
                aname -> keyboard_event_handler -> attrib
              val uri_attrib : aname -> uri wrap -> attrib
              val uris_attrib : aname -> uri list wrap -> attrib
              type elt = Xml.elt
              type ename = string
              val empty : unit -> elt
              val comment : string -> elt
              val pcdata : string wrap -> elt
              val encodedpcdata : string wrap -> elt
              val entity : string -> elt
              val leaf : ?a:attrib list -> ename -> elt
              val node : ?a:attrib list -> ename -> elt list_wrap -> elt
              val cdata : string -> elt
              val cdata_script : string -> elt
              val cdata_style : string -> elt
            end
          type 'a wrap = 'a Xml.W.t
          type 'a list_wrap = 'a Xml.W.tlist
          type ('a, 'b) nullary = ?a:'a attrib list -> unit -> 'b elt
          type ('a, 'b, 'c) unary =
              ?a:'a attrib list -> 'b elt wrap -> 'c elt
          type ('a, 'b, 'c) star =
              ?a:'a attrib list -> 'b elt list_wrap -> 'c elt
          module Info : Xml_sigs.Info
          type uri = Xml.uri
          val string_of_uri : (uri, string) Xml.W.ft
          val uri_of_string : (string, uri) Xml.W.ft
          val a_class : Html_types.nmtokens wrap -> [> `Class ] attrib
          val a_user_data :
            Html_types.nmtoken ->
            Html_types.text wrap -> [> `User_data ] attrib
          val a_id : Html_types.text wrap -> [> `Id ] attrib
          val a_title : Html_types.text wrap -> [> `Title ] attrib
          val a_xml_lang :
            Html_types.languagecode wrap -> [> `XML_lang ] attrib
          val a_lang : Html_types.languagecode wrap -> [> `Lang ] attrib
          val a_onabort : Xml.event_handler -> [> `OnAbort ] attrib
          val a_onafterprint : Xml.event_handler -> [> `OnAfterPrint ] attrib
          val a_onbeforeprint :
            Xml.event_handler -> [> `OnBeforePrint ] attrib
          val a_onbeforeunload :
            Xml.event_handler -> [> `OnBeforeUnload ] attrib
          val a_onblur : Xml.event_handler -> [> `OnBlur ] attrib
          val a_oncanplay : Xml.event_handler -> [> `OnCanPlay ] attrib
          val a_oncanplaythrough :
            Xml.event_handler -> [> `OnCanPlayThrough ] attrib
          val a_onchange : Xml.event_handler -> [> `OnChange ] attrib
          val a_ondurationchange :
            Xml.event_handler -> [> `OnDurationChange ] attrib
          val a_onemptied : Xml.event_handler -> [> `OnEmptied ] attrib
          val a_onended : Xml.event_handler -> [> `OnEnded ] attrib
          val a_onerror : Xml.event_handler -> [> `OnError ] attrib
          val a_onfocus : Xml.event_handler -> [> `OnFocus ] attrib
          val a_onformchange : Xml.event_handler -> [> `OnFormChange ] attrib
          val a_onforminput : Xml.event_handler -> [> `OnFormInput ] attrib
          val a_onhashchange : Xml.event_handler -> [> `OnHashChange ] attrib
          val a_oninput : Xml.event_handler -> [> `OnInput ] attrib
          val a_oninvalid : Xml.event_handler -> [> `OnInvalid ] attrib
          val a_onmousewheel : Xml.event_handler -> [> `OnMouseWheel ] attrib
          val a_onoffline : Xml.event_handler -> [> `OnOffLine ] attrib
          val a_ononline : Xml.event_handler -> [> `OnOnLine ] attrib
          val a_onpause : Xml.event_handler -> [> `OnPause ] attrib
          val a_onplay : Xml.event_handler -> [> `OnPlay ] attrib
          val a_onplaying : Xml.event_handler -> [> `OnPlaying ] attrib
          val a_onpagehide : Xml.event_handler -> [> `OnPageHide ] attrib
          val a_onpageshow : Xml.event_handler -> [> `OnPageShow ] attrib
          val a_onpopstate : Xml.event_handler -> [> `OnPopState ] attrib
          val a_onprogress : Xml.event_handler -> [> `OnProgress ] attrib
          val a_onratechange : Xml.event_handler -> [> `OnRateChange ] attrib
          val a_onreadystatechange :
            Xml.event_handler -> [> `OnReadyStateChange ] attrib
          val a_onredo : Xml.event_handler -> [> `OnRedo ] attrib
          val a_onresize : Xml.event_handler -> [> `OnResize ] attrib
          val a_onscroll : Xml.event_handler -> [> `OnScroll ] attrib
          val a_onseeked : Xml.event_handler -> [> `OnSeeked ] attrib
          val a_onseeking : Xml.event_handler -> [> `OnSeeking ] attrib
          val a_onselect : Xml.event_handler -> [> `OnSelect ] attrib
          val a_onshow : Xml.event_handler -> [> `OnShow ] attrib
          val a_onstalled : Xml.event_handler -> [> `OnStalled ] attrib
          val a_onstorage : Xml.event_handler -> [> `OnStorage ] attrib
          val a_onsubmit : Xml.event_handler -> [> `OnSubmit ] attrib
          val a_onsuspend : Xml.event_handler -> [> `OnSuspend ] attrib
          val a_ontimeupdate : Xml.event_handler -> [> `OnTimeUpdate ] attrib
          val a_onundo : Xml.event_handler -> [> `OnUndo ] attrib
          val a_onunload : Xml.event_handler -> [> `OnUnload ] attrib
          val a_onvolumechange :
            Xml.event_handler -> [> `OnVolumeChange ] attrib
          val a_onwaiting : Xml.event_handler -> [> `OnWaiting ] attrib
          val a_onload : Xml.event_handler -> [> `OnLoad ] attrib
          val a_onloadeddata : Xml.event_handler -> [> `OnLoadedData ] attrib
          val a_onloadedmetadata :
            Xml.event_handler -> [> `OnLoadedMetaData ] attrib
          val a_onloadstart : Xml.event_handler -> [> `OnLoadStart ] attrib
          val a_onmessage : Xml.event_handler -> [> `OnMessage ] attrib
          val a_onclick : Xml.mouse_event_handler -> [> `OnClick ] attrib
          val a_oncontextmenu :
            Xml.mouse_event_handler -> [> `OnContextMenu ] attrib
          val a_ondblclick :
            Xml.mouse_event_handler -> [> `OnDblClick ] attrib
          val a_ondrag : Xml.mouse_event_handler -> [> `OnDrag ] attrib
          val a_ondragend : Xml.mouse_event_handler -> [> `OnDragEnd ] attrib
          val a_ondragenter :
            Xml.mouse_event_handler -> [> `OnDragEnter ] attrib
          val a_ondragleave :
            Xml.mouse_event_handler -> [> `OnDragLeave ] attrib
          val a_ondragover :
            Xml.mouse_event_handler -> [> `OnDragOver ] attrib
          val a_ondragstart :
            Xml.mouse_event_handler -> [> `OnDragStart ] attrib
          val a_ondrop : Xml.mouse_event_handler -> [> `OnDrop ] attrib
          val a_onmousedown :
            Xml.mouse_event_handler -> [> `OnMouseDown ] attrib
          val a_onmouseup : Xml.mouse_event_handler -> [> `OnMouseUp ] attrib
          val a_onmouseover :
            Xml.mouse_event_handler -> [> `OnMouseOver ] attrib
          val a_onmousemove :
            Xml.mouse_event_handler -> [> `OnMouseMove ] attrib
          val a_onmouseout :
            Xml.mouse_event_handler -> [> `OnMouseOut ] attrib
          val a_onkeypress :
            Xml.keyboard_event_handler -> [> `OnKeyPress ] attrib
          val a_onkeydown :
            Xml.keyboard_event_handler -> [> `OnKeyDown ] attrib
          val a_onkeyup : Xml.keyboard_event_handler -> [> `OnKeyUp ] attrib
          val a_autocomplete : bool wrap -> [> `Autocomplete ] attrib
          val a_async : unit -> [> `Async ] attrib
          val a_autofocus : unit -> [> `Autofocus ] attrib
          val a_autoplay : unit -> [> `Autoplay ] attrib
          val a_muted : unit -> [> `Muted ] attrib
          val a_crossorigin :
            [< `Anonymous | `Use_credentials ] wrap ->
            [> `Crossorigin ] attrib
          val a_mediagroup : string wrap -> [> `Mediagroup ] attrib
          val a_challenge : Html_types.text wrap -> [> `Challenge ] attrib
          val a_contenteditable : bool wrap -> [> `Contenteditable ] attrib
          val a_contextmenu :
            Html_types.idref wrap -> [> `Contextmenu ] attrib
          val a_controls : unit -> [> `Controls ] attrib
          val a_dir : [< `Ltr | `Rtl ] wrap -> [> `Dir ] attrib
          val a_draggable : bool wrap -> [> `Draggable ] attrib
          val a_form : Html_types.idref wrap -> [> `Form ] attrib
          val a_formaction : Xml.uri wrap -> [> `Formaction ] attrib
          val a_formenctype :
            Html_types.contenttype wrap -> [> `Formenctype ] attrib
          val a_formnovalidate : unit -> [> `Formnovalidate ] attrib
          val a_formtarget : Html_types.text wrap -> [> `Formtarget ] attrib
          val a_hidden : unit -> [> `Hidden ] attrib
          val a_high : Html_types.float_number wrap -> [> `High ] attrib
          val a_icon : Xml.uri wrap -> [> `Icon ] attrib
          val a_ismap : unit -> [> `Ismap ] attrib
          val a_keytype : Html_types.text wrap -> [> `Keytype ] attrib
          val a_list : Html_types.idref wrap -> [> `List ] attrib
          val a_loop : unit -> [> `Loop ] attrib
          val a_low : Html_types.float_number wrap -> [> `High ] attrib
          val a_max : Html_types.float_number wrap -> [> `Max ] attrib
          val a_input_max :
            Html_types.number_or_datetime wrap -> [> `Input_Max ] attrib
          val a_min : Html_types.float_number wrap -> [> `Min ] attrib
          val a_input_min :
            Html_types.number_or_datetime wrap -> [> `Input_Min ] attrib
          val a_inputmode :
            [< `Email
             | `Full_width_latin
             | `Kana
             | `Katakana
             | `Latin
             | `Latin_name
             | `Latin_prose
             | `Numeric
             | `Tel
             | `Url
             | `Verbatim ]
            wrap -> [> `Inputmode ] attrib
          val a_novalidate : unit -> [> `Novalidate ] attrib
          val a_open : unit -> [> `Open ] attrib
          val a_optimum :
            Html_types.float_number wrap -> [> `Optimum ] attrib
          val a_pattern : Html_types.text wrap -> [> `Pattern ] attrib
          val a_placeholder :
            Html_types.text wrap -> [> `Placeholder ] attrib
          val a_poster : Xml.uri wrap -> [> `Poster ] attrib
          val a_preload :
            [< `Audio | `Metadata | `None ] wrap -> [> `Preload ] attrib
          val a_pubdate : unit -> [> `Pubdate ] attrib
          val a_radiogroup : Html_types.text wrap -> [> `Radiogroup ] attrib
          val a_required : unit -> [> `Required ] attrib
          val a_reversed : unit -> [> `Reversed ] attrib
          val a_sandbox :
            [< Html_types.sandbox_token ] list wrap -> [> `Sandbox ] attrib
          val a_spellcheck : bool wrap -> [> `Spellcheck ] attrib
          val a_scoped : unit -> [> `Scoped ] attrib
          val a_seamless : unit -> [> `Seamless ] attrib
          val a_sizes :
            (Html_types.number * Html_types.number) list option wrap ->
            [> `Sizes ] attrib
          val a_span : Html_types.number wrap -> [> `Span ] attrib
          val a_srclang : Html_types.nmtoken wrap -> [> `XML_lang ] attrib
          type image_candidate =
              [ `Url of uri
              | `Url_pixel of uri * Html_types.float_number
              | `Url_width of uri * Html_types.number ]
          val a_srcset : image_candidate list wrap -> [> `Srcset ] attrib
          val a_img_sizes :
            Html_types.text list wrap -> [> `Img_sizes ] attrib
          val a_start : Html_types.number wrap -> [> `Start ] attrib
          val a_step :
            Html_types.float_number option wrap -> [> `Step ] attrib
          val a_wrap : [< `Hard | `Soft ] wrap -> [> `Wrap ] attrib
          val a_version : Html_types.cdata wrap -> [> `Version ] attrib
          val a_xmlns : [< `W3_org_1999_xhtml ] wrap -> [> `XMLns ] attrib
          val a_manifest : Xml.uri wrap -> [> `Manifest ] attrib
          val a_cite : Xml.uri wrap -> [> `Cite ] attrib
          val a_xml_space :
            [< `Default | `Preserve ] wrap -> [> `XML_space ] attrib
          val a_accesskey :
            Html_types.character wrap -> [> `Accesskey ] attrib
          val a_charset : Html_types.charset wrap -> [> `Charset ] attrib
          val a_accept_charset :
            Html_types.charsets wrap -> [> `Accept_charset ] attrib
          val a_accept : Html_types.contenttypes wrap -> [> `Accept ] attrib
          val a_href : Xml.uri wrap -> [> `Href ] attrib
          val a_hreflang :
            Html_types.languagecode wrap -> [> `Hreflang ] attrib
          val a_download : string option wrap -> [> `Download ] attrib
          val a_rel : Html_types.linktypes wrap -> [> `Rel ] attrib
          val a_tabindex : Html_types.number wrap -> [> `Tabindex ] attrib
          val a_mime_type :
            Html_types.contenttype wrap -> [> `Mime_type ] attrib
          val a_datetime : Html_types.cdata wrap -> [> `Datetime ] attrib
          val a_action : Xml.uri wrap -> [> `Action ] attrib
          val a_checked : unit -> [> `Checked ] attrib
          val a_cols : Html_types.number wrap -> [> `Cols ] attrib
          val a_enctype : Html_types.contenttype wrap -> [> `Enctype ] attrib
          val a_label_for : Html_types.idref wrap -> [> `Label_for ] attrib
          val a_for : Html_types.idref wrap -> [> `Label_for ] attrib
          val a_output_for :
            Html_types.idrefs wrap -> [> `Output_for ] attrib
          val a_for_list : Html_types.idrefs wrap -> [> `Output_for ] attrib
          val a_maxlength : Html_types.number wrap -> [> `Maxlength ] attrib
          val a_method : [< `Get | `Post ] wrap -> [> `Method ] attrib
          val a_formmethod : [< `Get | `Post ] wrap -> [> `Method ] attrib
          val a_multiple : unit -> [> `Multiple ] attrib
          val a_name : Html_types.text wrap -> [> `Name ] attrib
          val a_rows : Html_types.number wrap -> [> `Rows ] attrib
          val a_selected : unit -> [> `Selected ] attrib
          val a_size : Html_types.number wrap -> [> `Size ] attrib
          val a_src : Xml.uri wrap -> [> `Src ] attrib
          val a_input_type :
            [< `Button
             | `Checkbox
             | `Color
             | `Date
             | `Datetime
             | `Datetime_local
             | `Email
             | `File
             | `Hidden
             | `Image
             | `Month
             | `Number
             | `Password
             | `Radio
             | `Range
             | `Reset
             | `Search
             | `Submit
             | `Tel
             | `Text
             | `Time
             | `Url
             | `Week ]
            wrap -> [> `Input_Type ] attrib
          val a_text_value : Html_types.text wrap -> [> `Text_Value ] attrib
          val a_int_value : Html_types.number wrap -> [> `Int_Value ] attrib
          val a_value : Html_types.cdata wrap -> [> `Value ] attrib
          val a_float_value :
            Html_types.float_number wrap -> [> `Float_Value ] attrib
          val a_disabled : unit -> [> `Disabled ] attrib
          val a_readonly : unit -> [> `ReadOnly ] attrib
          val a_button_type :
            [< `Button | `Reset | `Submit ] wrap -> [> `Button_Type ] attrib
          val a_command_type :
            [< `Checkbox | `Command | `Radio ] wrap ->
            [> `Command_Type ] attrib
          val a_menu_type :
            [< `Context | `Toolbar ] wrap -> [> `Menu_Type ] attrib
          val a_label : Html_types.text wrap -> [> `Label ] attrib
          val a_align :
            [< `Char | `Justify | `Left | `Right ] wrap -> [> `Align ] attrib
          val a_axis : Html_types.cdata wrap -> [> `Axis ] attrib
          val a_colspan : Html_types.number wrap -> [> `Colspan ] attrib
          val a_headers : Html_types.idrefs wrap -> [> `Headers ] attrib
          val a_rowspan : Html_types.number wrap -> [> `Rowspan ] attrib
          val a_scope :
            [< `Col | `Colgroup | `Row | `Rowgroup ] wrap ->
            [> `Scope ] attrib
          val a_summary : Html_types.text wrap -> [> `Summary ] attrib
          val a_border : Html_types.pixels wrap -> [> `Border ] attrib
          val a_rules :
            [< `All | `Cols | `Groups | `None | `Rows ] wrap ->
            [> `Rules ] attrib
          val a_char : Html_types.character wrap -> [> `Char ] attrib
          val a_alt : Html_types.text wrap -> [> `Alt ] attrib
          val a_height : Html_types.number wrap -> [> `Height ] attrib
          val a_width : Html_types.number wrap -> [> `Width ] attrib
          type shape = [ `Circle | `Default | `Poly | `Rect ]
          val a_shape : shape wrap -> [> `Shape ] attrib
          val a_coords : Html_types.numbers wrap -> [> `Coords ] attrib
          val a_usemap : Html_types.idref wrap -> [> `Usemap ] attrib
          val a_data : Xml.uri wrap -> [> `Data ] attrib
          val a_codetype :
            Html_types.contenttype wrap -> [> `Codetype ] attrib
          val a_frameborder :
            [< `One | `Zero ] wrap -> [> `Frameborder ] attrib
          val a_marginheight :
            Html_types.pixels wrap -> [> `Marginheight ] attrib
          val a_marginwidth :
            Html_types.pixels wrap -> [> `Marginwidth ] attrib
          val a_scrolling :
            [< `Auto | `No | `Yes ] wrap -> [> `Scrolling ] attrib
          val a_target : Html_types.frametarget wrap -> [> `Target ] attrib
          val a_content : Html_types.text wrap -> [> `Content ] attrib
          val a_http_equiv : Html_types.text wrap -> [> `Http_equiv ] attrib
          val a_defer : unit -> [> `Defer ] attrib
          val a_media : Html_types.mediadesc wrap -> [> `Media ] attrib
          val a_style : string wrap -> [> `Style_Attr ] attrib
          val a_property : string wrap -> [> `Property ] attrib
          val pcdata : string wrap -> [> `PCDATA ] elt
          val html :
            ?a:Html_types.html_attrib attrib list ->
            [< `Head ] elt wrap -> [< `Body ] elt wrap -> [> `Html ] elt
          val head :
            ?a:Html_types.head_attrib attrib list ->
            [< `Title ] elt wrap ->
            Html_types.head_content_fun elt list_wrap ->
            [> Html_types.head ] elt
          val base :
            ([< Html_types.base_attrib ], [> Html_types.base ]) nullary
          val title :
            (Html_types.title_attrib, [< Html_types.title_content_fun ],
             [> Html_types.title ])
            unary
          val body :
            ([< Html_types.body_attrib ], [< Html_types.body_content_fun ],
             [> Html_types.body ])
            star
          val svg :
            ?a:[< Html_types.svg_attrib ] Svg.F.Raw.attrib list ->
            [< Html_types.svg_content ] Svg.F.Raw.elt list_wrap ->
            [> Html_types.svg ] elt
          val footer :
            ([< Html_types.common ],
             [< Html_types.flow5_without_header_footer ], [> `Footer ])
            star
          val header :
            ([< Html_types.common ],
             [< Html_types.flow5_without_header_footer ], [> `Header ])
            star
          val section :
            ([< Html_types.section_attrib ],
             [< Html_types.section_content_fun ], [> Html_types.section ])
            star
          val nav :
            ([< Html_types.nav_attrib ], [< Html_types.nav_content_fun ],
             [> Html_types.nav ])
            star
          val h1 :
            ([< Html_types.h1_attrib ], [< Html_types.h1_content_fun ],
             [> Html_types.h1 ])
            star
          val h2 :
            ([< Html_types.h2_attrib ], [< Html_types.h2_content_fun ],
             [> Html_types.h2 ])
            star
          val h3 :
            ([< Html_types.h3_attrib ], [< Html_types.h3_content_fun ],
             [> Html_types.h3 ])
            star
          val h4 :
            ([< Html_types.h4_attrib ], [< Html_types.h4_content_fun ],
             [> Html_types.h4 ])
            star
          val h5 :
            ([< Html_types.h5_attrib ], [< Html_types.h5_content_fun ],
             [> Html_types.h5 ])
            star
          val h6 :
            ([< Html_types.h6_attrib ], [< Html_types.h6_content_fun ],
             [> Html_types.h6 ])
            star
          val hgroup :
            ([< Html_types.hgroup_attrib ],
             [< Html_types.hgroup_content_fun ], [> Html_types.hgroup ])
            star
          val address :
            ([< Html_types.address_attrib ],
             [< Html_types.address_content_fun ], [> Html_types.address ])
            star
          val article :
            ([< Html_types.article_attrib ],
             [< Html_types.article_content_fun ], [> Html_types.article ])
            star
          val aside :
            ([< Html_types.aside_attrib ], [< Html_types.aside_content_fun ],
             [> Html_types.aside ])
            star
          val main :
            ([< Html_types.main_attrib ], [< Html_types.main_content_fun ],
             [> Html_types.main ])
            star
          val p :
            ([< Html_types.p_attrib ], [< Html_types.p_content_fun ],
             [> Html_types.p ])
            star
          val pre :
            ([< Html_types.pre_attrib ], [< Html_types.pre_content_fun ],
             [> Html_types.pre ])
            star
          val blockquote :
            ([< Html_types.blockquote_attrib ],
             [< Html_types.blockquote_content_fun ],
             [> Html_types.blockquote ])
            star
          val div :
            ([< Html_types.div_attrib ], [< Html_types.div_content_fun ],
             [> Html_types.div ])
            star
          val dl :
            ([< Html_types.dl_attrib ], [< Html_types.dl_content_fun ],
             [> Html_types.dl ])
            star
          val ol :
            ([< Html_types.ol_attrib ], [< Html_types.ol_content_fun ],
             [> Html_types.ol ])
            star
          val ul :
            ([< Html_types.ul_attrib ], [< Html_types.ul_content_fun ],
             [> Html_types.ul ])
            star
          val dd :
            ([< Html_types.dd_attrib ], [< Html_types.dd_content_fun ],
             [> Html_types.dd ])
            star
          val dt :
            ([< Html_types.dt_attrib ], [< Html_types.dt_content_fun ],
             [> Html_types.dt ])
            star
          val li :
            ([< Html_types.li_attrib ], [< Html_types.li_content_fun ],
             [> Html_types.li ])
            star
          val figcaption :
            ([< Html_types.figcaption_attrib ],
             [< Html_types.figcaption_content_fun ],
             [> Html_types.figcaption ])
            star
          val figure :
            ?figcaption:[ `Bottom of [< `Figcaption ] elt wrap
                        | `Top of [< `Figcaption ] elt wrap ] ->
            ([< Html_types.figure_attrib ],
             [< Html_types.figure_content_fun ], [> Html_types.figure ])
            star
          val hr : ([< Html_types.hr_attrib ], [> Html_types.hr ]) nullary
          val b :
            ([< Html_types.b_attrib ], [< Html_types.b_content_fun ],
             [> Html_types.b ])
            star
          val i :
            ([< Html_types.i_attrib ], [< Html_types.i_content_fun ],
             [> Html_types.i ])
            star
          val u :
            ([< Html_types.u_attrib ], [< Html_types.u_content_fun ],
             [> Html_types.u ])
            star
          val small :
            ([< Html_types.small_attrib ], [< Html_types.small_content_fun ],
             [> Html_types.small ])
            star
          val sub :
            ([< Html_types.sub_attrib ], [< Html_types.sub_content_fun ],
             [> Html_types.sub ])
            star
          val sup :
            ([< Html_types.sup_attrib ], [< Html_types.sup_content_fun ],
             [> Html_types.sup ])
            star
          val mark :
            ([< Html_types.mark_attrib ], [< Html_types.mark_content_fun ],
             [> Html_types.mark ])
            star
          val wbr : ([< Html_types.wbr_attrib ], [> Html_types.wbr ]) nullary
          val bdo :
            dir:[< `Ltr | `Rtl ] wrap ->
            ([< Html_types.common ], [< Html_types.phrasing ], [> `Bdo ])
            star
          val abbr :
            ([< Html_types.abbr_attrib ], [< Html_types.abbr_content_fun ],
             [> Html_types.abbr ])
            star
          val br : ([< Html_types.br_attrib ], [> Html_types.br ]) nullary
          val cite :
            ([< Html_types.cite_attrib ], [< Html_types.cite_content_fun ],
             [> Html_types.cite ])
            star
          val code :
            ([< Html_types.code_attrib ], [< Html_types.code_content_fun ],
             [> Html_types.code ])
            star
          val dfn :
            ([< Html_types.dfn_attrib ], [< Html_types.dfn_content_fun ],
             [> Html_types.dfn ])
            star
          val em :
            ([< Html_types.em_attrib ], [< Html_types.em_content_fun ],
             [> Html_types.em ])
            star
          val kbd :
            ([< Html_types.kbd_attrib ], [< Html_types.kbd_content_fun ],
             [> Html_types.kbd ])
            star
          val q :
            ([< Html_types.q_attrib ], [< Html_types.q_content_fun ],
             [> Html_types.q ])
            star
          val samp :
            ([< Html_types.samp_attrib ], [< Html_types.samp_content_fun ],
             [> Html_types.samp ])
            star
          val span :
            ([< Html_types.span_attrib ], [< Html_types.span_content_fun ],
             [> Html_types.span ])
            star
          val strong :
            ([< Html_types.strong_attrib ],
             [< Html_types.strong_content_fun ], [> Html_types.strong ])
            star
          val time :
            ([< Html_types.time_attrib ], [< Html_types.time_content_fun ],
             [> Html_types.time ])
            star
          val var :
            ([< Html_types.var_attrib ], [< Html_types.var_content_fun ],
             [> Html_types.var ])
            star
          val a : ([< Html_types.a_attrib ], 'a, [> `A of 'a ]) star
          val del : ([< Html_types.del_attrib ], 'a, [> `Del of 'a ]) star
          val ins : ([< Html_types.ins_attrib ], 'a, [> `Ins of 'a ]) star
          val img :
            src:Xml.uri wrap ->
            alt:Html_types.text wrap ->
            ([< Html_types.img_attrib ], [> Html_types.img ]) nullary
          val iframe :
            ([< `Accesskey
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Dir
              | `Draggable
              | `Height
              | `Hidden
              | `Id
              | `Lang
              | `Name
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Sandbox
              | `Seamless
              | `Spellcheck
              | `Src
              | `Style_Attr
              | `Tabindex
              | `Title
              | `User_data
              | `Width
              | `XML_lang
              | `XMLns ],
             [< `PCDATA ], [> `Iframe ])
            star
          val object_ :
            ?params:[< `Param ] elt list_wrap ->
            ([< `Accesskey
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Data
              | `Dir
              | `Draggable
              | `Form
              | `Height
              | `Hidden
              | `Id
              | `Lang
              | `Mime_type
              | `Name
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Spellcheck
              | `Style_Attr
              | `Tabindex
              | `Title
              | `Usemap
              | `User_data
              | `Width
              | `XML_lang
              | `XMLns ],
             'a, [> `Object of 'a ])
            star
          val param :
            ([< Html_types.param_attrib ], [> Html_types.param ]) nullary
          val embed :
            ([< `Accesskey
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Dir
              | `Draggable
              | `Height
              | `Hidden
              | `Id
              | `Lang
              | `Mime_type
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Spellcheck
              | `Src
              | `Style_Attr
              | `Tabindex
              | `Title
              | `User_data
              | `Width
              | `XML_lang
              | `XMLns ],
             [> `Embed ])
            nullary
          val audio :
            ?src:Xml.uri wrap ->
            ?srcs:[< Html_types.source ] elt list_wrap ->
            ([< Html_types.audio_attrib ], 'a, [> 'a Html_types.audio ]) star
          val video :
            ?src:Xml.uri wrap ->
            ?srcs:[< Html_types.source ] elt list_wrap ->
            ([< Html_types.video_attrib ], 'a, [> 'a Html_types.video ]) star
          val canvas :
            ([< Html_types.canvas_attrib ], 'a, [> 'a Html_types.canvas ])
            star
          val source :
            ([< Html_types.source_attrib ], [> Html_types.source ]) nullary
          val area :
            alt:Html_types.text wrap ->
            ([< `Accesskey
              | `Alt
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Coords
              | `Dir
              | `Draggable
              | `Hidden
              | `Hreflang
              | `Id
              | `Lang
              | `Media
              | `Mime_type
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Rel
              | `Shape
              | `Spellcheck
              | `Style_Attr
              | `Tabindex
              | `Target
              | `Title
              | `User_data
              | `XML_lang
              | `XMLns ],
             [> `Area ])
            nullary
          val map : ([< Html_types.map_attrib ], 'a, [> `A of 'a ]) star
          val caption :
            ([< Html_types.caption_attrib ],
             [< Html_types.caption_content_fun ], [> Html_types.caption ])
            star
          val table :
            ?caption:[< Html_types.caption ] elt wrap ->
            ?columns:[< Html_types.colgroup ] elt list_wrap ->
            ?thead:[< Html_types.thead ] elt wrap ->
            ?tfoot:[< Html_types.tfoot ] elt wrap ->
            ([< Html_types.table_attrib ], [< Html_types.table_content_fun ],
             [> Html_types.table ])
            star
          val tablex :
            ?caption:[< Html_types.caption ] elt wrap ->
            ?columns:[< Html_types.colgroup ] elt list_wrap ->
            ?thead:[< Html_types.thead ] elt wrap ->
            ?tfoot:[< Html_types.tfoot ] elt wrap ->
            ([< Html_types.tablex_attrib ],
             [< Html_types.tablex_content_fun ], [> Html_types.tablex ])
            star
          val colgroup :
            ([< Html_types.colgroup_attrib ],
             [< Html_types.colgroup_content_fun ], [> Html_types.colgroup ])
            star
          val col : ([< Html_types.col_attrib ], [> Html_types.col ]) nullary
          val thead :
            ([< Html_types.thead_attrib ], [< Html_types.thead_content_fun ],
             [> Html_types.thead ])
            star
          val tbody :
            ([< Html_types.tbody_attrib ], [< Html_types.tbody_content_fun ],
             [> Html_types.tbody ])
            star
          val tfoot :
            ([< Html_types.tfoot_attrib ], [< Html_types.tfoot_content_fun ],
             [> Html_types.tfoot ])
            star
          val td :
            ([< Html_types.td_attrib ], [< Html_types.td_content_fun ],
             [> Html_types.td ])
            star
          val th :
            ([< Html_types.th_attrib ], [< Html_types.th_content_fun ],
             [> Html_types.th ])
            star
          val tr :
            ([< Html_types.tr_attrib ], [< Html_types.tr_content_fun ],
             [> Html_types.tr ])
            star
          val form :
            ([< Html_types.form_attrib ], [< Html_types.form_content_fun ],
             [> Html_types.form ])
            star
          val fieldset :
            ?legend:[ `Legend ] elt wrap ->
            ([< `Accesskey
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Dir
              | `Disabled
              | `Draggable
              | `Form
              | `Hidden
              | `Id
              | `Lang
              | `Name
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Spellcheck
              | `Style_Attr
              | `Tabindex
              | `Title
              | `User_data
              | `XML_lang
              | `XMLns ],
             [< Html_types.flow5 ], [> `Fieldset ])
            star
          val legend :
            ([< Html_types.legend_attrib ],
             [< Html_types.legend_content_fun ], [> Html_types.legend ])
            star
          val label :
            ([< Html_types.label_attrib ], [< Html_types.label_content_fun ],
             [> Html_types.label ])
            star
          val input :
            ([< Html_types.input_attrib ], [> Html_types.input ]) nullary
          val button :
            ([< Html_types.button_attrib ],
             [< Html_types.button_content_fun ], [> Html_types.button ])
            star
          val select :
            ([< Html_types.select_attrib ],
             [< Html_types.select_content_fun ], [> Html_types.select ])
            star
          val datalist :
            ?children:[< `Options of [< `Option ] elt list_wrap
                       | `Phras of [< Html_types.phrasing ] elt list_wrap ] ->
            ([< Html_types.common ], [> `Datalist ]) nullary
          val optgroup :
            label:Html_types.text wrap ->
            ([< `Accesskey
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Dir
              | `Disabled
              | `Draggable
              | `Hidden
              | `Id
              | `Label
              | `Lang
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Spellcheck
              | `Style_Attr
              | `Tabindex
              | `Title
              | `User_data
              | `XML_lang
              | `XMLns ],
             [< `Option ], [> `Optgroup ])
            star
          val option :
            ([< Html_types.option_attrib ],
             [< Html_types.option_content_fun ],
             [> Html_types.selectoption ])
            unary
          val textarea :
            ([< Html_types.textarea_attrib ],
             [< Html_types.textarea_content_fun ], [> Html_types.textarea ])
            unary
          val keygen :
            ([< Html_types.keygen_attrib ], [> Html_types.keygen ]) nullary
          val progress :
            ([< Html_types.progress_attrib ],
             [< Html_types.progress_content_fun ], [> Html_types.progress ])
            star
          val meter :
            ([< Html_types.meter_attrib ], [< Html_types.meter_content_fun ],
             [> Html_types.meter ])
            star
          val output_elt :
            ([< Html_types.output_elt_attrib ],
             [< Html_types.output_elt_content_fun ],
             [> Html_types.output_elt ])
            star
          val entity : string -> [> `PCDATA ] elt
          val space : unit -> [> `PCDATA ] elt
          val cdata : string -> [> `PCDATA ] elt
          val cdata_script : string -> [> `PCDATA ] elt
          val cdata_style : string -> [> `PCDATA ] elt
          val details :
            [< `Summary ] elt wrap ->
            ([< `Accesskey
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Dir
              | `Draggable
              | `Hidden
              | `Id
              | `Lang
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Open
              | `Spellcheck
              | `Style_Attr
              | `Tabindex
              | `Title
              | `User_data
              | `XML_lang
              | `XMLns ],
             [< Html_types.flow5 ], [> `Details ])
            star
          val summary :
            ([< Html_types.summary_attrib ],
             [< Html_types.summary_content_fun ], [> Html_types.summary ])
            star
          val command :
            label:Html_types.text wrap ->
            ([< `Accesskey
              | `Checked
              | `Class
              | `Command_Type
              | `Contenteditable
              | `Contextmenu
              | `Dir
              | `Disabled
              | `Draggable
              | `Hidden
              | `Icon
              | `Id
              | `Lang
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Radiogroup
              | `Spellcheck
              | `Style_Attr
              | `Tabindex
              | `Title
              | `User_data
              | `XML_lang
              | `XMLns ],
             [> `Command ])
            nullary
          val menu :
            ?children:[< `Flows of [< Html_types.flow5 ] elt list_wrap
                       | `Lis of
                           [< `Li of [< Html_types.common ] ] elt list_wrap ] ->
            ([< `Accesskey
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Dir
              | `Draggable
              | `Hidden
              | `Id
              | `Label
              | `Lang
              | `Menu_Type
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Spellcheck
              | `Style_Attr
              | `Tabindex
              | `Title
              | `User_data
              | `XML_lang
              | `XMLns ],
             [> `Menu ])
            nullary
          val script :
            ([< Html_types.script_attrib ],
             [< Html_types.script_content_fun ], [> Html_types.script ])
            unary
          val noscript :
            ([< Html_types.noscript_attrib ],
             [< Html_types.noscript_content_fun ], [> Html_types.noscript ])
            star
          val meta :
            ([< Html_types.meta_attrib ], [> Html_types.meta ]) nullary
          val style :
            ([< Html_types.style_attrib ], [< Html_types.style_content_fun ],
             [> Html_types.style ])
            star
          val link :
            rel:Html_types.linktypes wrap ->
            href:Xml.uri wrap ->
            ([< `Accesskey
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Dir
              | `Draggable
              | `Hidden
              | `Href
              | `Hreflang
              | `Id
              | `Lang
              | `Media
              | `Mime_type
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Rel
              | `Sizes
              | `Spellcheck
              | `Style_Attr
              | `Tabindex
              | `Title
              | `User_data
              | `XML_lang
              | `XMLns ],
             [> `Link ])
            nullary
          val rt :
            ([< Html_types.rt_attrib ], [< Html_types.rt_content_fun ],
             [> Html_types.rt ])
            star
          val rp :
            ([< Html_types.rp_attrib ], [< Html_types.rp_content_fun ],
             [> Html_types.rp ])
            star
          val ruby :
            ([< Html_types.ruby_attrib ], [< Html_types.ruby_content_fun ],
             [> Html_types.ruby ])
            star
          val tot : Xml.elt -> 'a elt
          val totl : Xml.elt list_wrap -> 'a elt list_wrap
          val toelt : 'a elt -> Xml.elt
          val toeltl : 'a elt list_wrap -> Xml.elt list_wrap
          val doc_toelt : doc -> Xml.elt
          val to_xmlattribs : 'a attrib list -> Xml.attrib list
          val to_attrib : Xml.attrib -> 'a attrib
          module Unsafe :
            sig
              val data : string wrap -> 'a elt
              val node :
                string -> ?a:'a attrib list -> 'b elt list_wrap -> 'c elt
              val leaf : string -> ?a:'a attrib list -> unit -> 'b elt
              val coerce_elt : 'a elt -> 'b elt
              val string_attrib : string -> string wrap -> 'a attrib
              val float_attrib : string -> float wrap -> 'a attrib
              val int_attrib : string -> int wrap -> 'a attrib
              val uri_attrib : string -> uri wrap -> 'a attrib
              val space_sep_attrib : string -> string list wrap -> 'a attrib
              val comma_sep_attrib : string -> string list wrap -> 'a attrib
            end
        end
      type 'a elt = 'a elt
      type doc = [ `Html ] elt
      type 'a attrib = 'a attrib
      module Xml :
        sig
          module W :
            sig
              type 'a t = 'a Xml.W.t
              val return : 'a -> 'a t
              type ('a, 'b) ft = ('a, 'b) Xml.W.ft
              val fmap : ('a, 'b) ft -> 'a t -> 'b t
              type 'a tlist = 'a Xml.W.tlist
              val nil : unit -> 'a tlist
              val singleton : 'a t -> 'a tlist
              val cons : 'a t -> 'a tlist -> 'a tlist
              val append : 'a tlist -> 'a tlist -> 'a tlist
              val map : ('a, 'b) ft -> 'a tlist -> 'b tlist
            end
          type 'a wrap = 'a W.t
          type 'a list_wrap = 'a W.tlist
          type uri = Xml.uri
          val string_of_uri : (uri, string) W.ft
          val uri_of_string : (string, uri) W.ft
          type aname = string
          type event_handler = Xml.event_handler
          type mouse_event_handler = Xml.mouse_event_handler
          type keyboard_event_handler = Xml.keyboard_event_handler
          type attrib = Xml.attrib
          val float_attrib : aname -> float wrap -> attrib
          val int_attrib : aname -> int wrap -> attrib
          val string_attrib : aname -> string wrap -> attrib
          val space_sep_attrib : aname -> string list wrap -> attrib
          val comma_sep_attrib : aname -> string list wrap -> attrib
          val event_handler_attrib : aname -> event_handler -> attrib
          val mouse_event_handler_attrib :
            aname -> mouse_event_handler -> attrib
          val keyboard_event_handler_attrib :
            aname -> keyboard_event_handler -> attrib
          val uri_attrib : aname -> uri wrap -> attrib
          val uris_attrib : aname -> uri list wrap -> attrib
          type elt = Xml.elt
          type ename = string
          val empty : unit -> elt
          val comment : string -> elt
          val pcdata : string wrap -> elt
          val encodedpcdata : string wrap -> elt
          val entity : string -> elt
          val leaf : ?a:attrib list -> ename -> elt
          val node : ?a:attrib list -> ename -> elt list_wrap -> elt
          val cdata : string -> elt
          val cdata_script : string -> elt
          val cdata_style : string -> elt
        end
      type 'a wrap = 'a Xml.W.t
      type 'a list_wrap = 'a Xml.W.tlist
      type ('a, 'b) nullary = ?a:'a attrib list -> unit -> 'b elt
      type ('a, 'b, 'c) unary = ?a:'a attrib list -> 'b elt wrap -> 'c elt
      type ('a, 'b, 'c) star =
          ?a:'a attrib list -> 'b elt list_wrap -> 'c elt
      module Info : Xml_sigs.Info
      type uri = Xml.uri
      val string_of_uri : (uri, string) Xml.W.ft
      val a_class : Html_types.nmtokens wrap -> [> `Class ] attrib
      val a_user_data :
        Html_types.nmtoken -> Html_types.text wrap -> [> `User_data ] attrib
      val a_id : Html_types.text wrap -> [> `Id ] attrib
      val a_title : Html_types.text wrap -> [> `Title ] attrib
      val a_xml_lang : Html_types.languagecode wrap -> [> `XML_lang ] attrib
      val a_lang : Html_types.languagecode wrap -> [> `Lang ] attrib
      val a_onabort : Xml.event_handler -> [> `OnAbort ] attrib
      val a_onafterprint : Xml.event_handler -> [> `OnAfterPrint ] attrib
      val a_onbeforeprint : Xml.event_handler -> [> `OnBeforePrint ] attrib
      val a_onbeforeunload : Xml.event_handler -> [> `OnBeforeUnload ] attrib
      val a_onblur : Xml.event_handler -> [> `OnBlur ] attrib
      val a_oncanplay : Xml.event_handler -> [> `OnCanPlay ] attrib
      val a_oncanplaythrough :
        Xml.event_handler -> [> `OnCanPlayThrough ] attrib
      val a_onchange : Xml.event_handler -> [> `OnChange ] attrib
      val a_ondurationchange :
        Xml.event_handler -> [> `OnDurationChange ] attrib
      val a_onemptied : Xml.event_handler -> [> `OnEmptied ] attrib
      val a_onended : Xml.event_handler -> [> `OnEnded ] attrib
      val a_onerror : Xml.event_handler -> [> `OnError ] attrib
      val a_onfocus : Xml.event_handler -> [> `OnFocus ] attrib
      val a_onformchange : Xml.event_handler -> [> `OnFormChange ] attrib
      val a_onforminput : Xml.event_handler -> [> `OnFormInput ] attrib
      val a_onhashchange : Xml.event_handler -> [> `OnHashChange ] attrib
      val a_oninput : Xml.event_handler -> [> `OnInput ] attrib
      val a_oninvalid : Xml.event_handler -> [> `OnInvalid ] attrib
      val a_onmousewheel : Xml.event_handler -> [> `OnMouseWheel ] attrib
      val a_onoffline : Xml.event_handler -> [> `OnOffLine ] attrib
      val a_ononline : Xml.event_handler -> [> `OnOnLine ] attrib
      val a_onpause : Xml.event_handler -> [> `OnPause ] attrib
      val a_onplay : Xml.event_handler -> [> `OnPlay ] attrib
      val a_onplaying : Xml.event_handler -> [> `OnPlaying ] attrib
      val a_onpagehide : Xml.event_handler -> [> `OnPageHide ] attrib
      val a_onpageshow : Xml.event_handler -> [> `OnPageShow ] attrib
      val a_onpopstate : Xml.event_handler -> [> `OnPopState ] attrib
      val a_onprogress : Xml.event_handler -> [> `OnProgress ] attrib
      val a_onratechange : Xml.event_handler -> [> `OnRateChange ] attrib
      val a_onreadystatechange :
        Xml.event_handler -> [> `OnReadyStateChange ] attrib
      val a_onredo : Xml.event_handler -> [> `OnRedo ] attrib
      val a_onresize : Xml.event_handler -> [> `OnResize ] attrib
      val a_onscroll : Xml.event_handler -> [> `OnScroll ] attrib
      val a_onseeked : Xml.event_handler -> [> `OnSeeked ] attrib
      val a_onseeking : Xml.event_handler -> [> `OnSeeking ] attrib
      val a_onselect : Xml.event_handler -> [> `OnSelect ] attrib
      val a_onshow : Xml.event_handler -> [> `OnShow ] attrib
      val a_onstalled : Xml.event_handler -> [> `OnStalled ] attrib
      val a_onstorage : Xml.event_handler -> [> `OnStorage ] attrib
      val a_onsubmit : Xml.event_handler -> [> `OnSubmit ] attrib
      val a_onsuspend : Xml.event_handler -> [> `OnSuspend ] attrib
      val a_ontimeupdate : Xml.event_handler -> [> `OnTimeUpdate ] attrib
      val a_onundo : Xml.event_handler -> [> `OnUndo ] attrib
      val a_onunload : Xml.event_handler -> [> `OnUnload ] attrib
      val a_onvolumechange : Xml.event_handler -> [> `OnVolumeChange ] attrib
      val a_onwaiting : Xml.event_handler -> [> `OnWaiting ] attrib
      val a_onload : Xml.event_handler -> [> `OnLoad ] attrib
      val a_onloadeddata : Xml.event_handler -> [> `OnLoadedData ] attrib
      val a_onloadedmetadata :
        Xml.event_handler -> [> `OnLoadedMetaData ] attrib
      val a_onloadstart : Xml.event_handler -> [> `OnLoadStart ] attrib
      val a_onmessage : Xml.event_handler -> [> `OnMessage ] attrib
      val a_onclick : Xml.mouse_event_handler -> [> `OnClick ] attrib
      val a_oncontextmenu :
        Xml.mouse_event_handler -> [> `OnContextMenu ] attrib
      val a_ondblclick : Xml.mouse_event_handler -> [> `OnDblClick ] attrib
      val a_ondrag : Xml.mouse_event_handler -> [> `OnDrag ] attrib
      val a_ondragend : Xml.mouse_event_handler -> [> `OnDragEnd ] attrib
      val a_ondragenter : Xml.mouse_event_handler -> [> `OnDragEnter ] attrib
      val a_ondragleave : Xml.mouse_event_handler -> [> `OnDragLeave ] attrib
      val a_ondragover : Xml.mouse_event_handler -> [> `OnDragOver ] attrib
      val a_ondragstart : Xml.mouse_event_handler -> [> `OnDragStart ] attrib
      val a_ondrop : Xml.mouse_event_handler -> [> `OnDrop ] attrib
      val a_onmousedown : Xml.mouse_event_handler -> [> `OnMouseDown ] attrib
      val a_onmouseup : Xml.mouse_event_handler -> [> `OnMouseUp ] attrib
      val a_onmouseover : Xml.mouse_event_handler -> [> `OnMouseOver ] attrib
      val a_onmousemove : Xml.mouse_event_handler -> [> `OnMouseMove ] attrib
      val a_onmouseout : Xml.mouse_event_handler -> [> `OnMouseOut ] attrib
      val a_onkeypress :
        Xml.keyboard_event_handler -> [> `OnKeyPress ] attrib
      val a_onkeydown : Xml.keyboard_event_handler -> [> `OnKeyDown ] attrib
      val a_onkeyup : Xml.keyboard_event_handler -> [> `OnKeyUp ] attrib
      val a_autocomplete : bool wrap -> [> `Autocomplete ] attrib
      val a_async : unit -> [> `Async ] attrib
      val a_autofocus : unit -> [> `Autofocus ] attrib
      val a_autoplay : unit -> [> `Autoplay ] attrib
      val a_muted : unit -> [> `Muted ] attrib
      val a_crossorigin :
        [< `Anonymous | `Use_credentials ] wrap -> [> `Crossorigin ] attrib
      val a_mediagroup : string wrap -> [> `Mediagroup ] attrib
      val a_challenge : Html_types.text wrap -> [> `Challenge ] attrib
      val a_contenteditable : bool wrap -> [> `Contenteditable ] attrib
      val a_contextmenu : Html_types.idref wrap -> [> `Contextmenu ] attrib
      val a_controls : unit -> [> `Controls ] attrib
      val a_dir : [< `Ltr | `Rtl ] wrap -> [> `Dir ] attrib
      val a_draggable : bool wrap -> [> `Draggable ] attrib
      val a_form : Html_types.idref wrap -> [> `Form ] attrib
      val a_formaction : Xml.uri wrap -> [> `Formaction ] attrib
      val a_formenctype :
        Html_types.contenttype wrap -> [> `Formenctype ] attrib
      val a_formnovalidate : unit -> [> `Formnovalidate ] attrib
      val a_formtarget : Html_types.text wrap -> [> `Formtarget ] attrib
      val a_hidden : unit -> [> `Hidden ] attrib
      val a_high : Html_types.float_number wrap -> [> `High ] attrib
      val a_icon : Xml.uri wrap -> [> `Icon ] attrib
      val a_ismap : unit -> [> `Ismap ] attrib
      val a_keytype : Html_types.text wrap -> [> `Keytype ] attrib
      val a_list : Html_types.idref wrap -> [> `List ] attrib
      val a_loop : unit -> [> `Loop ] attrib
      val a_low : Html_types.float_number wrap -> [> `High ] attrib
      val a_max : Html_types.float_number wrap -> [> `Max ] attrib
      val a_input_max :
        Html_types.number_or_datetime wrap -> [> `Input_Max ] attrib
      val a_min : Html_types.float_number wrap -> [> `Min ] attrib
      val a_input_min :
        Html_types.number_or_datetime wrap -> [> `Input_Min ] attrib
      val a_inputmode :
        [< `Email
         | `Full_width_latin
         | `Kana
         | `Katakana
         | `Latin
         | `Latin_name
         | `Latin_prose
         | `Numeric
         | `Tel
         | `Url
         | `Verbatim ]
        wrap -> [> `Inputmode ] attrib
      val a_novalidate : unit -> [> `Novalidate ] attrib
      val a_open : unit -> [> `Open ] attrib
      val a_optimum : Html_types.float_number wrap -> [> `Optimum ] attrib
      val a_pattern : Html_types.text wrap -> [> `Pattern ] attrib
      val a_placeholder : Html_types.text wrap -> [> `Placeholder ] attrib
      val a_poster : Xml.uri wrap -> [> `Poster ] attrib
      val a_preload :
        [< `Audio | `Metadata | `None ] wrap -> [> `Preload ] attrib
      val a_pubdate : unit -> [> `Pubdate ] attrib
      val a_radiogroup : Html_types.text wrap -> [> `Radiogroup ] attrib
      val a_required : unit -> [> `Required ] attrib
      val a_reversed : unit -> [> `Reversed ] attrib
      val a_sandbox :
        [< Html_types.sandbox_token ] list wrap -> [> `Sandbox ] attrib
      val a_spellcheck : bool wrap -> [> `Spellcheck ] attrib
      val a_scoped : unit -> [> `Scoped ] attrib
      val a_seamless : unit -> [> `Seamless ] attrib
      val a_sizes :
        (Html_types.number * Html_types.number) list option wrap ->
        [> `Sizes ] attrib
      val a_span : Html_types.number wrap -> [> `Span ] attrib
      val a_srclang : Html_types.nmtoken wrap -> [> `XML_lang ] attrib
      type image_candidate =
          [ `Url of uri
          | `Url_pixel of uri * Html_types.float_number
          | `Url_width of uri * Html_types.number ]
      val a_srcset : image_candidate list wrap -> [> `Srcset ] attrib
      val a_img_sizes : Html_types.text list wrap -> [> `Img_sizes ] attrib
      val a_start : Html_types.number wrap -> [> `Start ] attrib
      val a_step : Html_types.float_number option wrap -> [> `Step ] attrib
      val a_wrap : [< `Hard | `Soft ] wrap -> [> `Wrap ] attrib
      val a_version : Html_types.cdata wrap -> [> `Version ] attrib
      val a_xmlns : [< `W3_org_1999_xhtml ] wrap -> [> `XMLns ] attrib
      val a_manifest : Xml.uri wrap -> [> `Manifest ] attrib
      val a_cite : Xml.uri wrap -> [> `Cite ] attrib
      val a_xml_space :
        [< `Default | `Preserve ] wrap -> [> `XML_space ] attrib
      val a_accesskey : Html_types.character wrap -> [> `Accesskey ] attrib
      val a_charset : Html_types.charset wrap -> [> `Charset ] attrib
      val a_accept_charset :
        Html_types.charsets wrap -> [> `Accept_charset ] attrib
      val a_accept : Html_types.contenttypes wrap -> [> `Accept ] attrib
      val a_href : Xml.uri wrap -> [> `Href ] attrib
      val a_hreflang : Html_types.languagecode wrap -> [> `Hreflang ] attrib
      val a_download : string option wrap -> [> `Download ] attrib
      val a_rel : Html_types.linktypes wrap -> [> `Rel ] attrib
      val a_tabindex : Html_types.number wrap -> [> `Tabindex ] attrib
      val a_mime_type : Html_types.contenttype wrap -> [> `Mime_type ] attrib
      val a_datetime : Html_types.cdata wrap -> [> `Datetime ] attrib
      val a_action : Xml.uri wrap -> [> `Action ] attrib
      val a_checked : unit -> [> `Checked ] attrib
      val a_cols : Html_types.number wrap -> [> `Cols ] attrib
      val a_enctype : Html_types.contenttype wrap -> [> `Enctype ] attrib
      val a_label_for : Html_types.idref wrap -> [> `Label_for ] attrib
      val a_for : Html_types.idref wrap -> [> `Label_for ] attrib
      val a_output_for : Html_types.idrefs wrap -> [> `Output_for ] attrib
      val a_for_list : Html_types.idrefs wrap -> [> `Output_for ] attrib
      val a_maxlength : Html_types.number wrap -> [> `Maxlength ] attrib
      val a_method : [< `Get | `Post ] wrap -> [> `Method ] attrib
      val a_formmethod : [< `Get | `Post ] wrap -> [> `Method ] attrib
      val a_multiple : unit -> [> `Multiple ] attrib
      val a_name : Html_types.text wrap -> [> `Name ] attrib
      val a_rows : Html_types.number wrap -> [> `Rows ] attrib
      val a_selected : unit -> [> `Selected ] attrib
      val a_size : Html_types.number wrap -> [> `Size ] attrib
      val a_src : Xml.uri wrap -> [> `Src ] attrib
      val a_input_type :
        [< `Button
         | `Checkbox
         | `Color
         | `Date
         | `Datetime
         | `Datetime_local
         | `Email
         | `File
         | `Hidden
         | `Image
         | `Month
         | `Number
         | `Password
         | `Radio
         | `Range
         | `Reset
         | `Search
         | `Submit
         | `Tel
         | `Text
         | `Time
         | `Url
         | `Week ]
        wrap -> [> `Input_Type ] attrib
      val a_text_value : Html_types.text wrap -> [> `Text_Value ] attrib
      val a_int_value : Html_types.number wrap -> [> `Int_Value ] attrib
      val a_value : Html_types.cdata wrap -> [> `Value ] attrib
      val a_float_value :
        Html_types.float_number wrap -> [> `Float_Value ] attrib
      val a_disabled : unit -> [> `Disabled ] attrib
      val a_readonly : unit -> [> `ReadOnly ] attrib
      val a_button_type :
        [< `Button | `Reset | `Submit ] wrap -> [> `Button_Type ] attrib
      val a_command_type :
        [< `Checkbox | `Command | `Radio ] wrap -> [> `Command_Type ] attrib
      val a_menu_type :
        [< `Context | `Toolbar ] wrap -> [> `Menu_Type ] attrib
      val a_label : Html_types.text wrap -> [> `Label ] attrib
      val a_align :
        [< `Char | `Justify | `Left | `Right ] wrap -> [> `Align ] attrib
      val a_axis : Html_types.cdata wrap -> [> `Axis ] attrib
      val a_colspan : Html_types.number wrap -> [> `Colspan ] attrib
      val a_headers : Html_types.idrefs wrap -> [> `Headers ] attrib
      val a_rowspan : Html_types.number wrap -> [> `Rowspan ] attrib
      val a_scope :
        [< `Col | `Colgroup | `Row | `Rowgroup ] wrap -> [> `Scope ] attrib
      val a_summary : Html_types.text wrap -> [> `Summary ] attrib
      val a_border : Html_types.pixels wrap -> [> `Border ] attrib
      val a_rules :
        [< `All | `Cols | `Groups | `None | `Rows ] wrap ->
        [> `Rules ] attrib
      val a_char : Html_types.character wrap -> [> `Char ] attrib
      val a_alt : Html_types.text wrap -> [> `Alt ] attrib
      val a_height : Html_types.number wrap -> [> `Height ] attrib
      val a_width : Html_types.number wrap -> [> `Width ] attrib
      type shape = [ `Circle | `Default | `Poly | `Rect ]
      val a_shape : shape wrap -> [> `Shape ] attrib
      val a_coords : Html_types.numbers wrap -> [> `Coords ] attrib
      val a_usemap : Html_types.idref wrap -> [> `Usemap ] attrib
      val a_data : Xml.uri wrap -> [> `Data ] attrib
      val a_codetype : Html_types.contenttype wrap -> [> `Codetype ] attrib
      val a_frameborder : [< `One | `Zero ] wrap -> [> `Frameborder ] attrib
      val a_marginheight :
        Html_types.pixels wrap -> [> `Marginheight ] attrib
      val a_marginwidth : Html_types.pixels wrap -> [> `Marginwidth ] attrib
      val a_scrolling :
        [< `Auto | `No | `Yes ] wrap -> [> `Scrolling ] attrib
      val a_target : Html_types.frametarget wrap -> [> `Target ] attrib
      val a_content : Html_types.text wrap -> [> `Content ] attrib
      val a_http_equiv : Html_types.text wrap -> [> `Http_equiv ] attrib
      val a_defer : unit -> [> `Defer ] attrib
      val a_media : Html_types.mediadesc wrap -> [> `Media ] attrib
      val a_style : string wrap -> [> `Style_Attr ] attrib
      val a_property : string wrap -> [> `Property ] attrib
      val pcdata : string wrap -> [> `PCDATA ] elt
      val html :
        ?a:Html_types.html_attrib attrib list ->
        [< `Head ] elt wrap -> [< `Body ] elt wrap -> [> `Html ] elt
      val head :
        ?a:Html_types.head_attrib attrib list ->
        [< `Title ] elt wrap ->
        Html_types.head_content_fun elt list_wrap -> [> Html_types.head ] elt
      val base : ([< Html_types.base_attrib ], [> Html_types.base ]) nullary
      val title :
        (Html_types.title_attrib, [< Html_types.title_content_fun ],
         [> Html_types.title ])
        unary
      val body :
        ([< Html_types.body_attrib ], [< Html_types.body_content_fun ],
         [> Html_types.body ])
        star
      val svg :
        ?a:[< Html_types.svg_attrib ] Svg.F.Raw.attrib list ->
        [< Html_types.svg_content ] Svg.F.Raw.elt list_wrap ->
        [> Html_types.svg ] elt
      val footer :
        ([< Html_types.common ], [< Html_types.flow5_without_header_footer ],
         [> `Footer ])
        star
      val header :
        ([< Html_types.common ], [< Html_types.flow5_without_header_footer ],
         [> `Header ])
        star
      val section :
        ([< Html_types.section_attrib ], [< Html_types.section_content_fun ],
         [> Html_types.section ])
        star
      val nav :
        ([< Html_types.nav_attrib ], [< Html_types.nav_content_fun ],
         [> Html_types.nav ])
        star
      val h1 :
        ([< Html_types.h1_attrib ], [< Html_types.h1_content_fun ],
         [> Html_types.h1 ])
        star
      val h2 :
        ([< Html_types.h2_attrib ], [< Html_types.h2_content_fun ],
         [> Html_types.h2 ])
        star
      val h3 :
        ([< Html_types.h3_attrib ], [< Html_types.h3_content_fun ],
         [> Html_types.h3 ])
        star
      val h4 :
        ([< Html_types.h4_attrib ], [< Html_types.h4_content_fun ],
         [> Html_types.h4 ])
        star
      val h5 :
        ([< Html_types.h5_attrib ], [< Html_types.h5_content_fun ],
         [> Html_types.h5 ])
        star
      val h6 :
        ([< Html_types.h6_attrib ], [< Html_types.h6_content_fun ],
         [> Html_types.h6 ])
        star
      val hgroup :
        ([< Html_types.hgroup_attrib ], [< Html_types.hgroup_content_fun ],
         [> Html_types.hgroup ])
        star
      val address :
        ([< Html_types.address_attrib ], [< Html_types.address_content_fun ],
         [> Html_types.address ])
        star
      val article :
        ([< Html_types.article_attrib ], [< Html_types.article_content_fun ],
         [> Html_types.article ])
        star
      val aside :
        ([< Html_types.aside_attrib ], [< Html_types.aside_content_fun ],
         [> Html_types.aside ])
        star
      val main :
        ([< Html_types.main_attrib ], [< Html_types.main_content_fun ],
         [> Html_types.main ])
        star
      val p :
        ([< Html_types.p_attrib ], [< Html_types.p_content_fun ],
         [> Html_types.p ])
        star
      val pre :
        ([< Html_types.pre_attrib ], [< Html_types.pre_content_fun ],
         [> Html_types.pre ])
        star
      val blockquote :
        ([< Html_types.blockquote_attrib ],
         [< Html_types.blockquote_content_fun ], [> Html_types.blockquote ])
        star
      val div :
        ([< Html_types.div_attrib ], [< Html_types.div_content_fun ],
         [> Html_types.div ])
        star
      val dl :
        ([< Html_types.dl_attrib ], [< Html_types.dl_content_fun ],
         [> Html_types.dl ])
        star
      val ol :
        ([< Html_types.ol_attrib ], [< Html_types.ol_content_fun ],
         [> Html_types.ol ])
        star
      val ul :
        ([< Html_types.ul_attrib ], [< Html_types.ul_content_fun ],
         [> Html_types.ul ])
        star
      val dd :
        ([< Html_types.dd_attrib ], [< Html_types.dd_content_fun ],
         [> Html_types.dd ])
        star
      val dt :
        ([< Html_types.dt_attrib ], [< Html_types.dt_content_fun ],
         [> Html_types.dt ])
        star
      val li :
        ([< Html_types.li_attrib ], [< Html_types.li_content_fun ],
         [> Html_types.li ])
        star
      val figcaption :
        ([< Html_types.figcaption_attrib ],
         [< Html_types.figcaption_content_fun ], [> Html_types.figcaption ])
        star
      val figure :
        ?figcaption:[ `Bottom of [< `Figcaption ] elt wrap
                    | `Top of [< `Figcaption ] elt wrap ] ->
        ([< Html_types.figure_attrib ], [< Html_types.figure_content_fun ],
         [> Html_types.figure ])
        star
      val hr : ([< Html_types.hr_attrib ], [> Html_types.hr ]) nullary
      val b :
        ([< Html_types.b_attrib ], [< Html_types.b_content_fun ],
         [> Html_types.b ])
        star
      val i :
        ([< Html_types.i_attrib ], [< Html_types.i_content_fun ],
         [> Html_types.i ])
        star
      val u :
        ([< Html_types.u_attrib ], [< Html_types.u_content_fun ],
         [> Html_types.u ])
        star
      val small :
        ([< Html_types.small_attrib ], [< Html_types.small_content_fun ],
         [> Html_types.small ])
        star
      val sub :
        ([< Html_types.sub_attrib ], [< Html_types.sub_content_fun ],
         [> Html_types.sub ])
        star
      val sup :
        ([< Html_types.sup_attrib ], [< Html_types.sup_content_fun ],
         [> Html_types.sup ])
        star
      val mark :
        ([< Html_types.mark_attrib ], [< Html_types.mark_content_fun ],
         [> Html_types.mark ])
        star
      val wbr : ([< Html_types.wbr_attrib ], [> Html_types.wbr ]) nullary
      val bdo :
        dir:[< `Ltr | `Rtl ] wrap ->
        ([< Html_types.common ], [< Html_types.phrasing ], [> `Bdo ]) star
      val abbr :
        ([< Html_types.abbr_attrib ], [< Html_types.abbr_content_fun ],
         [> Html_types.abbr ])
        star
      val br : ([< Html_types.br_attrib ], [> Html_types.br ]) nullary
      val cite :
        ([< Html_types.cite_attrib ], [< Html_types.cite_content_fun ],
         [> Html_types.cite ])
        star
      val code :
        ([< Html_types.code_attrib ], [< Html_types.code_content_fun ],
         [> Html_types.code ])
        star
      val dfn :
        ([< Html_types.dfn_attrib ], [< Html_types.dfn_content_fun ],
         [> Html_types.dfn ])
        star
      val em :
        ([< Html_types.em_attrib ], [< Html_types.em_content_fun ],
         [> Html_types.em ])
        star
      val kbd :
        ([< Html_types.kbd_attrib ], [< Html_types.kbd_content_fun ],
         [> Html_types.kbd ])
        star
      val q :
        ([< Html_types.q_attrib ], [< Html_types.q_content_fun ],
         [> Html_types.q ])
        star
      val samp :
        ([< Html_types.samp_attrib ], [< Html_types.samp_content_fun ],
         [> Html_types.samp ])
        star
      val span :
        ([< Html_types.span_attrib ], [< Html_types.span_content_fun ],
         [> Html_types.span ])
        star
      val strong :
        ([< Html_types.strong_attrib ], [< Html_types.strong_content_fun ],
         [> Html_types.strong ])
        star
      val time :
        ([< Html_types.time_attrib ], [< Html_types.time_content_fun ],
         [> Html_types.time ])
        star
      val var :
        ([< Html_types.var_attrib ], [< Html_types.var_content_fun ],
         [> Html_types.var ])
        star
      val del : ([< Html_types.del_attrib ], 'a, [> `Del of 'a ]) star
      val ins : ([< Html_types.ins_attrib ], 'a, [> `Ins of 'a ]) star
      val img :
        src:Xml.uri wrap ->
        alt:Html_types.text wrap ->
        ([< Html_types.img_attrib ], [> Html_types.img ]) nullary
      val iframe :
        ([< `Accesskey
          | `Class
          | `Contenteditable
          | `Contextmenu
          | `Dir
          | `Draggable
          | `Height
          | `Hidden
          | `Id
          | `Lang
          | `Name
          | `OnAbort
          | `OnBlur
          | `OnCanPlay
          | `OnCanPlayThrough
          | `OnChange
          | `OnClick
          | `OnContextMenu
          | `OnDblClick
          | `OnDrag
          | `OnDragEnd
          | `OnDragEnter
          | `OnDragLeave
          | `OnDragOver
          | `OnDragStart
          | `OnDrop
          | `OnDurationChange
          | `OnEmptied
          | `OnEnded
          | `OnError
          | `OnFocus
          | `OnFormChange
          | `OnFormInput
          | `OnInput
          | `OnInvalid
          | `OnKeyDown
          | `OnKeyPress
          | `OnKeyUp
          | `OnLoad
          | `OnLoadStart
          | `OnLoadedData
          | `OnLoadedMetaData
          | `OnMouseDown
          | `OnMouseMove
          | `OnMouseOut
          | `OnMouseOver
          | `OnMouseUp
          | `OnMouseWheel
          | `OnPause
          | `OnPlay
          | `OnPlaying
          | `OnProgress
          | `OnRateChange
          | `OnReadyStateChange
          | `OnScroll
          | `OnSeeked
          | `OnSeeking
          | `OnSelect
          | `OnShow
          | `OnStalled
          | `OnSubmit
          | `OnSuspend
          | `OnTimeUpdate
          | `OnVolumeChange
          | `OnWaiting
          | `Sandbox
          | `Seamless
          | `Spellcheck
          | `Src
          | `Style_Attr
          | `Tabindex
          | `Title
          | `User_data
          | `Width
          | `XML_lang
          | `XMLns ],
         [< `PCDATA ], [> `Iframe ])
        star
      val object_ :
        ?params:[< `Param ] elt list_wrap ->
        ([< `Accesskey
          | `Class
          | `Contenteditable
          | `Contextmenu
          | `Data
          | `Dir
          | `Draggable
          | `Form
          | `Height
          | `Hidden
          | `Id
          | `Lang
          | `Mime_type
          | `Name
          | `OnAbort
          | `OnBlur
          | `OnCanPlay
          | `OnCanPlayThrough
          | `OnChange
          | `OnClick
          | `OnContextMenu
          | `OnDblClick
          | `OnDrag
          | `OnDragEnd
          | `OnDragEnter
          | `OnDragLeave
          | `OnDragOver
          | `OnDragStart
          | `OnDrop
          | `OnDurationChange
          | `OnEmptied
          | `OnEnded
          | `OnError
          | `OnFocus
          | `OnFormChange
          | `OnFormInput
          | `OnInput
          | `OnInvalid
          | `OnKeyDown
          | `OnKeyPress
          | `OnKeyUp
          | `OnLoad
          | `OnLoadStart
          | `OnLoadedData
          | `OnLoadedMetaData
          | `OnMouseDown
          | `OnMouseMove
          | `OnMouseOut
          | `OnMouseOver
          | `OnMouseUp
          | `OnMouseWheel
          | `OnPause
          | `OnPlay
          | `OnPlaying
          | `OnProgress
          | `OnRateChange
          | `OnReadyStateChange
          | `OnScroll
          | `OnSeeked
          | `OnSeeking
          | `OnSelect
          | `OnShow
          | `OnStalled
          | `OnSubmit
          | `OnSuspend
          | `OnTimeUpdate
          | `OnVolumeChange
          | `OnWaiting
          | `Spellcheck
          | `Style_Attr
          | `Tabindex
          | `Title
          | `Usemap
          | `User_data
          | `Width
          | `XML_lang
          | `XMLns ],
         'a, [> `Object of 'a ])
        star
      val param :
        ([< Html_types.param_attrib ], [> Html_types.param ]) nullary
      val embed :
        ([< `Accesskey
          | `Class
          | `Contenteditable
          | `Contextmenu
          | `Dir
          | `Draggable
          | `Height
          | `Hidden
          | `Id
          | `Lang
          | `Mime_type
          | `OnAbort
          | `OnBlur
          | `OnCanPlay
          | `OnCanPlayThrough
          | `OnChange
          | `OnClick
          | `OnContextMenu
          | `OnDblClick
          | `OnDrag
          | `OnDragEnd
          | `OnDragEnter
          | `OnDragLeave
          | `OnDragOver
          | `OnDragStart
          | `OnDrop
          | `OnDurationChange
          | `OnEmptied
          | `OnEnded
          | `OnError
          | `OnFocus
          | `OnFormChange
          | `OnFormInput
          | `OnInput
          | `OnInvalid
          | `OnKeyDown
          | `OnKeyPress
          | `OnKeyUp
          | `OnLoad
          | `OnLoadStart
          | `OnLoadedData
          | `OnLoadedMetaData
          | `OnMouseDown
          | `OnMouseMove
          | `OnMouseOut
          | `OnMouseOver
          | `OnMouseUp
          | `OnMouseWheel
          | `OnPause
          | `OnPlay
          | `OnPlaying
          | `OnProgress
          | `OnRateChange
          | `OnReadyStateChange
          | `OnScroll
          | `OnSeeked
          | `OnSeeking
          | `OnSelect
          | `OnShow
          | `OnStalled
          | `OnSubmit
          | `OnSuspend
          | `OnTimeUpdate
          | `OnVolumeChange
          | `OnWaiting
          | `Spellcheck
          | `Src
          | `Style_Attr
          | `Tabindex
          | `Title
          | `User_data
          | `Width
          | `XML_lang
          | `XMLns ],
         [> `Embed ])
        nullary
      val audio :
        ?src:Xml.uri wrap ->
        ?srcs:[< Html_types.source ] elt list_wrap ->
        ([< Html_types.audio_attrib ], 'a, [> 'a Html_types.audio ]) star
      val video :
        ?src:Xml.uri wrap ->
        ?srcs:[< Html_types.source ] elt list_wrap ->
        ([< Html_types.video_attrib ], 'a, [> 'a Html_types.video ]) star
      val canvas :
        ([< Html_types.canvas_attrib ], 'a, [> 'a Html_types.canvas ]) star
      val source :
        ([< Html_types.source_attrib ], [> Html_types.source ]) nullary
      val area :
        alt:Html_types.text wrap ->
        ([< `Accesskey
          | `Alt
          | `Class
          | `Contenteditable
          | `Contextmenu
          | `Coords
          | `Dir
          | `Draggable
          | `Hidden
          | `Hreflang
          | `Id
          | `Lang
          | `Media
          | `Mime_type
          | `OnAbort
          | `OnBlur
          | `OnCanPlay
          | `OnCanPlayThrough
          | `OnChange
          | `OnClick
          | `OnContextMenu
          | `OnDblClick
          | `OnDrag
          | `OnDragEnd
          | `OnDragEnter
          | `OnDragLeave
          | `OnDragOver
          | `OnDragStart
          | `OnDrop
          | `OnDurationChange
          | `OnEmptied
          | `OnEnded
          | `OnError
          | `OnFocus
          | `OnFormChange
          | `OnFormInput
          | `OnInput
          | `OnInvalid
          | `OnKeyDown
          | `OnKeyPress
          | `OnKeyUp
          | `OnLoad
          | `OnLoadStart
          | `OnLoadedData
          | `OnLoadedMetaData
          | `OnMouseDown
          | `OnMouseMove
          | `OnMouseOut
          | `OnMouseOver
          | `OnMouseUp
          | `OnMouseWheel
          | `OnPause
          | `OnPlay
          | `OnPlaying
          | `OnProgress
          | `OnRateChange
          | `OnReadyStateChange
          | `OnScroll
          | `OnSeeked
          | `OnSeeking
          | `OnSelect
          | `OnShow
          | `OnStalled
          | `OnSubmit
          | `OnSuspend
          | `OnTimeUpdate
          | `OnVolumeChange
          | `OnWaiting
          | `Rel
          | `Shape
          | `Spellcheck
          | `Style_Attr
          | `Tabindex
          | `Target
          | `Title
          | `User_data
          | `XML_lang
          | `XMLns ],
         [> `Area ])
        nullary
      val map : ([< Html_types.map_attrib ], 'a, [> `A of 'a ]) star
      val caption :
        ([< Html_types.caption_attrib ], [< Html_types.caption_content_fun ],
         [> Html_types.caption ])
        star
      val table :
        ?caption:[< Html_types.caption ] elt wrap ->
        ?columns:[< Html_types.colgroup ] elt list_wrap ->
        ?thead:[< Html_types.thead ] elt wrap ->
        ?tfoot:[< Html_types.tfoot ] elt wrap ->
        ([< Html_types.table_attrib ], [< Html_types.table_content_fun ],
         [> Html_types.table ])
        star
      val tablex :
        ?caption:[< Html_types.caption ] elt wrap ->
        ?columns:[< Html_types.colgroup ] elt list_wrap ->
        ?thead:[< Html_types.thead ] elt wrap ->
        ?tfoot:[< Html_types.tfoot ] elt wrap ->
        ([< Html_types.tablex_attrib ], [< Html_types.tablex_content_fun ],
         [> Html_types.tablex ])
        star
      val colgroup :
        ([< Html_types.colgroup_attrib ],
         [< Html_types.colgroup_content_fun ], [> Html_types.colgroup ])
        star
      val col : ([< Html_types.col_attrib ], [> Html_types.col ]) nullary
      val thead :
        ([< Html_types.thead_attrib ], [< Html_types.thead_content_fun ],
         [> Html_types.thead ])
        star
      val tbody :
        ([< Html_types.tbody_attrib ], [< Html_types.tbody_content_fun ],
         [> Html_types.tbody ])
        star
      val tfoot :
        ([< Html_types.tfoot_attrib ], [< Html_types.tfoot_content_fun ],
         [> Html_types.tfoot ])
        star
      val td :
        ([< Html_types.td_attrib ], [< Html_types.td_content_fun ],
         [> Html_types.td ])
        star
      val th :
        ([< Html_types.th_attrib ], [< Html_types.th_content_fun ],
         [> Html_types.th ])
        star
      val tr :
        ([< Html_types.tr_attrib ], [< Html_types.tr_content_fun ],
         [> Html_types.tr ])
        star
      val form :
        ([< Html_types.form_attrib ], [< Html_types.form_content_fun ],
         [> Html_types.form ])
        star
      val fieldset :
        ?legend:[ `Legend ] elt wrap ->
        ([< `Accesskey
          | `Class
          | `Contenteditable
          | `Contextmenu
          | `Dir
          | `Disabled
          | `Draggable
          | `Form
          | `Hidden
          | `Id
          | `Lang
          | `Name
          | `OnAbort
          | `OnBlur
          | `OnCanPlay
          | `OnCanPlayThrough
          | `OnChange
          | `OnClick
          | `OnContextMenu
          | `OnDblClick
          | `OnDrag
          | `OnDragEnd
          | `OnDragEnter
          | `OnDragLeave
          | `OnDragOver
          | `OnDragStart
          | `OnDrop
          | `OnDurationChange
          | `OnEmptied
          | `OnEnded
          | `OnError
          | `OnFocus
          | `OnFormChange
          | `OnFormInput
          | `OnInput
          | `OnInvalid
          | `OnKeyDown
          | `OnKeyPress
          | `OnKeyUp
          | `OnLoad
          | `OnLoadStart
          | `OnLoadedData
          | `OnLoadedMetaData
          | `OnMouseDown
          | `OnMouseMove
          | `OnMouseOut
          | `OnMouseOver
          | `OnMouseUp
          | `OnMouseWheel
          | `OnPause
          | `OnPlay
          | `OnPlaying
          | `OnProgress
          | `OnRateChange
          | `OnReadyStateChange
          | `OnScroll
          | `OnSeeked
          | `OnSeeking
          | `OnSelect
          | `OnShow
          | `OnStalled
          | `OnSubmit
          | `OnSuspend
          | `OnTimeUpdate
          | `OnVolumeChange
          | `OnWaiting
          | `Spellcheck
          | `Style_Attr
          | `Tabindex
          | `Title
          | `User_data
          | `XML_lang
          | `XMLns ],
         [< Html_types.flow5 ], [> `Fieldset ])
        star
      val legend :
        ([< Html_types.legend_attrib ], [< Html_types.legend_content_fun ],
         [> Html_types.legend ])
        star
      val label :
        ([< Html_types.label_attrib ], [< Html_types.label_content_fun ],
         [> Html_types.label ])
        star
      val input :
        ([< Html_types.input_attrib ], [> Html_types.input ]) nullary
      val button :
        ([< Html_types.button_attrib ], [< Html_types.button_content_fun ],
         [> Html_types.button ])
        star
      val select :
        ([< Html_types.select_attrib ], [< Html_types.select_content_fun ],
         [> Html_types.select ])
        star
      val datalist :
        ?children:[< `Options of [< `Option ] elt list_wrap
                   | `Phras of [< Html_types.phrasing ] elt list_wrap ] ->
        ([< Html_types.common ], [> `Datalist ]) nullary
      val optgroup :
        label:Html_types.text wrap ->
        ([< `Accesskey
          | `Class
          | `Contenteditable
          | `Contextmenu
          | `Dir
          | `Disabled
          | `Draggable
          | `Hidden
          | `Id
          | `Label
          | `Lang
          | `OnAbort
          | `OnBlur
          | `OnCanPlay
          | `OnCanPlayThrough
          | `OnChange
          | `OnClick
          | `OnContextMenu
          | `OnDblClick
          | `OnDrag
          | `OnDragEnd
          | `OnDragEnter
          | `OnDragLeave
          | `OnDragOver
          | `OnDragStart
          | `OnDrop
          | `OnDurationChange
          | `OnEmptied
          | `OnEnded
          | `OnError
          | `OnFocus
          | `OnFormChange
          | `OnFormInput
          | `OnInput
          | `OnInvalid
          | `OnKeyDown
          | `OnKeyPress
          | `OnKeyUp
          | `OnLoad
          | `OnLoadStart
          | `OnLoadedData
          | `OnLoadedMetaData
          | `OnMouseDown
          | `OnMouseMove
          | `OnMouseOut
          | `OnMouseOver
          | `OnMouseUp
          | `OnMouseWheel
          | `OnPause
          | `OnPlay
          | `OnPlaying
          | `OnProgress
          | `OnRateChange
          | `OnReadyStateChange
          | `OnScroll
          | `OnSeeked
          | `OnSeeking
          | `OnSelect
          | `OnShow
          | `OnStalled
          | `OnSubmit
          | `OnSuspend
          | `OnTimeUpdate
          | `OnVolumeChange
          | `OnWaiting
          | `Spellcheck
          | `Style_Attr
          | `Tabindex
          | `Title
          | `User_data
          | `XML_lang
          | `XMLns ],
         [< `Option ], [> `Optgroup ])
        star
      val option :
        ([< Html_types.option_attrib ], [< Html_types.option_content_fun ],
         [> Html_types.selectoption ])
        unary
      val textarea :
        ([< Html_types.textarea_attrib ],
         [< Html_types.textarea_content_fun ], [> Html_types.textarea ])
        unary
      val keygen :
        ([< Html_types.keygen_attrib ], [> Html_types.keygen ]) nullary
      val progress :
        ([< Html_types.progress_attrib ],
         [< Html_types.progress_content_fun ], [> Html_types.progress ])
        star
      val meter :
        ([< Html_types.meter_attrib ], [< Html_types.meter_content_fun ],
         [> Html_types.meter ])
        star
      val output_elt :
        ([< Html_types.output_elt_attrib ],
         [< Html_types.output_elt_content_fun ], [> Html_types.output_elt ])
        star
      val entity : string -> [> `PCDATA ] elt
      val space : unit -> [> `PCDATA ] elt
      val cdata : string -> [> `PCDATA ] elt
      val cdata_script : string -> [> `PCDATA ] elt
      val cdata_style : string -> [> `PCDATA ] elt
      val details :
        [< `Summary ] elt wrap ->
        ([< `Accesskey
          | `Class
          | `Contenteditable
          | `Contextmenu
          | `Dir
          | `Draggable
          | `Hidden
          | `Id
          | `Lang
          | `OnAbort
          | `OnBlur
          | `OnCanPlay
          | `OnCanPlayThrough
          | `OnChange
          | `OnClick
          | `OnContextMenu
          | `OnDblClick
          | `OnDrag
          | `OnDragEnd
          | `OnDragEnter
          | `OnDragLeave
          | `OnDragOver
          | `OnDragStart
          | `OnDrop
          | `OnDurationChange
          | `OnEmptied
          | `OnEnded
          | `OnError
          | `OnFocus
          | `OnFormChange
          | `OnFormInput
          | `OnInput
          | `OnInvalid
          | `OnKeyDown
          | `OnKeyPress
          | `OnKeyUp
          | `OnLoad
          | `OnLoadStart
          | `OnLoadedData
          | `OnLoadedMetaData
          | `OnMouseDown
          | `OnMouseMove
          | `OnMouseOut
          | `OnMouseOver
          | `OnMouseUp
          | `OnMouseWheel
          | `OnPause
          | `OnPlay
          | `OnPlaying
          | `OnProgress
          | `OnRateChange
          | `OnReadyStateChange
          | `OnScroll
          | `OnSeeked
          | `OnSeeking
          | `OnSelect
          | `OnShow
          | `OnStalled
          | `OnSubmit
          | `OnSuspend
          | `OnTimeUpdate
          | `OnVolumeChange
          | `OnWaiting
          | `Open
          | `Spellcheck
          | `Style_Attr
          | `Tabindex
          | `Title
          | `User_data
          | `XML_lang
          | `XMLns ],
         [< Html_types.flow5 ], [> `Details ])
        star
      val summary :
        ([< Html_types.summary_attrib ], [< Html_types.summary_content_fun ],
         [> Html_types.summary ])
        star
      val command :
        label:Html_types.text wrap ->
        ([< `Accesskey
          | `Checked
          | `Class
          | `Command_Type
          | `Contenteditable
          | `Contextmenu
          | `Dir
          | `Disabled
          | `Draggable
          | `Hidden
          | `Icon
          | `Id
          | `Lang
          | `OnAbort
          | `OnBlur
          | `OnCanPlay
          | `OnCanPlayThrough
          | `OnChange
          | `OnClick
          | `OnContextMenu
          | `OnDblClick
          | `OnDrag
          | `OnDragEnd
          | `OnDragEnter
          | `OnDragLeave
          | `OnDragOver
          | `OnDragStart
          | `OnDrop
          | `OnDurationChange
          | `OnEmptied
          | `OnEnded
          | `OnError
          | `OnFocus
          | `OnFormChange
          | `OnFormInput
          | `OnInput
          | `OnInvalid
          | `OnKeyDown
          | `OnKeyPress
          | `OnKeyUp
          | `OnLoad
          | `OnLoadStart
          | `OnLoadedData
          | `OnLoadedMetaData
          | `OnMouseDown
          | `OnMouseMove
          | `OnMouseOut
          | `OnMouseOver
          | `OnMouseUp
          | `OnMouseWheel
          | `OnPause
          | `OnPlay
          | `OnPlaying
          | `OnProgress
          | `OnRateChange
          | `OnReadyStateChange
          | `OnScroll
          | `OnSeeked
          | `OnSeeking
          | `OnSelect
          | `OnShow
          | `OnStalled
          | `OnSubmit
          | `OnSuspend
          | `OnTimeUpdate
          | `OnVolumeChange
          | `OnWaiting
          | `Radiogroup
          | `Spellcheck
          | `Style_Attr
          | `Tabindex
          | `Title
          | `User_data
          | `XML_lang
          | `XMLns ],
         [> `Command ])
        nullary
      val menu :
        ?children:[< `Flows of [< Html_types.flow5 ] elt list_wrap
                   | `Lis of [< `Li of [< Html_types.common ] ] elt list_wrap ] ->
        ([< `Accesskey
          | `Class
          | `Contenteditable
          | `Contextmenu
          | `Dir
          | `Draggable
          | `Hidden
          | `Id
          | `Label
          | `Lang
          | `Menu_Type
          | `OnAbort
          | `OnBlur
          | `OnCanPlay
          | `OnCanPlayThrough
          | `OnChange
          | `OnClick
          | `OnContextMenu
          | `OnDblClick
          | `OnDrag
          | `OnDragEnd
          | `OnDragEnter
          | `OnDragLeave
          | `OnDragOver
          | `OnDragStart
          | `OnDrop
          | `OnDurationChange
          | `OnEmptied
          | `OnEnded
          | `OnError
          | `OnFocus
          | `OnFormChange
          | `OnFormInput
          | `OnInput
          | `OnInvalid
          | `OnKeyDown
          | `OnKeyPress
          | `OnKeyUp
          | `OnLoad
          | `OnLoadStart
          | `OnLoadedData
          | `OnLoadedMetaData
          | `OnMouseDown
          | `OnMouseMove
          | `OnMouseOut
          | `OnMouseOver
          | `OnMouseUp
          | `OnMouseWheel
          | `OnPause
          | `OnPlay
          | `OnPlaying
          | `OnProgress
          | `OnRateChange
          | `OnReadyStateChange
          | `OnScroll
          | `OnSeeked
          | `OnSeeking
          | `OnSelect
          | `OnShow
          | `OnStalled
          | `OnSubmit
          | `OnSuspend
          | `OnTimeUpdate
          | `OnVolumeChange
          | `OnWaiting
          | `Spellcheck
          | `Style_Attr
          | `Tabindex
          | `Title
          | `User_data
          | `XML_lang
          | `XMLns ],
         [> `Menu ])
        nullary
      val script :
        ([< Html_types.script_attrib ], [< Html_types.script_content_fun ],
         [> Html_types.script ])
        unary
      val noscript :
        ([< Html_types.noscript_attrib ],
         [< Html_types.noscript_content_fun ], [> Html_types.noscript ])
        star
      val meta : ([< Html_types.meta_attrib ], [> Html_types.meta ]) nullary
      val style :
        ([< Html_types.style_attrib ], [< Html_types.style_content_fun ],
         [> Html_types.style ])
        star
      val link :
        rel:Html_types.linktypes wrap ->
        href:Xml.uri wrap ->
        ([< `Accesskey
          | `Class
          | `Contenteditable
          | `Contextmenu
          | `Dir
          | `Draggable
          | `Hidden
          | `Href
          | `Hreflang
          | `Id
          | `Lang
          | `Media
          | `Mime_type
          | `OnAbort
          | `OnBlur
          | `OnCanPlay
          | `OnCanPlayThrough
          | `OnChange
          | `OnClick
          | `OnContextMenu
          | `OnDblClick
          | `OnDrag
          | `OnDragEnd
          | `OnDragEnter
          | `OnDragLeave
          | `OnDragOver
          | `OnDragStart
          | `OnDrop
          | `OnDurationChange
          | `OnEmptied
          | `OnEnded
          | `OnError
          | `OnFocus
          | `OnFormChange
          | `OnFormInput
          | `OnInput
          | `OnInvalid
          | `OnKeyDown
          | `OnKeyPress
          | `OnKeyUp
          | `OnLoad
          | `OnLoadStart
          | `OnLoadedData
          | `OnLoadedMetaData
          | `OnMouseDown
          | `OnMouseMove
          | `OnMouseOut
          | `OnMouseOver
          | `OnMouseUp
          | `OnMouseWheel
          | `OnPause
          | `OnPlay
          | `OnPlaying
          | `OnProgress
          | `OnRateChange
          | `OnReadyStateChange
          | `OnScroll
          | `OnSeeked
          | `OnSeeking
          | `OnSelect
          | `OnShow
          | `OnStalled
          | `OnSubmit
          | `OnSuspend
          | `OnTimeUpdate
          | `OnVolumeChange
          | `OnWaiting
          | `Rel
          | `Sizes
          | `Spellcheck
          | `Style_Attr
          | `Tabindex
          | `Title
          | `User_data
          | `XML_lang
          | `XMLns ],
         [> `Link ])
        nullary
      val rt :
        ([< Html_types.rt_attrib ], [< Html_types.rt_content_fun ],
         [> Html_types.rt ])
        star
      val rp :
        ([< Html_types.rp_attrib ], [< Html_types.rp_content_fun ],
         [> Html_types.rp ])
        star
      val ruby :
        ([< Html_types.ruby_attrib ], [< Html_types.ruby_content_fun ],
         [> Html_types.ruby ])
        star
      val tot : Xml.elt -> 'a elt
      val totl : Xml.elt list_wrap -> 'a elt list_wrap
      val toelt : 'a elt -> Xml.elt
      val toeltl : 'a elt list_wrap -> Xml.elt list_wrap
      val doc_toelt : doc -> Xml.elt
      val to_xmlattribs : 'a attrib list -> Xml.attrib list
      val to_attrib : Xml.attrib -> 'a attrib
      module Unsafe :
        sig
          val data : string wrap -> 'a elt
          val node :
            string -> ?a:'a attrib list -> 'b elt list_wrap -> 'c elt
          val leaf : string -> ?a:'a attrib list -> unit -> 'b elt
          val coerce_elt : 'a elt -> 'b elt
          val string_attrib : string -> string wrap -> 'a attrib
          val float_attrib : string -> float wrap -> 'a attrib
          val int_attrib : string -> int wrap -> 'a attrib
          val uri_attrib : string -> uri wrap -> 'a attrib
          val space_sep_attrib : string -> string list wrap -> 'a attrib
          val comma_sep_attrib : string -> string list wrap -> 'a attrib
        end
      type ('a, 'b, 'c) lazy_star =
          ?a:'a attrib list -> 'b elt list Eliom_lazy.request -> 'c elt
      val lazy_form :
        ([< Html_types.form_attrib ], [< Html_types.form_content_fun ],
         [> Html_types.form ])
        lazy_star
      val make_uri :
        ?absolute:bool ->
        ?absolute_path:bool ->
        ?https:bool ->
        service:('get, unit, Eliom_service.get, 'a, 'b, 'c, 'd,
                 [< `WithSuffix | `WithoutSuffix ], 'e, unit, 'f)
                Eliom_service.t ->
        ?hostname:string ->
        ?port:int ->
        ?fragment:string ->
        ?keep_nl_params:[ `All | `None | `Persistent ] ->
        ?nl_params:Eliom_parameter.nl_params_set -> 'get -> uri
      val uri_of_string : (unit -> string) -> uri
      val css_link :
        ?a:[< Html_types.link_attrib ] attrib list ->
        uri:uri -> unit -> [> Html_types.link ] elt
      val js_script :
        ?a:[< Html_types.script_attrib ] attrib list ->
        uri:uri -> unit -> [> Html_types.script ] elt
      val a :
        ?absolute:bool ->
        ?absolute_path:bool ->
        ?https:bool ->
        ?a:[< Html_types.a_attrib ] attrib list ->
        service:('get, unit, Eliom_service.get, 'b, 'c, 'd, 'e,
                 [< `WithSuffix | `WithoutSuffix ], 'f, unit,
                 Eliom_service.non_ocaml)
                Eliom_service.t ->
        ?hostname:string ->
        ?port:int ->
        ?fragment:string ->
        ?keep_nl_params:[ `All | `None | `Persistent ] ->
        ?nl_params:Eliom_parameter.nl_params_set ->
        ?xhr:bool -> 'a elt list -> 'get -> [> 'a Html_types.a ] elt
      module Form :
        sig
          type 'a param = 'a form_param
          val float : float param
          val int : int param
          val int32 : int32 param
          val int64 : int64 param
          val nativeint : nativeint param
          val bool : bool param
          val string : string param
          val user : ('a -> string) -> 'a param
          val make_post_uri_components :
            ?absolute:bool ->
            ?absolute_path:bool ->
            ?https:bool ->
            service:('get, 'post, Eliom_service.post, 'a, 'b, 'c, 'd,
                     [< `WithSuffix | `WithoutSuffix ], 'e, 'f, 'g)
                    Eliom_service.t ->
            ?hostname:string ->
            ?port:int ->
            ?fragment:string ->
            ?keep_nl_params:[ `All | `None | `Persistent ] ->
            ?nl_params:Eliom_parameter.nl_params_set ->
            ?keep_get_na_params:bool ->
            'get ->
            'post ->
            string * (string * Eliommod_parameters.param) list *
            string option * (string * Eliommod_parameters.param) list
          val get_form :
            ?absolute:bool ->
            ?absolute_path:bool ->
            ?https:bool ->
            ?a:[< Html_types.form_attrib ] attrib list ->
            service:('a, unit, Eliom_service.get, 'b, 'c, 'd, 'e,
                     [< `WithSuffix | `WithoutSuffix ], 'gn, 'f,
                     Eliom_service.non_ocaml)
                    Eliom_service.t ->
            ?hostname:string ->
            ?port:int ->
            ?fragment:string ->
            ?keep_nl_params:[ `All | `None | `Persistent ] ->
            ?nl_params:Eliom_parameter.nl_params_set ->
            ?xhr:bool ->
            ('gn -> [< Html_types.form_content ] elt list) ->
            [> Html_types.form ] elt
          val lwt_get_form :
            ?absolute:bool ->
            ?absolute_path:bool ->
            ?https:bool ->
            ?a:[< Html_types.form_attrib ] attrib list ->
            service:('a, unit, Eliom_service.get, 'b, 'c, 'd, 'e,
                     [< `WithSuffix | `WithoutSuffix ], 'gn, 'f,
                     Eliom_service.non_ocaml)
                    Eliom_service.t ->
            ?hostname:string ->
            ?port:int ->
            ?fragment:string ->
            ?keep_nl_params:[ `All | `None | `Persistent ] ->
            ?nl_params:Eliom_parameter.nl_params_set ->
            ?xhr:bool ->
            ('gn -> [< Html_types.form_content ] elt list Lwt.t) ->
            [> Html_types.form ] elt Lwt.t
          val post_form :
            ?absolute:bool ->
            ?absolute_path:bool ->
            ?https:bool ->
            ?a:[< Html_types.form_attrib ] attrib list ->
            service:('get, 'a, Eliom_service.post, 'b, 'c, 'd, 'e,
                     [< `WithSuffix | `WithoutSuffix ], 'f, 'pn,
                     Eliom_service.non_ocaml)
                    Eliom_service.t ->
            ?hostname:string ->
            ?port:int ->
            ?fragment:string ->
            ?keep_nl_params:[ `All | `None | `Persistent ] ->
            ?keep_get_na_params:bool ->
            ?nl_params:Eliom_parameter.nl_params_set ->
            ?xhr:bool ->
            ('pn -> [< Html_types.form_content ] elt list) ->
            'get -> [> Html_types.form ] elt
          val lwt_post_form :
            ?absolute:bool ->
            ?absolute_path:bool ->
            ?https:bool ->
            ?a:[< Html_types.form_attrib ] attrib list ->
            service:('get, 'a, Eliom_service.post, 'b, 'c, 'd, 'e,
                     [< `WithSuffix | `WithoutSuffix ], 'f, 'pn,
                     Eliom_service.non_ocaml)
                    Eliom_service.t ->
            ?hostname:string ->
            ?port:int ->
            ?fragment:string ->
            ?keep_nl_params:[ `All | `None | `Persistent ] ->
            ?keep_get_na_params:bool ->
            ?nl_params:Eliom_parameter.nl_params_set ->
            ?xhr:bool ->
            ('pn -> [< Html_types.form_content ] elt list Lwt.t) ->
            'get -> [> Html_types.form ] elt Lwt.t
          val input :
            ?a:[< Html_types.input_attrib ] attrib list ->
            input_type:[< Html_types.input_type ] ->
            ?name:[< 'a Eliom_parameter.setoneradio ]
                  Eliom_parameter.param_name ->
            ?value:'a -> 'a param -> [> Html_types.input ] elt
          val file_input :
            ?a:[< Html_types.input_attrib ] attrib list ->
            name:[< Eliom_lib.file_info Eliom_parameter.setoneradio ]
                 Eliom_parameter.param_name ->
            unit -> [> Html_types.input ] elt
          val image_input :
            ?a:[< Html_types.input_attrib ] attrib list ->
            name:[< Eliom_parameter.coordinates Eliom_parameter.oneradio ]
                 Eliom_parameter.param_name ->
            ?src:uri -> unit -> [> Html_types.input ] elt
          val checkbox :
            ?a:[< Html_types.input_attrib ] attrib list ->
            ?checked:bool ->
            name:[ `Set of 'a ] Eliom_parameter.param_name ->
            value:'a -> 'a param -> [> Html_types.input ] elt
          val bool_checkbox_one :
            ?a:[< Html_types.input_attrib ] attrib list ->
            ?checked:bool ->
            name:[ `One of bool ] Eliom_parameter.param_name ->
            unit -> [> Html_types.input ] elt
          val radio :
            ?a:[< Html_types.input_attrib ] attrib list ->
            ?checked:bool ->
            name:[ `Radio of 'a ] Eliom_parameter.param_name ->
            value:'a -> 'a param -> [> Html_types.input ] elt
          val string_radio_required :
            ?a:[< Html_types.input_attrib ] attrib list ->
            ?checked:bool ->
            name:[ `One of string ] Eliom_parameter.param_name ->
            value:string -> unit -> [> Html_types.input ] elt
          val button :
            ?a:[< Html_types.button_attrib ] attrib list ->
            button_type:[< Eliom_form_sigs.button_type ] ->
            name:[< 'a Eliom_parameter.setone ] Eliom_parameter.param_name ->
            value:'a ->
            'a param ->
            Html_types.button_content elt list -> [> Html_types.button ] elt
          val button_no_value :
            ?a:[< Html_types.button_attrib ] attrib list ->
            button_type:[< Eliom_form_sigs.button_type ] ->
            Html_types.button_content elt list -> [> Html_types.button ] elt
          val textarea :
            ?a:[< Html_types.textarea_attrib ] attrib list ->
            name:[< string Eliom_parameter.setoneradio ]
                 Eliom_parameter.param_name ->
            ?value:string -> unit -> [> Html_types.textarea ] elt
          type 'a soption =
              Html_types.option_attrib attrib list * 'a *
              Html_types.pcdata elt option * bool
          type 'a select_opt =
              Optgroup of
                [ `Accesskey
                | `Class
                | `Contenteditable
                | `Contextmenu
                | `Dir
                | `Disabled
                | `Draggable
                | `Hidden
                | `Id
                | `Lang
                | `OnAbort
                | `OnBlur
                | `OnCanPlay
                | `OnCanPlayThrough
                | `OnChange
                | `OnClick
                | `OnContextMenu
                | `OnDblClick
                | `OnDrag
                | `OnDragEnd
                | `OnDragEnter
                | `OnDragLeave
                | `OnDragOver
                | `OnDragStart
                | `OnDrop
                | `OnDurationChange
                | `OnEmptied
                | `OnEnded
                | `OnError
                | `OnFocus
                | `OnFormChange
                | `OnFormInput
                | `OnInput
                | `OnInvalid
                | `OnKeyDown
                | `OnKeyPress
                | `OnKeyUp
                | `OnLoad
                | `OnLoadStart
                | `OnLoadedData
                | `OnLoadedMetaData
                | `OnMouseDown
                | `OnMouseMove
                | `OnMouseOut
                | `OnMouseOver
                | `OnMouseUp
                | `OnMouseWheel
                | `OnPause
                | `OnPlay
                | `OnPlaying
                | `OnProgress
                | `OnRateChange
                | `OnReadyStateChange
                | `OnScroll
                | `OnSeeked
                | `OnSeeking
                | `OnSelect
                | `OnShow
                | `OnStalled
                | `OnSubmit
                | `OnSuspend
                | `OnTimeUpdate
                | `OnVolumeChange
                | `OnWaiting
                | `Spellcheck
                | `Style_Attr
                | `Tabindex
                | `Title
                | `User_data
                | `XML_lang
                | `XMLns ] attrib list * string * 'a soption *
                'a soption list
            | Option of 'a soption
          val select :
            ?a:[< Html_types.select_attrib ] attrib list ->
            ?required:Html_types.pcdata elt ->
            name:[ `One of 'a ] Eliom_parameter.param_name ->
            'a param ->
            'a select_opt -> 'a select_opt list -> [> Html_types.select ] elt
          val multiple_select :
            ?a:[< Html_types.select_attrib ] attrib list ->
            ?required:Html_types.pcdata elt ->
            name:[ `Set of 'a ] Eliom_parameter.param_name ->
            'a param ->
            'a select_opt -> 'a select_opt list -> [> Html_types.select ] elt
        end
    end
  module D :
    sig
      module Raw :
        sig
          type 'a elt = 'a elt
          type doc = [ `Html ] elt
          type 'a attrib = 'a attrib
          module Xml :
            sig
              module W :
                sig
                  type 'a t = 'a Xml.W.t
                  val return : 'a -> 'a t
                  type ('a, 'b) ft = ('a, 'b) Xml.W.ft
                  val fmap : ('a, 'b) ft -> 'a t -> 'b t
                  type 'a tlist = 'a Xml.W.tlist
                  val nil : unit -> 'a tlist
                  val singleton : 'a t -> 'a tlist
                  val cons : 'a t -> 'a tlist -> 'a tlist
                  val append : 'a tlist -> 'a tlist -> 'a tlist
                  val map : ('a, 'b) ft -> 'a tlist -> 'b tlist
                end
              type 'a wrap = 'a W.t
              type 'a list_wrap = 'a W.tlist
              type uri = Xml.uri
              val string_of_uri : (uri, string) W.ft
              val uri_of_string : (string, uri) W.ft
              type aname = string
              type event_handler = Xml.event_handler
              type mouse_event_handler = Xml.mouse_event_handler
              type keyboard_event_handler = Xml.keyboard_event_handler
              type attrib = Xml.attrib
              val float_attrib : aname -> float wrap -> attrib
              val int_attrib : aname -> int wrap -> attrib
              val string_attrib : aname -> string wrap -> attrib
              val space_sep_attrib : aname -> string list wrap -> attrib
              val comma_sep_attrib : aname -> string list wrap -> attrib
              val event_handler_attrib : aname -> event_handler -> attrib
              val mouse_event_handler_attrib :
                aname -> mouse_event_handler -> attrib
              val keyboard_event_handler_attrib :
                aname -> keyboard_event_handler -> attrib
              val uri_attrib : aname -> uri wrap -> attrib
              val uris_attrib : aname -> uri list wrap -> attrib
              type elt = Xml.elt
              type ename = string
              val empty : unit -> elt
              val comment : string -> elt
              val pcdata : string wrap -> elt
              val encodedpcdata : string wrap -> elt
              val entity : string -> elt
              val leaf : ?a:attrib list -> ename -> elt
              val node : ?a:attrib list -> ename -> elt list_wrap -> elt
              val cdata : string -> elt
              val cdata_script : string -> elt
              val cdata_style : string -> elt
            end
          type 'a wrap = 'a Xml.W.t
          type 'a list_wrap = 'a Xml.W.tlist
          type ('a, 'b) nullary = ?a:'a attrib list -> unit -> 'b elt
          type ('a, 'b, 'c) unary =
              ?a:'a attrib list -> 'b elt wrap -> 'c elt
          type ('a, 'b, 'c) star =
              ?a:'a attrib list -> 'b elt list_wrap -> 'c elt
          module Info : Xml_sigs.Info
          type uri = Xml.uri
          val string_of_uri : (uri, string) Xml.W.ft
          val uri_of_string : (string, uri) Xml.W.ft
          val a_class : Html_types.nmtokens wrap -> [> `Class ] attrib
          val a_user_data :
            Html_types.nmtoken ->
            Html_types.text wrap -> [> `User_data ] attrib
          val a_id : Html_types.text wrap -> [> `Id ] attrib
          val a_title : Html_types.text wrap -> [> `Title ] attrib
          val a_xml_lang :
            Html_types.languagecode wrap -> [> `XML_lang ] attrib
          val a_lang : Html_types.languagecode wrap -> [> `Lang ] attrib
          val a_onabort : Xml.event_handler -> [> `OnAbort ] attrib
          val a_onafterprint : Xml.event_handler -> [> `OnAfterPrint ] attrib
          val a_onbeforeprint :
            Xml.event_handler -> [> `OnBeforePrint ] attrib
          val a_onbeforeunload :
            Xml.event_handler -> [> `OnBeforeUnload ] attrib
          val a_onblur : Xml.event_handler -> [> `OnBlur ] attrib
          val a_oncanplay : Xml.event_handler -> [> `OnCanPlay ] attrib
          val a_oncanplaythrough :
            Xml.event_handler -> [> `OnCanPlayThrough ] attrib
          val a_onchange : Xml.event_handler -> [> `OnChange ] attrib
          val a_ondurationchange :
            Xml.event_handler -> [> `OnDurationChange ] attrib
          val a_onemptied : Xml.event_handler -> [> `OnEmptied ] attrib
          val a_onended : Xml.event_handler -> [> `OnEnded ] attrib
          val a_onerror : Xml.event_handler -> [> `OnError ] attrib
          val a_onfocus : Xml.event_handler -> [> `OnFocus ] attrib
          val a_onformchange : Xml.event_handler -> [> `OnFormChange ] attrib
          val a_onforminput : Xml.event_handler -> [> `OnFormInput ] attrib
          val a_onhashchange : Xml.event_handler -> [> `OnHashChange ] attrib
          val a_oninput : Xml.event_handler -> [> `OnInput ] attrib
          val a_oninvalid : Xml.event_handler -> [> `OnInvalid ] attrib
          val a_onmousewheel : Xml.event_handler -> [> `OnMouseWheel ] attrib
          val a_onoffline : Xml.event_handler -> [> `OnOffLine ] attrib
          val a_ononline : Xml.event_handler -> [> `OnOnLine ] attrib
          val a_onpause : Xml.event_handler -> [> `OnPause ] attrib
          val a_onplay : Xml.event_handler -> [> `OnPlay ] attrib
          val a_onplaying : Xml.event_handler -> [> `OnPlaying ] attrib
          val a_onpagehide : Xml.event_handler -> [> `OnPageHide ] attrib
          val a_onpageshow : Xml.event_handler -> [> `OnPageShow ] attrib
          val a_onpopstate : Xml.event_handler -> [> `OnPopState ] attrib
          val a_onprogress : Xml.event_handler -> [> `OnProgress ] attrib
          val a_onratechange : Xml.event_handler -> [> `OnRateChange ] attrib
          val a_onreadystatechange :
            Xml.event_handler -> [> `OnReadyStateChange ] attrib
          val a_onredo : Xml.event_handler -> [> `OnRedo ] attrib
          val a_onresize : Xml.event_handler -> [> `OnResize ] attrib
          val a_onscroll : Xml.event_handler -> [> `OnScroll ] attrib
          val a_onseeked : Xml.event_handler -> [> `OnSeeked ] attrib
          val a_onseeking : Xml.event_handler -> [> `OnSeeking ] attrib
          val a_onselect : Xml.event_handler -> [> `OnSelect ] attrib
          val a_onshow : Xml.event_handler -> [> `OnShow ] attrib
          val a_onstalled : Xml.event_handler -> [> `OnStalled ] attrib
          val a_onstorage : Xml.event_handler -> [> `OnStorage ] attrib
          val a_onsubmit : Xml.event_handler -> [> `OnSubmit ] attrib
          val a_onsuspend : Xml.event_handler -> [> `OnSuspend ] attrib
          val a_ontimeupdate : Xml.event_handler -> [> `OnTimeUpdate ] attrib
          val a_onundo : Xml.event_handler -> [> `OnUndo ] attrib
          val a_onunload : Xml.event_handler -> [> `OnUnload ] attrib
          val a_onvolumechange :
            Xml.event_handler -> [> `OnVolumeChange ] attrib
          val a_onwaiting : Xml.event_handler -> [> `OnWaiting ] attrib
          val a_onload : Xml.event_handler -> [> `OnLoad ] attrib
          val a_onloadeddata : Xml.event_handler -> [> `OnLoadedData ] attrib
          val a_onloadedmetadata :
            Xml.event_handler -> [> `OnLoadedMetaData ] attrib
          val a_onloadstart : Xml.event_handler -> [> `OnLoadStart ] attrib
          val a_onmessage : Xml.event_handler -> [> `OnMessage ] attrib
          val a_onclick : Xml.mouse_event_handler -> [> `OnClick ] attrib
          val a_oncontextmenu :
            Xml.mouse_event_handler -> [> `OnContextMenu ] attrib
          val a_ondblclick :
            Xml.mouse_event_handler -> [> `OnDblClick ] attrib
          val a_ondrag : Xml.mouse_event_handler -> [> `OnDrag ] attrib
          val a_ondragend : Xml.mouse_event_handler -> [> `OnDragEnd ] attrib
          val a_ondragenter :
            Xml.mouse_event_handler -> [> `OnDragEnter ] attrib
          val a_ondragleave :
            Xml.mouse_event_handler -> [> `OnDragLeave ] attrib
          val a_ondragover :
            Xml.mouse_event_handler -> [> `OnDragOver ] attrib
          val a_ondragstart :
            Xml.mouse_event_handler -> [> `OnDragStart ] attrib
          val a_ondrop : Xml.mouse_event_handler -> [> `OnDrop ] attrib
          val a_onmousedown :
            Xml.mouse_event_handler -> [> `OnMouseDown ] attrib
          val a_onmouseup : Xml.mouse_event_handler -> [> `OnMouseUp ] attrib
          val a_onmouseover :
            Xml.mouse_event_handler -> [> `OnMouseOver ] attrib
          val a_onmousemove :
            Xml.mouse_event_handler -> [> `OnMouseMove ] attrib
          val a_onmouseout :
            Xml.mouse_event_handler -> [> `OnMouseOut ] attrib
          val a_onkeypress :
            Xml.keyboard_event_handler -> [> `OnKeyPress ] attrib
          val a_onkeydown :
            Xml.keyboard_event_handler -> [> `OnKeyDown ] attrib
          val a_onkeyup : Xml.keyboard_event_handler -> [> `OnKeyUp ] attrib
          val a_autocomplete : bool wrap -> [> `Autocomplete ] attrib
          val a_async : unit -> [> `Async ] attrib
          val a_autofocus : unit -> [> `Autofocus ] attrib
          val a_autoplay : unit -> [> `Autoplay ] attrib
          val a_muted : unit -> [> `Muted ] attrib
          val a_crossorigin :
            [< `Anonymous | `Use_credentials ] wrap ->
            [> `Crossorigin ] attrib
          val a_mediagroup : string wrap -> [> `Mediagroup ] attrib
          val a_challenge : Html_types.text wrap -> [> `Challenge ] attrib
          val a_contenteditable : bool wrap -> [> `Contenteditable ] attrib
          val a_contextmenu :
            Html_types.idref wrap -> [> `Contextmenu ] attrib
          val a_controls : unit -> [> `Controls ] attrib
          val a_dir : [< `Ltr | `Rtl ] wrap -> [> `Dir ] attrib
          val a_draggable : bool wrap -> [> `Draggable ] attrib
          val a_form : Html_types.idref wrap -> [> `Form ] attrib
          val a_formaction : Xml.uri wrap -> [> `Formaction ] attrib
          val a_formenctype :
            Html_types.contenttype wrap -> [> `Formenctype ] attrib
          val a_formnovalidate : unit -> [> `Formnovalidate ] attrib
          val a_formtarget : Html_types.text wrap -> [> `Formtarget ] attrib
          val a_hidden : unit -> [> `Hidden ] attrib
          val a_high : Html_types.float_number wrap -> [> `High ] attrib
          val a_icon : Xml.uri wrap -> [> `Icon ] attrib
          val a_ismap : unit -> [> `Ismap ] attrib
          val a_keytype : Html_types.text wrap -> [> `Keytype ] attrib
          val a_list : Html_types.idref wrap -> [> `List ] attrib
          val a_loop : unit -> [> `Loop ] attrib
          val a_low : Html_types.float_number wrap -> [> `High ] attrib
          val a_max : Html_types.float_number wrap -> [> `Max ] attrib
          val a_input_max :
            Html_types.number_or_datetime wrap -> [> `Input_Max ] attrib
          val a_min : Html_types.float_number wrap -> [> `Min ] attrib
          val a_input_min :
            Html_types.number_or_datetime wrap -> [> `Input_Min ] attrib
          val a_inputmode :
            [< `Email
             | `Full_width_latin
             | `Kana
             | `Katakana
             | `Latin
             | `Latin_name
             | `Latin_prose
             | `Numeric
             | `Tel
             | `Url
             | `Verbatim ]
            wrap -> [> `Inputmode ] attrib
          val a_novalidate : unit -> [> `Novalidate ] attrib
          val a_open : unit -> [> `Open ] attrib
          val a_optimum :
            Html_types.float_number wrap -> [> `Optimum ] attrib
          val a_pattern : Html_types.text wrap -> [> `Pattern ] attrib
          val a_placeholder :
            Html_types.text wrap -> [> `Placeholder ] attrib
          val a_poster : Xml.uri wrap -> [> `Poster ] attrib
          val a_preload :
            [< `Audio | `Metadata | `None ] wrap -> [> `Preload ] attrib
          val a_pubdate : unit -> [> `Pubdate ] attrib
          val a_radiogroup : Html_types.text wrap -> [> `Radiogroup ] attrib
          val a_required : unit -> [> `Required ] attrib
          val a_reversed : unit -> [> `Reversed ] attrib
          val a_sandbox :
            [< Html_types.sandbox_token ] list wrap -> [> `Sandbox ] attrib
          val a_spellcheck : bool wrap -> [> `Spellcheck ] attrib
          val a_scoped : unit -> [> `Scoped ] attrib
          val a_seamless : unit -> [> `Seamless ] attrib
          val a_sizes :
            (Html_types.number * Html_types.number) list option wrap ->
            [> `Sizes ] attrib
          val a_span : Html_types.number wrap -> [> `Span ] attrib
          val a_srclang : Html_types.nmtoken wrap -> [> `XML_lang ] attrib
          type image_candidate =
              [ `Url of uri
              | `Url_pixel of uri * Html_types.float_number
              | `Url_width of uri * Html_types.number ]
          val a_srcset : image_candidate list wrap -> [> `Srcset ] attrib
          val a_img_sizes :
            Html_types.text list wrap -> [> `Img_sizes ] attrib
          val a_start : Html_types.number wrap -> [> `Start ] attrib
          val a_step :
            Html_types.float_number option wrap -> [> `Step ] attrib
          val a_wrap : [< `Hard | `Soft ] wrap -> [> `Wrap ] attrib
          val a_version : Html_types.cdata wrap -> [> `Version ] attrib
          val a_xmlns : [< `W3_org_1999_xhtml ] wrap -> [> `XMLns ] attrib
          val a_manifest : Xml.uri wrap -> [> `Manifest ] attrib
          val a_cite : Xml.uri wrap -> [> `Cite ] attrib
          val a_xml_space :
            [< `Default | `Preserve ] wrap -> [> `XML_space ] attrib
          val a_accesskey :
            Html_types.character wrap -> [> `Accesskey ] attrib
          val a_charset : Html_types.charset wrap -> [> `Charset ] attrib
          val a_accept_charset :
            Html_types.charsets wrap -> [> `Accept_charset ] attrib
          val a_accept : Html_types.contenttypes wrap -> [> `Accept ] attrib
          val a_href : Xml.uri wrap -> [> `Href ] attrib
          val a_hreflang :
            Html_types.languagecode wrap -> [> `Hreflang ] attrib
          val a_download : string option wrap -> [> `Download ] attrib
          val a_rel : Html_types.linktypes wrap -> [> `Rel ] attrib
          val a_tabindex : Html_types.number wrap -> [> `Tabindex ] attrib
          val a_mime_type :
            Html_types.contenttype wrap -> [> `Mime_type ] attrib
          val a_datetime : Html_types.cdata wrap -> [> `Datetime ] attrib
          val a_action : Xml.uri wrap -> [> `Action ] attrib
          val a_checked : unit -> [> `Checked ] attrib
          val a_cols : Html_types.number wrap -> [> `Cols ] attrib
          val a_enctype : Html_types.contenttype wrap -> [> `Enctype ] attrib
          val a_label_for : Html_types.idref wrap -> [> `Label_for ] attrib
          val a_for : Html_types.idref wrap -> [> `Label_for ] attrib
          val a_output_for :
            Html_types.idrefs wrap -> [> `Output_for ] attrib
          val a_for_list : Html_types.idrefs wrap -> [> `Output_for ] attrib
          val a_maxlength : Html_types.number wrap -> [> `Maxlength ] attrib
          val a_method : [< `Get | `Post ] wrap -> [> `Method ] attrib
          val a_formmethod : [< `Get | `Post ] wrap -> [> `Method ] attrib
          val a_multiple : unit -> [> `Multiple ] attrib
          val a_name : Html_types.text wrap -> [> `Name ] attrib
          val a_rows : Html_types.number wrap -> [> `Rows ] attrib
          val a_selected : unit -> [> `Selected ] attrib
          val a_size : Html_types.number wrap -> [> `Size ] attrib
          val a_src : Xml.uri wrap -> [> `Src ] attrib
          val a_input_type :
            [< `Button
             | `Checkbox
             | `Color
             | `Date
             | `Datetime
             | `Datetime_local
             | `Email
             | `File
             | `Hidden
             | `Image
             | `Month
             | `Number
             | `Password
             | `Radio
             | `Range
             | `Reset
             | `Search
             | `Submit
             | `Tel
             | `Text
             | `Time
             | `Url
             | `Week ]
            wrap -> [> `Input_Type ] attrib
          val a_text_value : Html_types.text wrap -> [> `Text_Value ] attrib
          val a_int_value : Html_types.number wrap -> [> `Int_Value ] attrib
          val a_value : Html_types.cdata wrap -> [> `Value ] attrib
          val a_float_value :
            Html_types.float_number wrap -> [> `Float_Value ] attrib
          val a_disabled : unit -> [> `Disabled ] attrib
          val a_readonly : unit -> [> `ReadOnly ] attrib
          val a_button_type :
            [< `Button | `Reset | `Submit ] wrap -> [> `Button_Type ] attrib
          val a_command_type :
            [< `Checkbox | `Command | `Radio ] wrap ->
            [> `Command_Type ] attrib
          val a_menu_type :
            [< `Context | `Toolbar ] wrap -> [> `Menu_Type ] attrib
          val a_label : Html_types.text wrap -> [> `Label ] attrib
          val a_align :
            [< `Char | `Justify | `Left | `Right ] wrap -> [> `Align ] attrib
          val a_axis : Html_types.cdata wrap -> [> `Axis ] attrib
          val a_colspan : Html_types.number wrap -> [> `Colspan ] attrib
          val a_headers : Html_types.idrefs wrap -> [> `Headers ] attrib
          val a_rowspan : Html_types.number wrap -> [> `Rowspan ] attrib
          val a_scope :
            [< `Col | `Colgroup | `Row | `Rowgroup ] wrap ->
            [> `Scope ] attrib
          val a_summary : Html_types.text wrap -> [> `Summary ] attrib
          val a_border : Html_types.pixels wrap -> [> `Border ] attrib
          val a_rules :
            [< `All | `Cols | `Groups | `None | `Rows ] wrap ->
            [> `Rules ] attrib
          val a_char : Html_types.character wrap -> [> `Char ] attrib
          val a_alt : Html_types.text wrap -> [> `Alt ] attrib
          val a_height : Html_types.number wrap -> [> `Height ] attrib
          val a_width : Html_types.number wrap -> [> `Width ] attrib
          type shape = [ `Circle | `Default | `Poly | `Rect ]
          val a_shape : shape wrap -> [> `Shape ] attrib
          val a_coords : Html_types.numbers wrap -> [> `Coords ] attrib
          val a_usemap : Html_types.idref wrap -> [> `Usemap ] attrib
          val a_data : Xml.uri wrap -> [> `Data ] attrib
          val a_codetype :
            Html_types.contenttype wrap -> [> `Codetype ] attrib
          val a_frameborder :
            [< `One | `Zero ] wrap -> [> `Frameborder ] attrib
          val a_marginheight :
            Html_types.pixels wrap -> [> `Marginheight ] attrib
          val a_marginwidth :
            Html_types.pixels wrap -> [> `Marginwidth ] attrib
          val a_scrolling :
            [< `Auto | `No | `Yes ] wrap -> [> `Scrolling ] attrib
          val a_target : Html_types.frametarget wrap -> [> `Target ] attrib
          val a_content : Html_types.text wrap -> [> `Content ] attrib
          val a_http_equiv : Html_types.text wrap -> [> `Http_equiv ] attrib
          val a_defer : unit -> [> `Defer ] attrib
          val a_media : Html_types.mediadesc wrap -> [> `Media ] attrib
          val a_style : string wrap -> [> `Style_Attr ] attrib
          val a_property : string wrap -> [> `Property ] attrib
          val pcdata : string wrap -> [> `PCDATA ] elt
          val html :
            ?a:Html_types.html_attrib attrib list ->
            [< `Head ] elt wrap -> [< `Body ] elt wrap -> [> `Html ] elt
          val head :
            ?a:Html_types.head_attrib attrib list ->
            [< `Title ] elt wrap ->
            Html_types.head_content_fun elt list_wrap ->
            [> Html_types.head ] elt
          val base :
            ([< Html_types.base_attrib ], [> Html_types.base ]) nullary
          val title :
            (Html_types.title_attrib, [< Html_types.title_content_fun ],
             [> Html_types.title ])
            unary
          val body :
            ([< Html_types.body_attrib ], [< Html_types.body_content_fun ],
             [> Html_types.body ])
            star
          val svg :
            ?a:[< Html_types.svg_attrib ] Svg.D.Raw.attrib list ->
            [< Html_types.svg_content ] Svg.D.Raw.elt list_wrap ->
            [> Html_types.svg ] elt
          val footer :
            ([< Html_types.common ],
             [< Html_types.flow5_without_header_footer ], [> `Footer ])
            star
          val header :
            ([< Html_types.common ],
             [< Html_types.flow5_without_header_footer ], [> `Header ])
            star
          val section :
            ([< Html_types.section_attrib ],
             [< Html_types.section_content_fun ], [> Html_types.section ])
            star
          val nav :
            ([< Html_types.nav_attrib ], [< Html_types.nav_content_fun ],
             [> Html_types.nav ])
            star
          val h1 :
            ([< Html_types.h1_attrib ], [< Html_types.h1_content_fun ],
             [> Html_types.h1 ])
            star
          val h2 :
            ([< Html_types.h2_attrib ], [< Html_types.h2_content_fun ],
             [> Html_types.h2 ])
            star
          val h3 :
            ([< Html_types.h3_attrib ], [< Html_types.h3_content_fun ],
             [> Html_types.h3 ])
            star
          val h4 :
            ([< Html_types.h4_attrib ], [< Html_types.h4_content_fun ],
             [> Html_types.h4 ])
            star
          val h5 :
            ([< Html_types.h5_attrib ], [< Html_types.h5_content_fun ],
             [> Html_types.h5 ])
            star
          val h6 :
            ([< Html_types.h6_attrib ], [< Html_types.h6_content_fun ],
             [> Html_types.h6 ])
            star
          val hgroup :
            ([< Html_types.hgroup_attrib ],
             [< Html_types.hgroup_content_fun ], [> Html_types.hgroup ])
            star
          val address :
            ([< Html_types.address_attrib ],
             [< Html_types.address_content_fun ], [> Html_types.address ])
            star
          val article :
            ([< Html_types.article_attrib ],
             [< Html_types.article_content_fun ], [> Html_types.article ])
            star
          val aside :
            ([< Html_types.aside_attrib ], [< Html_types.aside_content_fun ],
             [> Html_types.aside ])
            star
          val main :
            ([< Html_types.main_attrib ], [< Html_types.main_content_fun ],
             [> Html_types.main ])
            star
          val p :
            ([< Html_types.p_attrib ], [< Html_types.p_content_fun ],
             [> Html_types.p ])
            star
          val pre :
            ([< Html_types.pre_attrib ], [< Html_types.pre_content_fun ],
             [> Html_types.pre ])
            star
          val blockquote :
            ([< Html_types.blockquote_attrib ],
             [< Html_types.blockquote_content_fun ],
             [> Html_types.blockquote ])
            star
          val div :
            ([< Html_types.div_attrib ], [< Html_types.div_content_fun ],
             [> Html_types.div ])
            star
          val dl :
            ([< Html_types.dl_attrib ], [< Html_types.dl_content_fun ],
             [> Html_types.dl ])
            star
          val ol :
            ([< Html_types.ol_attrib ], [< Html_types.ol_content_fun ],
             [> Html_types.ol ])
            star
          val ul :
            ([< Html_types.ul_attrib ], [< Html_types.ul_content_fun ],
             [> Html_types.ul ])
            star
          val dd :
            ([< Html_types.dd_attrib ], [< Html_types.dd_content_fun ],
             [> Html_types.dd ])
            star
          val dt :
            ([< Html_types.dt_attrib ], [< Html_types.dt_content_fun ],
             [> Html_types.dt ])
            star
          val li :
            ([< Html_types.li_attrib ], [< Html_types.li_content_fun ],
             [> Html_types.li ])
            star
          val figcaption :
            ([< Html_types.figcaption_attrib ],
             [< Html_types.figcaption_content_fun ],
             [> Html_types.figcaption ])
            star
          val figure :
            ?figcaption:[ `Bottom of [< `Figcaption ] elt wrap
                        | `Top of [< `Figcaption ] elt wrap ] ->
            ([< Html_types.figure_attrib ],
             [< Html_types.figure_content_fun ], [> Html_types.figure ])
            star
          val hr : ([< Html_types.hr_attrib ], [> Html_types.hr ]) nullary
          val b :
            ([< Html_types.b_attrib ], [< Html_types.b_content_fun ],
             [> Html_types.b ])
            star
          val i :
            ([< Html_types.i_attrib ], [< Html_types.i_content_fun ],
             [> Html_types.i ])
            star
          val u :
            ([< Html_types.u_attrib ], [< Html_types.u_content_fun ],
             [> Html_types.u ])
            star
          val small :
            ([< Html_types.small_attrib ], [< Html_types.small_content_fun ],
             [> Html_types.small ])
            star
          val sub :
            ([< Html_types.sub_attrib ], [< Html_types.sub_content_fun ],
             [> Html_types.sub ])
            star
          val sup :
            ([< Html_types.sup_attrib ], [< Html_types.sup_content_fun ],
             [> Html_types.sup ])
            star
          val mark :
            ([< Html_types.mark_attrib ], [< Html_types.mark_content_fun ],
             [> Html_types.mark ])
            star
          val wbr : ([< Html_types.wbr_attrib ], [> Html_types.wbr ]) nullary
          val bdo :
            dir:[< `Ltr | `Rtl ] wrap ->
            ([< Html_types.common ], [< Html_types.phrasing ], [> `Bdo ])
            star
          val abbr :
            ([< Html_types.abbr_attrib ], [< Html_types.abbr_content_fun ],
             [> Html_types.abbr ])
            star
          val br : ([< Html_types.br_attrib ], [> Html_types.br ]) nullary
          val cite :
            ([< Html_types.cite_attrib ], [< Html_types.cite_content_fun ],
             [> Html_types.cite ])
            star
          val code :
            ([< Html_types.code_attrib ], [< Html_types.code_content_fun ],
             [> Html_types.code ])
            star
          val dfn :
            ([< Html_types.dfn_attrib ], [< Html_types.dfn_content_fun ],
             [> Html_types.dfn ])
            star
          val em :
            ([< Html_types.em_attrib ], [< Html_types.em_content_fun ],
             [> Html_types.em ])
            star
          val kbd :
            ([< Html_types.kbd_attrib ], [< Html_types.kbd_content_fun ],
             [> Html_types.kbd ])
            star
          val q :
            ([< Html_types.q_attrib ], [< Html_types.q_content_fun ],
             [> Html_types.q ])
            star
          val samp :
            ([< Html_types.samp_attrib ], [< Html_types.samp_content_fun ],
             [> Html_types.samp ])
            star
          val span :
            ([< Html_types.span_attrib ], [< Html_types.span_content_fun ],
             [> Html_types.span ])
            star
          val strong :
            ([< Html_types.strong_attrib ],
             [< Html_types.strong_content_fun ], [> Html_types.strong ])
            star
          val time :
            ([< Html_types.time_attrib ], [< Html_types.time_content_fun ],
             [> Html_types.time ])
            star
          val var :
            ([< Html_types.var_attrib ], [< Html_types.var_content_fun ],
             [> Html_types.var ])
            star
          val a : ([< Html_types.a_attrib ], 'a, [> `A of 'a ]) star
          val del : ([< Html_types.del_attrib ], 'a, [> `Del of 'a ]) star
          val ins : ([< Html_types.ins_attrib ], 'a, [> `Ins of 'a ]) star
          val img :
            src:Xml.uri wrap ->
            alt:Html_types.text wrap ->
            ([< Html_types.img_attrib ], [> Html_types.img ]) nullary
          val iframe :
            ([< `Accesskey
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Dir
              | `Draggable
              | `Height
              | `Hidden
              | `Id
              | `Lang
              | `Name
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Sandbox
              | `Seamless
              | `Spellcheck
              | `Src
              | `Style_Attr
              | `Tabindex
              | `Title
              | `User_data
              | `Width
              | `XML_lang
              | `XMLns ],
             [< `PCDATA ], [> `Iframe ])
            star
          val object_ :
            ?params:[< `Param ] elt list_wrap ->
            ([< `Accesskey
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Data
              | `Dir
              | `Draggable
              | `Form
              | `Height
              | `Hidden
              | `Id
              | `Lang
              | `Mime_type
              | `Name
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Spellcheck
              | `Style_Attr
              | `Tabindex
              | `Title
              | `Usemap
              | `User_data
              | `Width
              | `XML_lang
              | `XMLns ],
             'a, [> `Object of 'a ])
            star
          val param :
            ([< Html_types.param_attrib ], [> Html_types.param ]) nullary
          val embed :
            ([< `Accesskey
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Dir
              | `Draggable
              | `Height
              | `Hidden
              | `Id
              | `Lang
              | `Mime_type
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Spellcheck
              | `Src
              | `Style_Attr
              | `Tabindex
              | `Title
              | `User_data
              | `Width
              | `XML_lang
              | `XMLns ],
             [> `Embed ])
            nullary
          val audio :
            ?src:Xml.uri wrap ->
            ?srcs:[< Html_types.source ] elt list_wrap ->
            ([< Html_types.audio_attrib ], 'a, [> 'a Html_types.audio ]) star
          val video :
            ?src:Xml.uri wrap ->
            ?srcs:[< Html_types.source ] elt list_wrap ->
            ([< Html_types.video_attrib ], 'a, [> 'a Html_types.video ]) star
          val canvas :
            ([< Html_types.canvas_attrib ], 'a, [> 'a Html_types.canvas ])
            star
          val source :
            ([< Html_types.source_attrib ], [> Html_types.source ]) nullary
          val area :
            alt:Html_types.text wrap ->
            ([< `Accesskey
              | `Alt
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Coords
              | `Dir
              | `Draggable
              | `Hidden
              | `Hreflang
              | `Id
              | `Lang
              | `Media
              | `Mime_type
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Rel
              | `Shape
              | `Spellcheck
              | `Style_Attr
              | `Tabindex
              | `Target
              | `Title
              | `User_data
              | `XML_lang
              | `XMLns ],
             [> `Area ])
            nullary
          val map : ([< Html_types.map_attrib ], 'a, [> `A of 'a ]) star
          val caption :
            ([< Html_types.caption_attrib ],
             [< Html_types.caption_content_fun ], [> Html_types.caption ])
            star
          val table :
            ?caption:[< Html_types.caption ] elt wrap ->
            ?columns:[< Html_types.colgroup ] elt list_wrap ->
            ?thead:[< Html_types.thead ] elt wrap ->
            ?tfoot:[< Html_types.tfoot ] elt wrap ->
            ([< Html_types.table_attrib ], [< Html_types.table_content_fun ],
             [> Html_types.table ])
            star
          val tablex :
            ?caption:[< Html_types.caption ] elt wrap ->
            ?columns:[< Html_types.colgroup ] elt list_wrap ->
            ?thead:[< Html_types.thead ] elt wrap ->
            ?tfoot:[< Html_types.tfoot ] elt wrap ->
            ([< Html_types.tablex_attrib ],
             [< Html_types.tablex_content_fun ], [> Html_types.tablex ])
            star
          val colgroup :
            ([< Html_types.colgroup_attrib ],
             [< Html_types.colgroup_content_fun ], [> Html_types.colgroup ])
            star
          val col : ([< Html_types.col_attrib ], [> Html_types.col ]) nullary
          val thead :
            ([< Html_types.thead_attrib ], [< Html_types.thead_content_fun ],
             [> Html_types.thead ])
            star
          val tbody :
            ([< Html_types.tbody_attrib ], [< Html_types.tbody_content_fun ],
             [> Html_types.tbody ])
            star
          val tfoot :
            ([< Html_types.tfoot_attrib ], [< Html_types.tfoot_content_fun ],
             [> Html_types.tfoot ])
            star
          val td :
            ([< Html_types.td_attrib ], [< Html_types.td_content_fun ],
             [> Html_types.td ])
            star
          val th :
            ([< Html_types.th_attrib ], [< Html_types.th_content_fun ],
             [> Html_types.th ])
            star
          val tr :
            ([< Html_types.tr_attrib ], [< Html_types.tr_content_fun ],
             [> Html_types.tr ])
            star
          val form :
            ([< Html_types.form_attrib ], [< Html_types.form_content_fun ],
             [> Html_types.form ])
            star
          val fieldset :
            ?legend:[ `Legend ] elt wrap ->
            ([< `Accesskey
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Dir
              | `Disabled
              | `Draggable
              | `Form
              | `Hidden
              | `Id
              | `Lang
              | `Name
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Spellcheck
              | `Style_Attr
              | `Tabindex
              | `Title
              | `User_data
              | `XML_lang
              | `XMLns ],
             [< Html_types.flow5 ], [> `Fieldset ])
            star
          val legend :
            ([< Html_types.legend_attrib ],
             [< Html_types.legend_content_fun ], [> Html_types.legend ])
            star
          val label :
            ([< Html_types.label_attrib ], [< Html_types.label_content_fun ],
             [> Html_types.label ])
            star
          val input :
            ([< Html_types.input_attrib ], [> Html_types.input ]) nullary
          val button :
            ([< Html_types.button_attrib ],
             [< Html_types.button_content_fun ], [> Html_types.button ])
            star
          val select :
            ([< Html_types.select_attrib ],
             [< Html_types.select_content_fun ], [> Html_types.select ])
            star
          val datalist :
            ?children:[< `Options of [< `Option ] elt list_wrap
                       | `Phras of [< Html_types.phrasing ] elt list_wrap ] ->
            ([< Html_types.common ], [> `Datalist ]) nullary
          val optgroup :
            label:Html_types.text wrap ->
            ([< `Accesskey
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Dir
              | `Disabled
              | `Draggable
              | `Hidden
              | `Id
              | `Label
              | `Lang
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Spellcheck
              | `Style_Attr
              | `Tabindex
              | `Title
              | `User_data
              | `XML_lang
              | `XMLns ],
             [< `Option ], [> `Optgroup ])
            star
          val option :
            ([< Html_types.option_attrib ],
             [< Html_types.option_content_fun ],
             [> Html_types.selectoption ])
            unary
          val textarea :
            ([< Html_types.textarea_attrib ],
             [< Html_types.textarea_content_fun ], [> Html_types.textarea ])
            unary
          val keygen :
            ([< Html_types.keygen_attrib ], [> Html_types.keygen ]) nullary
          val progress :
            ([< Html_types.progress_attrib ],
             [< Html_types.progress_content_fun ], [> Html_types.progress ])
            star
          val meter :
            ([< Html_types.meter_attrib ], [< Html_types.meter_content_fun ],
             [> Html_types.meter ])
            star
          val output_elt :
            ([< Html_types.output_elt_attrib ],
             [< Html_types.output_elt_content_fun ],
             [> Html_types.output_elt ])
            star
          val entity : string -> [> `PCDATA ] elt
          val space : unit -> [> `PCDATA ] elt
          val cdata : string -> [> `PCDATA ] elt
          val cdata_script : string -> [> `PCDATA ] elt
          val cdata_style : string -> [> `PCDATA ] elt
          val details :
            [< `Summary ] elt wrap ->
            ([< `Accesskey
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Dir
              | `Draggable
              | `Hidden
              | `Id
              | `Lang
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Open
              | `Spellcheck
              | `Style_Attr
              | `Tabindex
              | `Title
              | `User_data
              | `XML_lang
              | `XMLns ],
             [< Html_types.flow5 ], [> `Details ])
            star
          val summary :
            ([< Html_types.summary_attrib ],
             [< Html_types.summary_content_fun ], [> Html_types.summary ])
            star
          val command :
            label:Html_types.text wrap ->
            ([< `Accesskey
              | `Checked
              | `Class
              | `Command_Type
              | `Contenteditable
              | `Contextmenu
              | `Dir
              | `Disabled
              | `Draggable
              | `Hidden
              | `Icon
              | `Id
              | `Lang
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Radiogroup
              | `Spellcheck
              | `Style_Attr
              | `Tabindex
              | `Title
              | `User_data
              | `XML_lang
              | `XMLns ],
             [> `Command ])
            nullary
          val menu :
            ?children:[< `Flows of [< Html_types.flow5 ] elt list_wrap
                       | `Lis of
                           [< `Li of [< Html_types.common ] ] elt list_wrap ] ->
            ([< `Accesskey
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Dir
              | `Draggable
              | `Hidden
              | `Id
              | `Label
              | `Lang
              | `Menu_Type
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Spellcheck
              | `Style_Attr
              | `Tabindex
              | `Title
              | `User_data
              | `XML_lang
              | `XMLns ],
             [> `Menu ])
            nullary
          val script :
            ([< Html_types.script_attrib ],
             [< Html_types.script_content_fun ], [> Html_types.script ])
            unary
          val noscript :
            ([< Html_types.noscript_attrib ],
             [< Html_types.noscript_content_fun ], [> Html_types.noscript ])
            star
          val meta :
            ([< Html_types.meta_attrib ], [> Html_types.meta ]) nullary
          val style :
            ([< Html_types.style_attrib ], [< Html_types.style_content_fun ],
             [> Html_types.style ])
            star
          val link :
            rel:Html_types.linktypes wrap ->
            href:Xml.uri wrap ->
            ([< `Accesskey
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Dir
              | `Draggable
              | `Hidden
              | `Href
              | `Hreflang
              | `Id
              | `Lang
              | `Media
              | `Mime_type
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Rel
              | `Sizes
              | `Spellcheck
              | `Style_Attr
              | `Tabindex
              | `Title
              | `User_data
              | `XML_lang
              | `XMLns ],
             [> `Link ])
            nullary
          val rt :
            ([< Html_types.rt_attrib ], [< Html_types.rt_content_fun ],
             [> Html_types.rt ])
            star
          val rp :
            ([< Html_types.rp_attrib ], [< Html_types.rp_content_fun ],
             [> Html_types.rp ])
            star
          val ruby :
            ([< Html_types.ruby_attrib ], [< Html_types.ruby_content_fun ],
             [> Html_types.ruby ])
            star
          val tot : Xml.elt -> 'a elt
          val totl : Xml.elt list_wrap -> 'a elt list_wrap
          val toelt : 'a elt -> Xml.elt
          val toeltl : 'a elt list_wrap -> Xml.elt list_wrap
          val doc_toelt : doc -> Xml.elt
          val to_xmlattribs : 'a attrib list -> Xml.attrib list
          val to_attrib : Xml.attrib -> 'a attrib
          module Unsafe :
            sig
              val data : string wrap -> 'a elt
              val node :
                string -> ?a:'a attrib list -> 'b elt list_wrap -> 'c elt
              val leaf : string -> ?a:'a attrib list -> unit -> 'b elt
              val coerce_elt : 'a elt -> 'b elt
              val string_attrib : string -> string wrap -> 'a attrib
              val float_attrib : string -> float wrap -> 'a attrib
              val int_attrib : string -> int wrap -> 'a attrib
              val uri_attrib : string -> uri wrap -> 'a attrib
              val space_sep_attrib : string -> string list wrap -> 'a attrib
              val comma_sep_attrib : string -> string list wrap -> 'a attrib
            end
        end
      type 'a elt = 'a elt
      type doc = [ `Html ] elt
      type 'a attrib = 'a attrib
      module Xml :
        sig
          module W :
            sig
              type 'a t = 'a Xml.W.t
              val return : 'a -> 'a t
              type ('a, 'b) ft = ('a, 'b) Xml.W.ft
              val fmap : ('a, 'b) ft -> 'a t -> 'b t
              type 'a tlist = 'a Xml.W.tlist
              val nil : unit -> 'a tlist
              val singleton : 'a t -> 'a tlist
              val cons : 'a t -> 'a tlist -> 'a tlist
              val append : 'a tlist -> 'a tlist -> 'a tlist
              val map : ('a, 'b) ft -> 'a tlist -> 'b tlist
            end
          type 'a wrap = 'a W.t
          type 'a list_wrap = 'a W.tlist
          type uri = Xml.uri
          val string_of_uri : (uri, string) W.ft
          val uri_of_string : (string, uri) W.ft
          type aname = string
          type event_handler = Xml.event_handler
          type mouse_event_handler = Xml.mouse_event_handler
          type keyboard_event_handler = Xml.keyboard_event_handler
          type attrib = Xml.attrib
          val float_attrib : aname -> float wrap -> attrib
          val int_attrib : aname -> int wrap -> attrib
          val string_attrib : aname -> string wrap -> attrib
          val space_sep_attrib : aname -> string list wrap -> attrib
          val comma_sep_attrib : aname -> string list wrap -> attrib
          val event_handler_attrib : aname -> event_handler -> attrib
          val mouse_event_handler_attrib :
            aname -> mouse_event_handler -> attrib
          val keyboard_event_handler_attrib :
            aname -> keyboard_event_handler -> attrib
          val uri_attrib : aname -> uri wrap -> attrib
          val uris_attrib : aname -> uri list wrap -> attrib
          type elt = Xml.elt
          type ename = string
          val empty : unit -> elt
          val comment : string -> elt
          val pcdata : string wrap -> elt
          val encodedpcdata : string wrap -> elt
          val entity : string -> elt
          val leaf : ?a:attrib list -> ename -> elt
          val node : ?a:attrib list -> ename -> elt list_wrap -> elt
          val cdata : string -> elt
          val cdata_script : string -> elt
          val cdata_style : string -> elt
        end
      type 'a wrap = 'a Xml.W.t
      type 'a list_wrap = 'a Xml.W.tlist
      type ('a, 'b) nullary = ?a:'a attrib list -> unit -> 'b elt
      type ('a, 'b, 'c) unary = ?a:'a attrib list -> 'b elt wrap -> 'c elt
      type ('a, 'b, 'c) star =
          ?a:'a attrib list -> 'b elt list_wrap -> 'c elt
      module Info : Xml_sigs.Info
      type uri = Xml.uri
      val string_of_uri : (uri, string) Xml.W.ft
      val a_class : Html_types.nmtokens wrap -> [> `Class ] attrib
      val a_user_data :
        Html_types.nmtoken -> Html_types.text wrap -> [> `User_data ] attrib
      val a_id : Html_types.text wrap -> [> `Id ] attrib
      val a_title : Html_types.text wrap -> [> `Title ] attrib
      val a_xml_lang : Html_types.languagecode wrap -> [> `XML_lang ] attrib
      val a_lang : Html_types.languagecode wrap -> [> `Lang ] attrib
      val a_onabort : Xml.event_handler -> [> `OnAbort ] attrib
      val a_onafterprint : Xml.event_handler -> [> `OnAfterPrint ] attrib
      val a_onbeforeprint : Xml.event_handler -> [> `OnBeforePrint ] attrib
      val a_onbeforeunload : Xml.event_handler -> [> `OnBeforeUnload ] attrib
      val a_onblur : Xml.event_handler -> [> `OnBlur ] attrib
      val a_oncanplay : Xml.event_handler -> [> `OnCanPlay ] attrib
      val a_oncanplaythrough :
        Xml.event_handler -> [> `OnCanPlayThrough ] attrib
      val a_onchange : Xml.event_handler -> [> `OnChange ] attrib
      val a_ondurationchange :
        Xml.event_handler -> [> `OnDurationChange ] attrib
      val a_onemptied : Xml.event_handler -> [> `OnEmptied ] attrib
      val a_onended : Xml.event_handler -> [> `OnEnded ] attrib
      val a_onerror : Xml.event_handler -> [> `OnError ] attrib
      val a_onfocus : Xml.event_handler -> [> `OnFocus ] attrib
      val a_onformchange : Xml.event_handler -> [> `OnFormChange ] attrib
      val a_onforminput : Xml.event_handler -> [> `OnFormInput ] attrib
      val a_onhashchange : Xml.event_handler -> [> `OnHashChange ] attrib
      val a_oninput : Xml.event_handler -> [> `OnInput ] attrib
      val a_oninvalid : Xml.event_handler -> [> `OnInvalid ] attrib
      val a_onmousewheel : Xml.event_handler -> [> `OnMouseWheel ] attrib
      val a_onoffline : Xml.event_handler -> [> `OnOffLine ] attrib
      val a_ononline : Xml.event_handler -> [> `OnOnLine ] attrib
      val a_onpause : Xml.event_handler -> [> `OnPause ] attrib
      val a_onplay : Xml.event_handler -> [> `OnPlay ] attrib
      val a_onplaying : Xml.event_handler -> [> `OnPlaying ] attrib
      val a_onpagehide : Xml.event_handler -> [> `OnPageHide ] attrib
      val a_onpageshow : Xml.event_handler -> [> `OnPageShow ] attrib
      val a_onpopstate : Xml.event_handler -> [> `OnPopState ] attrib
      val a_onprogress : Xml.event_handler -> [> `OnProgress ] attrib
      val a_onratechange : Xml.event_handler -> [> `OnRateChange ] attrib
      val a_onreadystatechange :
        Xml.event_handler -> [> `OnReadyStateChange ] attrib
      val a_onredo : Xml.event_handler -> [> `OnRedo ] attrib
      val a_onresize : Xml.event_handler -> [> `OnResize ] attrib
      val a_onscroll : Xml.event_handler -> [> `OnScroll ] attrib
      val a_onseeked : Xml.event_handler -> [> `OnSeeked ] attrib
      val a_onseeking : Xml.event_handler -> [> `OnSeeking ] attrib
      val a_onselect : Xml.event_handler -> [> `OnSelect ] attrib
      val a_onshow : Xml.event_handler -> [> `OnShow ] attrib
      val a_onstalled : Xml.event_handler -> [> `OnStalled ] attrib
      val a_onstorage : Xml.event_handler -> [> `OnStorage ] attrib
      val a_onsubmit : Xml.event_handler -> [> `OnSubmit ] attrib
      val a_onsuspend : Xml.event_handler -> [> `OnSuspend ] attrib
      val a_ontimeupdate : Xml.event_handler -> [> `OnTimeUpdate ] attrib
      val a_onundo : Xml.event_handler -> [> `OnUndo ] attrib
      val a_onunload : Xml.event_handler -> [> `OnUnload ] attrib
      val a_onvolumechange : Xml.event_handler -> [> `OnVolumeChange ] attrib
      val a_onwaiting : Xml.event_handler -> [> `OnWaiting ] attrib
      val a_onload : Xml.event_handler -> [> `OnLoad ] attrib
      val a_onloadeddata : Xml.event_handler -> [> `OnLoadedData ] attrib
      val a_onloadedmetadata :
        Xml.event_handler -> [> `OnLoadedMetaData ] attrib
      val a_onloadstart : Xml.event_handler -> [> `OnLoadStart ] attrib
      val a_onmessage : Xml.event_handler -> [> `OnMessage ] attrib
      val a_onclick : Xml.mouse_event_handler -> [> `OnClick ] attrib
      val a_oncontextmenu :
        Xml.mouse_event_handler -> [> `OnContextMenu ] attrib
      val a_ondblclick : Xml.mouse_event_handler -> [> `OnDblClick ] attrib
      val a_ondrag : Xml.mouse_event_handler -> [> `OnDrag ] attrib
      val a_ondragend : Xml.mouse_event_handler -> [> `OnDragEnd ] attrib
      val a_ondragenter : Xml.mouse_event_handler -> [> `OnDragEnter ] attrib
      val a_ondragleave : Xml.mouse_event_handler -> [> `OnDragLeave ] attrib
      val a_ondragover : Xml.mouse_event_handler -> [> `OnDragOver ] attrib
      val a_ondragstart : Xml.mouse_event_handler -> [> `OnDragStart ] attrib
      val a_ondrop : Xml.mouse_event_handler -> [> `OnDrop ] attrib
      val a_onmousedown : Xml.mouse_event_handler -> [> `OnMouseDown ] attrib
      val a_onmouseup : Xml.mouse_event_handler -> [> `OnMouseUp ] attrib
      val a_onmouseover : Xml.mouse_event_handler -> [> `OnMouseOver ] attrib
      val a_onmousemove : Xml.mouse_event_handler -> [> `OnMouseMove ] attrib
      val a_onmouseout : Xml.mouse_event_handler -> [> `OnMouseOut ] attrib
      val a_onkeypress :
        Xml.keyboard_event_handler -> [> `OnKeyPress ] attrib
      val a_onkeydown : Xml.keyboard_event_handler -> [> `OnKeyDown ] attrib
      val a_onkeyup : Xml.keyboard_event_handler -> [> `OnKeyUp ] attrib
      val a_autocomplete : bool wrap -> [> `Autocomplete ] attrib
      val a_async : unit -> [> `Async ] attrib
      val a_autofocus : unit -> [> `Autofocus ] attrib
      val a_autoplay : unit -> [> `Autoplay ] attrib
      val a_muted : unit -> [> `Muted ] attrib
      val a_crossorigin :
        [< `Anonymous | `Use_credentials ] wrap -> [> `Crossorigin ] attrib
      val a_mediagroup : string wrap -> [> `Mediagroup ] attrib
      val a_challenge : Html_types.text wrap -> [> `Challenge ] attrib
      val a_contenteditable : bool wrap -> [> `Contenteditable ] attrib
      val a_contextmenu : Html_types.idref wrap -> [> `Contextmenu ] attrib
      val a_controls : unit -> [> `Controls ] attrib
      val a_dir : [< `Ltr | `Rtl ] wrap -> [> `Dir ] attrib
      val a_draggable : bool wrap -> [> `Draggable ] attrib
      val a_form : Html_types.idref wrap -> [> `Form ] attrib
      val a_formaction : Xml.uri wrap -> [> `Formaction ] attrib
      val a_formenctype :
        Html_types.contenttype wrap -> [> `Formenctype ] attrib
      val a_formnovalidate : unit -> [> `Formnovalidate ] attrib
      val a_formtarget : Html_types.text wrap -> [> `Formtarget ] attrib
      val a_hidden : unit -> [> `Hidden ] attrib
      val a_high : Html_types.float_number wrap -> [> `High ] attrib
      val a_icon : Xml.uri wrap -> [> `Icon ] attrib
      val a_ismap : unit -> [> `Ismap ] attrib
      val a_keytype : Html_types.text wrap -> [> `Keytype ] attrib
      val a_list : Html_types.idref wrap -> [> `List ] attrib
      val a_loop : unit -> [> `Loop ] attrib
      val a_low : Html_types.float_number wrap -> [> `High ] attrib
      val a_max : Html_types.float_number wrap -> [> `Max ] attrib
      val a_input_max :
        Html_types.number_or_datetime wrap -> [> `Input_Max ] attrib
      val a_min : Html_types.float_number wrap -> [> `Min ] attrib
      val a_input_min :
        Html_types.number_or_datetime wrap -> [> `Input_Min ] attrib
      val a_inputmode :
        [< `Email
         | `Full_width_latin
         | `Kana
         | `Katakana
         | `Latin
         | `Latin_name
         | `Latin_prose
         | `Numeric
         | `Tel
         | `Url
         | `Verbatim ]
        wrap -> [> `Inputmode ] attrib
      val a_novalidate : unit -> [> `Novalidate ] attrib
      val a_open : unit -> [> `Open ] attrib
      val a_optimum : Html_types.float_number wrap -> [> `Optimum ] attrib
      val a_pattern : Html_types.text wrap -> [> `Pattern ] attrib
      val a_placeholder : Html_types.text wrap -> [> `Placeholder ] attrib
      val a_poster : Xml.uri wrap -> [> `Poster ] attrib
      val a_preload :
        [< `Audio | `Metadata | `None ] wrap -> [> `Preload ] attrib
      val a_pubdate : unit -> [> `Pubdate ] attrib
      val a_radiogroup : Html_types.text wrap -> [> `Radiogroup ] attrib
      val a_required : unit -> [> `Required ] attrib
      val a_reversed : unit -> [> `Reversed ] attrib
      val a_sandbox :
        [< Html_types.sandbox_token ] list wrap -> [> `Sandbox ] attrib
      val a_spellcheck : bool wrap -> [> `Spellcheck ] attrib
      val a_scoped : unit -> [> `Scoped ] attrib
      val a_seamless : unit -> [> `Seamless ] attrib
      val a_sizes :
        (Html_types.number * Html_types.number) list option wrap ->
        [> `Sizes ] attrib
      val a_span : Html_types.number wrap -> [> `Span ] attrib
      val a_srclang : Html_types.nmtoken wrap -> [> `XML_lang ] attrib
      type image_candidate =
          [ `Url of uri
          | `Url_pixel of uri * Html_types.float_number
          | `Url_width of uri * Html_types.number ]
      val a_srcset : image_candidate list wrap -> [> `Srcset ] attrib
      val a_img_sizes : Html_types.text list wrap -> [> `Img_sizes ] attrib
      val a_start : Html_types.number wrap -> [> `Start ] attrib
      val a_step : Html_types.float_number option wrap -> [> `Step ] attrib
      val a_wrap : [< `Hard | `Soft ] wrap -> [> `Wrap ] attrib
      val a_version : Html_types.cdata wrap -> [> `Version ] attrib
      val a_xmlns : [< `W3_org_1999_xhtml ] wrap -> [> `XMLns ] attrib
      val a_manifest : Xml.uri wrap -> [> `Manifest ] attrib
      val a_cite : Xml.uri wrap -> [> `Cite ] attrib
      val a_xml_space :
        [< `Default | `Preserve ] wrap -> [> `XML_space ] attrib
      val a_accesskey : Html_types.character wrap -> [> `Accesskey ] attrib
      val a_charset : Html_types.charset wrap -> [> `Charset ] attrib
      val a_accept_charset :
        Html_types.charsets wrap -> [> `Accept_charset ] attrib
      val a_accept : Html_types.contenttypes wrap -> [> `Accept ] attrib
      val a_href : Xml.uri wrap -> [> `Href ] attrib
      val a_hreflang : Html_types.languagecode wrap -> [> `Hreflang ] attrib
      val a_download : string option wrap -> [> `Download ] attrib
      val a_rel : Html_types.linktypes wrap -> [> `Rel ] attrib
      val a_tabindex : Html_types.number wrap -> [> `Tabindex ] attrib
      val a_mime_type : Html_types.contenttype wrap -> [> `Mime_type ] attrib
      val a_datetime : Html_types.cdata wrap -> [> `Datetime ] attrib
      val a_action : Xml.uri wrap -> [> `Action ] attrib
      val a_checked : unit -> [> `Checked ] attrib
      val a_cols : Html_types.number wrap -> [> `Cols ] attrib
      val a_enctype : Html_types.contenttype wrap -> [> `Enctype ] attrib
      val a_label_for : Html_types.idref wrap -> [> `Label_for ] attrib
      val a_for : Html_types.idref wrap -> [> `Label_for ] attrib
      val a_output_for : Html_types.idrefs wrap -> [> `Output_for ] attrib
      val a_for_list : Html_types.idrefs wrap -> [> `Output_for ] attrib
      val a_maxlength : Html_types.number wrap -> [> `Maxlength ] attrib
      val a_method : [< `Get | `Post ] wrap -> [> `Method ] attrib
      val a_formmethod : [< `Get | `Post ] wrap -> [> `Method ] attrib
      val a_multiple : unit -> [> `Multiple ] attrib
      val a_name : Html_types.text wrap -> [> `Name ] attrib
      val a_rows : Html_types.number wrap -> [> `Rows ] attrib
      val a_selected : unit -> [> `Selected ] attrib
      val a_size : Html_types.number wrap -> [> `Size ] attrib
      val a_src : Xml.uri wrap -> [> `Src ] attrib
      val a_input_type :
        [< `Button
         | `Checkbox
         | `Color
         | `Date
         | `Datetime
         | `Datetime_local
         | `Email
         | `File
         | `Hidden
         | `Image
         | `Month
         | `Number
         | `Password
         | `Radio
         | `Range
         | `Reset
         | `Search
         | `Submit
         | `Tel
         | `Text
         | `Time
         | `Url
         | `Week ]
        wrap -> [> `Input_Type ] attrib
      val a_text_value : Html_types.text wrap -> [> `Text_Value ] attrib
      val a_int_value : Html_types.number wrap -> [> `Int_Value ] attrib
      val a_value : Html_types.cdata wrap -> [> `Value ] attrib
      val a_float_value :
        Html_types.float_number wrap -> [> `Float_Value ] attrib
      val a_disabled : unit -> [> `Disabled ] attrib
      val a_readonly : unit -> [> `ReadOnly ] attrib
      val a_button_type :
        [< `Button | `Reset | `Submit ] wrap -> [> `Button_Type ] attrib
      val a_command_type :
        [< `Checkbox | `Command | `Radio ] wrap -> [> `Command_Type ] attrib
      val a_menu_type :
        [< `Context | `Toolbar ] wrap -> [> `Menu_Type ] attrib
      val a_label : Html_types.text wrap -> [> `Label ] attrib
      val a_align :
        [< `Char | `Justify | `Left | `Right ] wrap -> [> `Align ] attrib
      val a_axis : Html_types.cdata wrap -> [> `Axis ] attrib
      val a_colspan : Html_types.number wrap -> [> `Colspan ] attrib
      val a_headers : Html_types.idrefs wrap -> [> `Headers ] attrib
      val a_rowspan : Html_types.number wrap -> [> `Rowspan ] attrib
      val a_scope :
        [< `Col | `Colgroup | `Row | `Rowgroup ] wrap -> [> `Scope ] attrib
      val a_summary : Html_types.text wrap -> [> `Summary ] attrib
      val a_border : Html_types.pixels wrap -> [> `Border ] attrib
      val a_rules :
        [< `All | `Cols | `Groups | `None | `Rows ] wrap ->
        [> `Rules ] attrib
      val a_char : Html_types.character wrap -> [> `Char ] attrib
      val a_alt : Html_types.text wrap -> [> `Alt ] attrib
      val a_height : Html_types.number wrap -> [> `Height ] attrib
      val a_width : Html_types.number wrap -> [> `Width ] attrib
      type shape = [ `Circle | `Default | `Poly | `Rect ]
      val a_shape : shape wrap -> [> `Shape ] attrib
      val a_coords : Html_types.numbers wrap -> [> `Coords ] attrib
      val a_usemap : Html_types.idref wrap -> [> `Usemap ] attrib
      val a_data : Xml.uri wrap -> [> `Data ] attrib
      val a_codetype : Html_types.contenttype wrap -> [> `Codetype ] attrib
      val a_frameborder : [< `One | `Zero ] wrap -> [> `Frameborder ] attrib
      val a_marginheight :
        Html_types.pixels wrap -> [> `Marginheight ] attrib
      val a_marginwidth : Html_types.pixels wrap -> [> `Marginwidth ] attrib
      val a_scrolling :
        [< `Auto | `No | `Yes ] wrap -> [> `Scrolling ] attrib
      val a_target : Html_types.frametarget wrap -> [> `Target ] attrib
      val a_content : Html_types.text wrap -> [> `Content ] attrib
      val a_http_equiv : Html_types.text wrap -> [> `Http_equiv ] attrib
      val a_defer : unit -> [> `Defer ] attrib
      val a_media : Html_types.mediadesc wrap -> [> `Media ] attrib
      val a_style : string wrap -> [> `Style_Attr ] attrib
      val a_property : string wrap -> [> `Property ] attrib
      val pcdata : string wrap -> [> `PCDATA ] elt
      val html :
        ?a:Html_types.html_attrib attrib list ->
        [< `Head ] elt wrap -> [< `Body ] elt wrap -> [> `Html ] elt
      val head :
        ?a:Html_types.head_attrib attrib list ->
        [< `Title ] elt wrap ->
        Html_types.head_content_fun elt list_wrap -> [> Html_types.head ] elt
      val base : ([< Html_types.base_attrib ], [> Html_types.base ]) nullary
      val title :
        (Html_types.title_attrib, [< Html_types.title_content_fun ],
         [> Html_types.title ])
        unary
      val body :
        ([< Html_types.body_attrib ], [< Html_types.body_content_fun ],
         [> Html_types.body ])
        star
      val svg :
        ?a:[< Html_types.svg_attrib ] Svg.D.Raw.attrib list ->
        [< Html_types.svg_content ] Svg.D.Raw.elt list_wrap ->
        [> Html_types.svg ] elt
      val footer :
        ([< Html_types.common ], [< Html_types.flow5_without_header_footer ],
         [> `Footer ])
        star
      val header :
        ([< Html_types.common ], [< Html_types.flow5_without_header_footer ],
         [> `Header ])
        star
      val section :
        ([< Html_types.section_attrib ], [< Html_types.section_content_fun ],
         [> Html_types.section ])
        star
      val nav :
        ([< Html_types.nav_attrib ], [< Html_types.nav_content_fun ],
         [> Html_types.nav ])
        star
      val h1 :
        ([< Html_types.h1_attrib ], [< Html_types.h1_content_fun ],
         [> Html_types.h1 ])
        star
      val h2 :
        ([< Html_types.h2_attrib ], [< Html_types.h2_content_fun ],
         [> Html_types.h2 ])
        star
      val h3 :
        ([< Html_types.h3_attrib ], [< Html_types.h3_content_fun ],
         [> Html_types.h3 ])
        star
      val h4 :
        ([< Html_types.h4_attrib ], [< Html_types.h4_content_fun ],
         [> Html_types.h4 ])
        star
      val h5 :
        ([< Html_types.h5_attrib ], [< Html_types.h5_content_fun ],
         [> Html_types.h5 ])
        star
      val h6 :
        ([< Html_types.h6_attrib ], [< Html_types.h6_content_fun ],
         [> Html_types.h6 ])
        star
      val hgroup :
        ([< Html_types.hgroup_attrib ], [< Html_types.hgroup_content_fun ],
         [> Html_types.hgroup ])
        star
      val address :
        ([< Html_types.address_attrib ], [< Html_types.address_content_fun ],
         [> Html_types.address ])
        star
      val article :
        ([< Html_types.article_attrib ], [< Html_types.article_content_fun ],
         [> Html_types.article ])
        star
      val aside :
        ([< Html_types.aside_attrib ], [< Html_types.aside_content_fun ],
         [> Html_types.aside ])
        star
      val main :
        ([< Html_types.main_attrib ], [< Html_types.main_content_fun ],
         [> Html_types.main ])
        star
      val p :
        ([< Html_types.p_attrib ], [< Html_types.p_content_fun ],
         [> Html_types.p ])
        star
      val pre :
        ([< Html_types.pre_attrib ], [< Html_types.pre_content_fun ],
         [> Html_types.pre ])
        star
      val blockquote :
        ([< Html_types.blockquote_attrib ],
         [< Html_types.blockquote_content_fun ], [> Html_types.blockquote ])
        star
      val div :
        ([< Html_types.div_attrib ], [< Html_types.div_content_fun ],
         [> Html_types.div ])
        star
      val dl :
        ([< Html_types.dl_attrib ], [< Html_types.dl_content_fun ],
         [> Html_types.dl ])
        star
      val ol :
        ([< Html_types.ol_attrib ], [< Html_types.ol_content_fun ],
         [> Html_types.ol ])
        star
      val ul :
        ([< Html_types.ul_attrib ], [< Html_types.ul_content_fun ],
         [> Html_types.ul ])
        star
      val dd :
        ([< Html_types.dd_attrib ], [< Html_types.dd_content_fun ],
         [> Html_types.dd ])
        star
      val dt :
        ([< Html_types.dt_attrib ], [< Html_types.dt_content_fun ],
         [> Html_types.dt ])
        star
      val li :
        ([< Html_types.li_attrib ], [< Html_types.li_content_fun ],
         [> Html_types.li ])
        star
      val figcaption :
        ([< Html_types.figcaption_attrib ],
         [< Html_types.figcaption_content_fun ], [> Html_types.figcaption ])
        star
      val figure :
        ?figcaption:[ `Bottom of [< `Figcaption ] elt wrap
                    | `Top of [< `Figcaption ] elt wrap ] ->
        ([< Html_types.figure_attrib ], [< Html_types.figure_content_fun ],
         [> Html_types.figure ])
        star
      val hr : ([< Html_types.hr_attrib ], [> Html_types.hr ]) nullary
      val b :
        ([< Html_types.b_attrib ], [< Html_types.b_content_fun ],
         [> Html_types.b ])
        star
      val i :
        ([< Html_types.i_attrib ], [< Html_types.i_content_fun ],
         [> Html_types.i ])
        star
      val u :
        ([< Html_types.u_attrib ], [< Html_types.u_content_fun ],
         [> Html_types.u ])
        star
      val small :
        ([< Html_types.small_attrib ], [< Html_types.small_content_fun ],
         [> Html_types.small ])
        star
      val sub :
        ([< Html_types.sub_attrib ], [< Html_types.sub_content_fun ],
         [> Html_types.sub ])
        star
      val sup :
        ([< Html_types.sup_attrib ], [< Html_types.sup_content_fun ],
         [> Html_types.sup ])
        star
      val mark :
        ([< Html_types.mark_attrib ], [< Html_types.mark_content_fun ],
         [> Html_types.mark ])
        star
      val wbr : ([< Html_types.wbr_attrib ], [> Html_types.wbr ]) nullary
      val bdo :
        dir:[< `Ltr | `Rtl ] wrap ->
        ([< Html_types.common ], [< Html_types.phrasing ], [> `Bdo ]) star
      val abbr :
        ([< Html_types.abbr_attrib ], [< Html_types.abbr_content_fun ],
         [> Html_types.abbr ])
        star
      val br : ([< Html_types.br_attrib ], [> Html_types.br ]) nullary
      val cite :
        ([< Html_types.cite_attrib ], [< Html_types.cite_content_fun ],
         [> Html_types.cite ])
        star
      val code :
        ([< Html_types.code_attrib ], [< Html_types.code_content_fun ],
         [> Html_types.code ])
        star
      val dfn :
        ([< Html_types.dfn_attrib ], [< Html_types.dfn_content_fun ],
         [> Html_types.dfn ])
        star
      val em :
        ([< Html_types.em_attrib ], [< Html_types.em_content_fun ],
         [> Html_types.em ])
        star
      val kbd :
        ([< Html_types.kbd_attrib ], [< Html_types.kbd_content_fun ],
         [> Html_types.kbd ])
        star
      val q :
        ([< Html_types.q_attrib ], [< Html_types.q_content_fun ],
         [> Html_types.q ])
        star
      val samp :
        ([< Html_types.samp_attrib ], [< Html_types.samp_content_fun ],
         [> Html_types.samp ])
        star
      val span :
        ([< Html_types.span_attrib ], [< Html_types.span_content_fun ],
         [> Html_types.span ])
        star
      val strong :
        ([< Html_types.strong_attrib ], [< Html_types.strong_content_fun ],
         [> Html_types.strong ])
        star
      val time :
        ([< Html_types.time_attrib ], [< Html_types.time_content_fun ],
         [> Html_types.time ])
        star
      val var :
        ([< Html_types.var_attrib ], [< Html_types.var_content_fun ],
         [> Html_types.var ])
        star
      val del : ([< Html_types.del_attrib ], 'a, [> `Del of 'a ]) star
      val ins : ([< Html_types.ins_attrib ], 'a, [> `Ins of 'a ]) star
      val img :
        src:Xml.uri wrap ->
        alt:Html_types.text wrap ->
        ([< Html_types.img_attrib ], [> Html_types.img ]) nullary
      val iframe :
        ([< `Accesskey
          | `Class
          | `Contenteditable
          | `Contextmenu
          | `Dir
          | `Draggable
          | `Height
          | `Hidden
          | `Id
          | `Lang
          | `Name
          | `OnAbort
          | `OnBlur
          | `OnCanPlay
          | `OnCanPlayThrough
          | `OnChange
          | `OnClick
          | `OnContextMenu
          | `OnDblClick
          | `OnDrag
          | `OnDragEnd
          | `OnDragEnter
          | `OnDragLeave
          | `OnDragOver
          | `OnDragStart
          | `OnDrop
          | `OnDurationChange
          | `OnEmptied
          | `OnEnded
          | `OnError
          | `OnFocus
          | `OnFormChange
          | `OnFormInput
          | `OnInput
          | `OnInvalid
          | `OnKeyDown
          | `OnKeyPress
          | `OnKeyUp
          | `OnLoad
          | `OnLoadStart
          | `OnLoadedData
          | `OnLoadedMetaData
          | `OnMouseDown
          | `OnMouseMove
          | `OnMouseOut
          | `OnMouseOver
          | `OnMouseUp
          | `OnMouseWheel
          | `OnPause
          | `OnPlay
          | `OnPlaying
          | `OnProgress
          | `OnRateChange
          | `OnReadyStateChange
          | `OnScroll
          | `OnSeeked
          | `OnSeeking
          | `OnSelect
          | `OnShow
          | `OnStalled
          | `OnSubmit
          | `OnSuspend
          | `OnTimeUpdate
          | `OnVolumeChange
          | `OnWaiting
          | `Sandbox
          | `Seamless
          | `Spellcheck
          | `Src
          | `Style_Attr
          | `Tabindex
          | `Title
          | `User_data
          | `Width
          | `XML_lang
          | `XMLns ],
         [< `PCDATA ], [> `Iframe ])
        star
      val object_ :
        ?params:[< `Param ] elt list_wrap ->
        ([< `Accesskey
          | `Class
          | `Contenteditable
          | `Contextmenu
          | `Data
          | `Dir
          | `Draggable
          | `Form
          | `Height
          | `Hidden
          | `Id
          | `Lang
          | `Mime_type
          | `Name
          | `OnAbort
          | `OnBlur
          | `OnCanPlay
          | `OnCanPlayThrough
          | `OnChange
          | `OnClick
          | `OnContextMenu
          | `OnDblClick
          | `OnDrag
          | `OnDragEnd
          | `OnDragEnter
          | `OnDragLeave
          | `OnDragOver
          | `OnDragStart
          | `OnDrop
          | `OnDurationChange
          | `OnEmptied
          | `OnEnded
          | `OnError
          | `OnFocus
          | `OnFormChange
          | `OnFormInput
          | `OnInput
          | `OnInvalid
          | `OnKeyDown
          | `OnKeyPress
          | `OnKeyUp
          | `OnLoad
          | `OnLoadStart
          | `OnLoadedData
          | `OnLoadedMetaData
          | `OnMouseDown
          | `OnMouseMove
          | `OnMouseOut
          | `OnMouseOver
          | `OnMouseUp
          | `OnMouseWheel
          | `OnPause
          | `OnPlay
          | `OnPlaying
          | `OnProgress
          | `OnRateChange
          | `OnReadyStateChange
          | `OnScroll
          | `OnSeeked
          | `OnSeeking
          | `OnSelect
          | `OnShow
          | `OnStalled
          | `OnSubmit
          | `OnSuspend
          | `OnTimeUpdate
          | `OnVolumeChange
          | `OnWaiting
          | `Spellcheck
          | `Style_Attr
          | `Tabindex
          | `Title
          | `Usemap
          | `User_data
          | `Width
          | `XML_lang
          | `XMLns ],
         'a, [> `Object of 'a ])
        star
      val param :
        ([< Html_types.param_attrib ], [> Html_types.param ]) nullary
      val embed :
        ([< `Accesskey
          | `Class
          | `Contenteditable
          | `Contextmenu
          | `Dir
          | `Draggable
          | `Height
          | `Hidden
          | `Id
          | `Lang
          | `Mime_type
          | `OnAbort
          | `OnBlur
          | `OnCanPlay
          | `OnCanPlayThrough
          | `OnChange
          | `OnClick
          | `OnContextMenu
          | `OnDblClick
          | `OnDrag
          | `OnDragEnd
          | `OnDragEnter
          | `OnDragLeave
          | `OnDragOver
          | `OnDragStart
          | `OnDrop
          | `OnDurationChange
          | `OnEmptied
          | `OnEnded
          | `OnError
          | `OnFocus
          | `OnFormChange
          | `OnFormInput
          | `OnInput
          | `OnInvalid
          | `OnKeyDown
          | `OnKeyPress
          | `OnKeyUp
          | `OnLoad
          | `OnLoadStart
          | `OnLoadedData
          | `OnLoadedMetaData
          | `OnMouseDown
          | `OnMouseMove
          | `OnMouseOut
          | `OnMouseOver
          | `OnMouseUp
          | `OnMouseWheel
          | `OnPause
          | `OnPlay
          | `OnPlaying
          | `OnProgress
          | `OnRateChange
          | `OnReadyStateChange
          | `OnScroll
          | `OnSeeked
          | `OnSeeking
          | `OnSelect
          | `OnShow
          | `OnStalled
          | `OnSubmit
          | `OnSuspend
          | `OnTimeUpdate
          | `OnVolumeChange
          | `OnWaiting
          | `Spellcheck
          | `Src
          | `Style_Attr
          | `Tabindex
          | `Title
          | `User_data
          | `Width
          | `XML_lang
          | `XMLns ],
         [> `Embed ])
        nullary
      val audio :
        ?src:Xml.uri wrap ->
        ?srcs:[< Html_types.source ] elt list_wrap ->
        ([< Html_types.audio_attrib ], 'a, [> 'a Html_types.audio ]) star
      val video :
        ?src:Xml.uri wrap ->
        ?srcs:[< Html_types.source ] elt list_wrap ->
        ([< Html_types.video_attrib ], 'a, [> 'a Html_types.video ]) star
      val canvas :
        ([< Html_types.canvas_attrib ], 'a, [> 'a Html_types.canvas ]) star
      val source :
        ([< Html_types.source_attrib ], [> Html_types.source ]) nullary
      val area :
        alt:Html_types.text wrap ->
        ([< `Accesskey
          | `Alt
          | `Class
          | `Contenteditable
          | `Contextmenu
          | `Coords
          | `Dir
          | `Draggable
          | `Hidden
          | `Hreflang
          | `Id
          | `Lang
          | `Media
          | `Mime_type
          | `OnAbort
          | `OnBlur
          | `OnCanPlay
          | `OnCanPlayThrough
          | `OnChange
          | `OnClick
          | `OnContextMenu
          | `OnDblClick
          | `OnDrag
          | `OnDragEnd
          | `OnDragEnter
          | `OnDragLeave
          | `OnDragOver
          | `OnDragStart
          | `OnDrop
          | `OnDurationChange
          | `OnEmptied
          | `OnEnded
          | `OnError
          | `OnFocus
          | `OnFormChange
          | `OnFormInput
          | `OnInput
          | `OnInvalid
          | `OnKeyDown
          | `OnKeyPress
          | `OnKeyUp
          | `OnLoad
          | `OnLoadStart
          | `OnLoadedData
          | `OnLoadedMetaData
          | `OnMouseDown
          | `OnMouseMove
          | `OnMouseOut
          | `OnMouseOver
          | `OnMouseUp
          | `OnMouseWheel
          | `OnPause
          | `OnPlay
          | `OnPlaying
          | `OnProgress
          | `OnRateChange
          | `OnReadyStateChange
          | `OnScroll
          | `OnSeeked
          | `OnSeeking
          | `OnSelect
          | `OnShow
          | `OnStalled
          | `OnSubmit
          | `OnSuspend
          | `OnTimeUpdate
          | `OnVolumeChange
          | `OnWaiting
          | `Rel
          | `Shape
          | `Spellcheck
          | `Style_Attr
          | `Tabindex
          | `Target
          | `Title
          | `User_data
          | `XML_lang
          | `XMLns ],
         [> `Area ])
        nullary
      val map : ([< Html_types.map_attrib ], 'a, [> `A of 'a ]) star
      val caption :
        ([< Html_types.caption_attrib ], [< Html_types.caption_content_fun ],
         [> Html_types.caption ])
        star
      val table :
        ?caption:[< Html_types.caption ] elt wrap ->
        ?columns:[< Html_types.colgroup ] elt list_wrap ->
        ?thead:[< Html_types.thead ] elt wrap ->
        ?tfoot:[< Html_types.tfoot ] elt wrap ->
        ([< Html_types.table_attrib ], [< Html_types.table_content_fun ],
         [> Html_types.table ])
        star
      val tablex :
        ?caption:[< Html_types.caption ] elt wrap ->
        ?columns:[< Html_types.colgroup ] elt list_wrap ->
        ?thead:[< Html_types.thead ] elt wrap ->
        ?tfoot:[< Html_types.tfoot ] elt wrap ->
        ([< Html_types.tablex_attrib ], [< Html_types.tablex_content_fun ],
         [> Html_types.tablex ])
        star
      val colgroup :
        ([< Html_types.colgroup_attrib ],
         [< Html_types.colgroup_content_fun ], [> Html_types.colgroup ])
        star
      val col : ([< Html_types.col_attrib ], [> Html_types.col ]) nullary
      val thead :
        ([< Html_types.thead_attrib ], [< Html_types.thead_content_fun ],
         [> Html_types.thead ])
        star
      val tbody :
        ([< Html_types.tbody_attrib ], [< Html_types.tbody_content_fun ],
         [> Html_types.tbody ])
        star
      val tfoot :
        ([< Html_types.tfoot_attrib ], [< Html_types.tfoot_content_fun ],
         [> Html_types.tfoot ])
        star
      val td :
        ([< Html_types.td_attrib ], [< Html_types.td_content_fun ],
         [> Html_types.td ])
        star
      val th :
        ([< Html_types.th_attrib ], [< Html_types.th_content_fun ],
         [> Html_types.th ])
        star
      val tr :
        ([< Html_types.tr_attrib ], [< Html_types.tr_content_fun ],
         [> Html_types.tr ])
        star
      val form :
        ([< Html_types.form_attrib ], [< Html_types.form_content_fun ],
         [> Html_types.form ])
        star
      val fieldset :
        ?legend:[ `Legend ] elt wrap ->
        ([< `Accesskey
          | `Class
          | `Contenteditable
          | `Contextmenu
          | `Dir
          | `Disabled
          | `Draggable
          | `Form
          | `Hidden
          | `Id
          | `Lang
          | `Name
          | `OnAbort
          | `OnBlur
          | `OnCanPlay
          | `OnCanPlayThrough
          | `OnChange
          | `OnClick
          | `OnContextMenu
          | `OnDblClick
          | `OnDrag
          | `OnDragEnd
          | `OnDragEnter
          | `OnDragLeave
          | `OnDragOver
          | `OnDragStart
          | `OnDrop
          | `OnDurationChange
          | `OnEmptied
          | `OnEnded
          | `OnError
          | `OnFocus
          | `OnFormChange
          | `OnFormInput
          | `OnInput
          | `OnInvalid
          | `OnKeyDown
          | `OnKeyPress
          | `OnKeyUp
          | `OnLoad
          | `OnLoadStart
          | `OnLoadedData
          | `OnLoadedMetaData
          | `OnMouseDown
          | `OnMouseMove
          | `OnMouseOut
          | `OnMouseOver
          | `OnMouseUp
          | `OnMouseWheel
          | `OnPause
          | `OnPlay
          | `OnPlaying
          | `OnProgress
          | `OnRateChange
          | `OnReadyStateChange
          | `OnScroll
          | `OnSeeked
          | `OnSeeking
          | `OnSelect
          | `OnShow
          | `OnStalled
          | `OnSubmit
          | `OnSuspend
          | `OnTimeUpdate
          | `OnVolumeChange
          | `OnWaiting
          | `Spellcheck
          | `Style_Attr
          | `Tabindex
          | `Title
          | `User_data
          | `XML_lang
          | `XMLns ],
         [< Html_types.flow5 ], [> `Fieldset ])
        star
      val legend :
        ([< Html_types.legend_attrib ], [< Html_types.legend_content_fun ],
         [> Html_types.legend ])
        star
      val label :
        ([< Html_types.label_attrib ], [< Html_types.label_content_fun ],
         [> Html_types.label ])
        star
      val input :
        ([< Html_types.input_attrib ], [> Html_types.input ]) nullary
      val button :
        ([< Html_types.button_attrib ], [< Html_types.button_content_fun ],
         [> Html_types.button ])
        star
      val select :
        ([< Html_types.select_attrib ], [< Html_types.select_content_fun ],
         [> Html_types.select ])
        star
      val datalist :
        ?children:[< `Options of [< `Option ] elt list_wrap
                   | `Phras of [< Html_types.phrasing ] elt list_wrap ] ->
        ([< Html_types.common ], [> `Datalist ]) nullary
      val optgroup :
        label:Html_types.text wrap ->
        ([< `Accesskey
          | `Class
          | `Contenteditable
          | `Contextmenu
          | `Dir
          | `Disabled
          | `Draggable
          | `Hidden
          | `Id
          | `Label
          | `Lang
          | `OnAbort
          | `OnBlur
          | `OnCanPlay
          | `OnCanPlayThrough
          | `OnChange
          | `OnClick
          | `OnContextMenu
          | `OnDblClick
          | `OnDrag
          | `OnDragEnd
          | `OnDragEnter
          | `OnDragLeave
          | `OnDragOver
          | `OnDragStart
          | `OnDrop
          | `OnDurationChange
          | `OnEmptied
          | `OnEnded
          | `OnError
          | `OnFocus
          | `OnFormChange
          | `OnFormInput
          | `OnInput
          | `OnInvalid
          | `OnKeyDown
          | `OnKeyPress
          | `OnKeyUp
          | `OnLoad
          | `OnLoadStart
          | `OnLoadedData
          | `OnLoadedMetaData
          | `OnMouseDown
          | `OnMouseMove
          | `OnMouseOut
          | `OnMouseOver
          | `OnMouseUp
          | `OnMouseWheel
          | `OnPause
          | `OnPlay
          | `OnPlaying
          | `OnProgress
          | `OnRateChange
          | `OnReadyStateChange
          | `OnScroll
          | `OnSeeked
          | `OnSeeking
          | `OnSelect
          | `OnShow
          | `OnStalled
          | `OnSubmit
          | `OnSuspend
          | `OnTimeUpdate
          | `OnVolumeChange
          | `OnWaiting
          | `Spellcheck
          | `Style_Attr
          | `Tabindex
          | `Title
          | `User_data
          | `XML_lang
          | `XMLns ],
         [< `Option ], [> `Optgroup ])
        star
      val option :
        ([< Html_types.option_attrib ], [< Html_types.option_content_fun ],
         [> Html_types.selectoption ])
        unary
      val textarea :
        ([< Html_types.textarea_attrib ],
         [< Html_types.textarea_content_fun ], [> Html_types.textarea ])
        unary
      val keygen :
        ([< Html_types.keygen_attrib ], [> Html_types.keygen ]) nullary
      val progress :
        ([< Html_types.progress_attrib ],
         [< Html_types.progress_content_fun ], [> Html_types.progress ])
        star
      val meter :
        ([< Html_types.meter_attrib ], [< Html_types.meter_content_fun ],
         [> Html_types.meter ])
        star
      val output_elt :
        ([< Html_types.output_elt_attrib ],
         [< Html_types.output_elt_content_fun ], [> Html_types.output_elt ])
        star
      val entity : string -> [> `PCDATA ] elt
      val space : unit -> [> `PCDATA ] elt
      val cdata : string -> [> `PCDATA ] elt
      val cdata_script : string -> [> `PCDATA ] elt
      val cdata_style : string -> [> `PCDATA ] elt
      val details :
        [< `Summary ] elt wrap ->
        ([< `Accesskey
          | `Class
          | `Contenteditable
          | `Contextmenu
          | `Dir
          | `Draggable
          | `Hidden
          | `Id
          | `Lang
          | `OnAbort
          | `OnBlur
          | `OnCanPlay
          | `OnCanPlayThrough
          | `OnChange
          | `OnClick
          | `OnContextMenu
          | `OnDblClick
          | `OnDrag
          | `OnDragEnd
          | `OnDragEnter
          | `OnDragLeave
          | `OnDragOver
          | `OnDragStart
          | `OnDrop
          | `OnDurationChange
          | `OnEmptied
          | `OnEnded
          | `OnError
          | `OnFocus
          | `OnFormChange
          | `OnFormInput
          | `OnInput
          | `OnInvalid
          | `OnKeyDown
          | `OnKeyPress
          | `OnKeyUp
          | `OnLoad
          | `OnLoadStart
          | `OnLoadedData
          | `OnLoadedMetaData
          | `OnMouseDown
          | `OnMouseMove
          | `OnMouseOut
          | `OnMouseOver
          | `OnMouseUp
          | `OnMouseWheel
          | `OnPause
          | `OnPlay
          | `OnPlaying
          | `OnProgress
          | `OnRateChange
          | `OnReadyStateChange
          | `OnScroll
          | `OnSeeked
          | `OnSeeking
          | `OnSelect
          | `OnShow
          | `OnStalled
          | `OnSubmit
          | `OnSuspend
          | `OnTimeUpdate
          | `OnVolumeChange
          | `OnWaiting
          | `Open
          | `Spellcheck
          | `Style_Attr
          | `Tabindex
          | `Title
          | `User_data
          | `XML_lang
          | `XMLns ],
         [< Html_types.flow5 ], [> `Details ])
        star
      val summary :
        ([< Html_types.summary_attrib ], [< Html_types.summary_content_fun ],
         [> Html_types.summary ])
        star
      val command :
        label:Html_types.text wrap ->
        ([< `Accesskey
          | `Checked
          | `Class
          | `Command_Type
          | `Contenteditable
          | `Contextmenu
          | `Dir
          | `Disabled
          | `Draggable
          | `Hidden
          | `Icon
          | `Id
          | `Lang
          | `OnAbort
          | `OnBlur
          | `OnCanPlay
          | `OnCanPlayThrough
          | `OnChange
          | `OnClick
          | `OnContextMenu
          | `OnDblClick
          | `OnDrag
          | `OnDragEnd
          | `OnDragEnter
          | `OnDragLeave
          | `OnDragOver
          | `OnDragStart
          | `OnDrop
          | `OnDurationChange
          | `OnEmptied
          | `OnEnded
          | `OnError
          | `OnFocus
          | `OnFormChange
          | `OnFormInput
          | `OnInput
          | `OnInvalid
          | `OnKeyDown
          | `OnKeyPress
          | `OnKeyUp
          | `OnLoad
          | `OnLoadStart
          | `OnLoadedData
          | `OnLoadedMetaData
          | `OnMouseDown
          | `OnMouseMove
          | `OnMouseOut
          | `OnMouseOver
          | `OnMouseUp
          | `OnMouseWheel
          | `OnPause
          | `OnPlay
          | `OnPlaying
          | `OnProgress
          | `OnRateChange
          | `OnReadyStateChange
          | `OnScroll
          | `OnSeeked
          | `OnSeeking
          | `OnSelect
          | `OnShow
          | `OnStalled
          | `OnSubmit
          | `OnSuspend
          | `OnTimeUpdate
          | `OnVolumeChange
          | `OnWaiting
          | `Radiogroup
          | `Spellcheck
          | `Style_Attr
          | `Tabindex
          | `Title
          | `User_data
          | `XML_lang
          | `XMLns ],
         [> `Command ])
        nullary
      val menu :
        ?children:[< `Flows of [< Html_types.flow5 ] elt list_wrap
                   | `Lis of [< `Li of [< Html_types.common ] ] elt list_wrap ] ->
        ([< `Accesskey
          | `Class
          | `Contenteditable
          | `Contextmenu
          | `Dir
          | `Draggable
          | `Hidden
          | `Id
          | `Label
          | `Lang
          | `Menu_Type
          | `OnAbort
          | `OnBlur
          | `OnCanPlay
          | `OnCanPlayThrough
          | `OnChange
          | `OnClick
          | `OnContextMenu
          | `OnDblClick
          | `OnDrag
          | `OnDragEnd
          | `OnDragEnter
          | `OnDragLeave
          | `OnDragOver
          | `OnDragStart
          | `OnDrop
          | `OnDurationChange
          | `OnEmptied
          | `OnEnded
          | `OnError
          | `OnFocus
          | `OnFormChange
          | `OnFormInput
          | `OnInput
          | `OnInvalid
          | `OnKeyDown
          | `OnKeyPress
          | `OnKeyUp
          | `OnLoad
          | `OnLoadStart
          | `OnLoadedData
          | `OnLoadedMetaData
          | `OnMouseDown
          | `OnMouseMove
          | `OnMouseOut
          | `OnMouseOver
          | `OnMouseUp
          | `OnMouseWheel
          | `OnPause
          | `OnPlay
          | `OnPlaying
          | `OnProgress
          | `OnRateChange
          | `OnReadyStateChange
          | `OnScroll
          | `OnSeeked
          | `OnSeeking
          | `OnSelect
          | `OnShow
          | `OnStalled
          | `OnSubmit
          | `OnSuspend
          | `OnTimeUpdate
          | `OnVolumeChange
          | `OnWaiting
          | `Spellcheck
          | `Style_Attr
          | `Tabindex
          | `Title
          | `User_data
          | `XML_lang
          | `XMLns ],
         [> `Menu ])
        nullary
      val script :
        ([< Html_types.script_attrib ], [< Html_types.script_content_fun ],
         [> Html_types.script ])
        unary
      val noscript :
        ([< Html_types.noscript_attrib ],
         [< Html_types.noscript_content_fun ], [> Html_types.noscript ])
        star
      val meta : ([< Html_types.meta_attrib ], [> Html_types.meta ]) nullary
      val style :
        ([< Html_types.style_attrib ], [< Html_types.style_content_fun ],
         [> Html_types.style ])
        star
      val link :
        rel:Html_types.linktypes wrap ->
        href:Xml.uri wrap ->
        ([< `Accesskey
          | `Class
          | `Contenteditable
          | `Contextmenu
          | `Dir
          | `Draggable
          | `Hidden
          | `Href
          | `Hreflang
          | `Id
          | `Lang
          | `Media
          | `Mime_type
          | `OnAbort
          | `OnBlur
          | `OnCanPlay
          | `OnCanPlayThrough
          | `OnChange
          | `OnClick
          | `OnContextMenu
          | `OnDblClick
          | `OnDrag
          | `OnDragEnd
          | `OnDragEnter
          | `OnDragLeave
          | `OnDragOver
          | `OnDragStart
          | `OnDrop
          | `OnDurationChange
          | `OnEmptied
          | `OnEnded
          | `OnError
          | `OnFocus
          | `OnFormChange
          | `OnFormInput
          | `OnInput
          | `OnInvalid
          | `OnKeyDown
          | `OnKeyPress
          | `OnKeyUp
          | `OnLoad
          | `OnLoadStart
          | `OnLoadedData
          | `OnLoadedMetaData
          | `OnMouseDown
          | `OnMouseMove
          | `OnMouseOut
          | `OnMouseOver
          | `OnMouseUp
          | `OnMouseWheel
          | `OnPause
          | `OnPlay
          | `OnPlaying
          | `OnProgress
          | `OnRateChange
          | `OnReadyStateChange
          | `OnScroll
          | `OnSeeked
          | `OnSeeking
          | `OnSelect
          | `OnShow
          | `OnStalled
          | `OnSubmit
          | `OnSuspend
          | `OnTimeUpdate
          | `OnVolumeChange
          | `OnWaiting
          | `Rel
          | `Sizes
          | `Spellcheck
          | `Style_Attr
          | `Tabindex
          | `Title
          | `User_data
          | `XML_lang
          | `XMLns ],
         [> `Link ])
        nullary
      val rt :
        ([< Html_types.rt_attrib ], [< Html_types.rt_content_fun ],
         [> Html_types.rt ])
        star
      val rp :
        ([< Html_types.rp_attrib ], [< Html_types.rp_content_fun ],
         [> Html_types.rp ])
        star
      val ruby :
        ([< Html_types.ruby_attrib ], [< Html_types.ruby_content_fun ],
         [> Html_types.ruby ])
        star
      val tot : Xml.elt -> 'a elt
      val totl : Xml.elt list_wrap -> 'a elt list_wrap
      val toelt : 'a elt -> Xml.elt
      val toeltl : 'a elt list_wrap -> Xml.elt list_wrap
      val doc_toelt : doc -> Xml.elt
      val to_xmlattribs : 'a attrib list -> Xml.attrib list
      val to_attrib : Xml.attrib -> 'a attrib
      module Unsafe :
        sig
          val data : string wrap -> 'a elt
          val node :
            string -> ?a:'a attrib list -> 'b elt list_wrap -> 'c elt
          val leaf : string -> ?a:'a attrib list -> unit -> 'b elt
          val coerce_elt : 'a elt -> 'b elt
          val string_attrib : string -> string wrap -> 'a attrib
          val float_attrib : string -> float wrap -> 'a attrib
          val int_attrib : string -> int wrap -> 'a attrib
          val uri_attrib : string -> uri wrap -> 'a attrib
          val space_sep_attrib : string -> string list wrap -> 'a attrib
          val comma_sep_attrib : string -> string list wrap -> 'a attrib
        end
      type ('a, 'b, 'c) lazy_star =
          ?a:'a attrib list -> 'b elt list Eliom_lazy.request -> 'c elt
      val lazy_form :
        ([< Html_types.form_attrib ], [< Html_types.form_content_fun ],
         [> Html_types.form ])
        lazy_star
      val make_uri :
        ?absolute:bool ->
        ?absolute_path:bool ->
        ?https:bool ->
        service:('get, unit, Eliom_service.get, 'a, 'b, 'c, 'd,
                 [< `WithSuffix | `WithoutSuffix ], 'e, unit, 'f)
                Eliom_service.t ->
        ?hostname:string ->
        ?port:int ->
        ?fragment:string ->
        ?keep_nl_params:[ `All | `None | `Persistent ] ->
        ?nl_params:Eliom_parameter.nl_params_set -> 'get -> uri
      val uri_of_string : (unit -> string) -> uri
      val css_link :
        ?a:[< Html_types.link_attrib ] attrib list ->
        uri:uri -> unit -> [> Html_types.link ] elt
      val js_script :
        ?a:[< Html_types.script_attrib ] attrib list ->
        uri:uri -> unit -> [> Html_types.script ] elt
      val a :
        ?absolute:bool ->
        ?absolute_path:bool ->
        ?https:bool ->
        ?a:[< Html_types.a_attrib ] attrib list ->
        service:('get, unit, Eliom_service.get, 'b, 'c, 'd, 'e,
                 [< `WithSuffix | `WithoutSuffix ], 'f, unit,
                 Eliom_service.non_ocaml)
                Eliom_service.t ->
        ?hostname:string ->
        ?port:int ->
        ?fragment:string ->
        ?keep_nl_params:[ `All | `None | `Persistent ] ->
        ?nl_params:Eliom_parameter.nl_params_set ->
        ?xhr:bool -> 'a elt list -> 'get -> [> 'a Html_types.a ] elt
      module Form :
        sig
          type 'a param = 'a form_param
          val float : float param
          val int : int param
          val int32 : int32 param
          val int64 : int64 param
          val nativeint : nativeint param
          val bool : bool param
          val string : string param
          val user : ('a -> string) -> 'a param
          val make_post_uri_components :
            ?absolute:bool ->
            ?absolute_path:bool ->
            ?https:bool ->
            service:('get, 'post, Eliom_service.post, 'a, 'b, 'c, 'd,
                     [< `WithSuffix | `WithoutSuffix ], 'e, 'f, 'g)
                    Eliom_service.t ->
            ?hostname:string ->
            ?port:int ->
            ?fragment:string ->
            ?keep_nl_params:[ `All | `None | `Persistent ] ->
            ?nl_params:Eliom_parameter.nl_params_set ->
            ?keep_get_na_params:bool ->
            'get ->
            'post ->
            string * (string * Eliommod_parameters.param) list *
            string option * (string * Eliommod_parameters.param) list
          val get_form :
            ?absolute:bool ->
            ?absolute_path:bool ->
            ?https:bool ->
            ?a:[< Html_types.form_attrib ] attrib list ->
            service:('a, unit, Eliom_service.get, 'b, 'c, 'd, 'e,
                     [< `WithSuffix | `WithoutSuffix ], 'gn, 'f,
                     Eliom_service.non_ocaml)
                    Eliom_service.t ->
            ?hostname:string ->
            ?port:int ->
            ?fragment:string ->
            ?keep_nl_params:[ `All | `None | `Persistent ] ->
            ?nl_params:Eliom_parameter.nl_params_set ->
            ?xhr:bool ->
            ('gn -> [< Html_types.form_content ] elt list) ->
            [> Html_types.form ] elt
          val lwt_get_form :
            ?absolute:bool ->
            ?absolute_path:bool ->
            ?https:bool ->
            ?a:[< Html_types.form_attrib ] attrib list ->
            service:('a, unit, Eliom_service.get, 'b, 'c, 'd, 'e,
                     [< `WithSuffix | `WithoutSuffix ], 'gn, 'f,
                     Eliom_service.non_ocaml)
                    Eliom_service.t ->
            ?hostname:string ->
            ?port:int ->
            ?fragment:string ->
            ?keep_nl_params:[ `All | `None | `Persistent ] ->
            ?nl_params:Eliom_parameter.nl_params_set ->
            ?xhr:bool ->
            ('gn -> [< Html_types.form_content ] elt list Lwt.t) ->
            [> Html_types.form ] elt Lwt.t
          val post_form :
            ?absolute:bool ->
            ?absolute_path:bool ->
            ?https:bool ->
            ?a:[< Html_types.form_attrib ] attrib list ->
            service:('get, 'a, Eliom_service.post, 'b, 'c, 'd, 'e,
                     [< `WithSuffix | `WithoutSuffix ], 'f, 'pn,
                     Eliom_service.non_ocaml)
                    Eliom_service.t ->
            ?hostname:string ->
            ?port:int ->
            ?fragment:string ->
            ?keep_nl_params:[ `All | `None | `Persistent ] ->
            ?keep_get_na_params:bool ->
            ?nl_params:Eliom_parameter.nl_params_set ->
            ?xhr:bool ->
            ('pn -> [< Html_types.form_content ] elt list) ->
            'get -> [> Html_types.form ] elt
          val lwt_post_form :
            ?absolute:bool ->
            ?absolute_path:bool ->
            ?https:bool ->
            ?a:[< Html_types.form_attrib ] attrib list ->
            service:('get, 'a, Eliom_service.post, 'b, 'c, 'd, 'e,
                     [< `WithSuffix | `WithoutSuffix ], 'f, 'pn,
                     Eliom_service.non_ocaml)
                    Eliom_service.t ->
            ?hostname:string ->
            ?port:int ->
            ?fragment:string ->
            ?keep_nl_params:[ `All | `None | `Persistent ] ->
            ?keep_get_na_params:bool ->
            ?nl_params:Eliom_parameter.nl_params_set ->
            ?xhr:bool ->
            ('pn -> [< Html_types.form_content ] elt list Lwt.t) ->
            'get -> [> Html_types.form ] elt Lwt.t
          val input :
            ?a:[< Html_types.input_attrib ] attrib list ->
            input_type:[< Html_types.input_type ] ->
            ?name:[< 'a Eliom_parameter.setoneradio ]
                  Eliom_parameter.param_name ->
            ?value:'a -> 'a param -> [> Html_types.input ] elt
          val file_input :
            ?a:[< Html_types.input_attrib ] attrib list ->
            name:[< Eliom_lib.file_info Eliom_parameter.setoneradio ]
                 Eliom_parameter.param_name ->
            unit -> [> Html_types.input ] elt
          val image_input :
            ?a:[< Html_types.input_attrib ] attrib list ->
            name:[< Eliom_parameter.coordinates Eliom_parameter.oneradio ]
                 Eliom_parameter.param_name ->
            ?src:uri -> unit -> [> Html_types.input ] elt
          val checkbox :
            ?a:[< Html_types.input_attrib ] attrib list ->
            ?checked:bool ->
            name:[ `Set of 'a ] Eliom_parameter.param_name ->
            value:'a -> 'a param -> [> Html_types.input ] elt
          val bool_checkbox_one :
            ?a:[< Html_types.input_attrib ] attrib list ->
            ?checked:bool ->
            name:[ `One of bool ] Eliom_parameter.param_name ->
            unit -> [> Html_types.input ] elt
          val radio :
            ?a:[< Html_types.input_attrib ] attrib list ->
            ?checked:bool ->
            name:[ `Radio of 'a ] Eliom_parameter.param_name ->
            value:'a -> 'a param -> [> Html_types.input ] elt
          val string_radio_required :
            ?a:[< Html_types.input_attrib ] attrib list ->
            ?checked:bool ->
            name:[ `One of string ] Eliom_parameter.param_name ->
            value:string -> unit -> [> Html_types.input ] elt
          val button :
            ?a:[< Html_types.button_attrib ] attrib list ->
            button_type:[< Eliom_form_sigs.button_type ] ->
            name:[< 'a Eliom_parameter.setone ] Eliom_parameter.param_name ->
            value:'a ->
            'a param ->
            Html_types.button_content elt list -> [> Html_types.button ] elt
          val button_no_value :
            ?a:[< Html_types.button_attrib ] attrib list ->
            button_type:[< Eliom_form_sigs.button_type ] ->
            Html_types.button_content elt list -> [> Html_types.button ] elt
          val textarea :
            ?a:[< Html_types.textarea_attrib ] attrib list ->
            name:[< string Eliom_parameter.setoneradio ]
                 Eliom_parameter.param_name ->
            ?value:string -> unit -> [> Html_types.textarea ] elt
          type 'a soption =
              Html_types.option_attrib attrib list * 'a *
              Html_types.pcdata elt option * bool
          type 'a select_opt =
              Optgroup of
                [ `Accesskey
                | `Class
                | `Contenteditable
                | `Contextmenu
                | `Dir
                | `Disabled
                | `Draggable
                | `Hidden
                | `Id
                | `Lang
                | `OnAbort
                | `OnBlur
                | `OnCanPlay
                | `OnCanPlayThrough
                | `OnChange
                | `OnClick
                | `OnContextMenu
                | `OnDblClick
                | `OnDrag
                | `OnDragEnd
                | `OnDragEnter
                | `OnDragLeave
                | `OnDragOver
                | `OnDragStart
                | `OnDrop
                | `OnDurationChange
                | `OnEmptied
                | `OnEnded
                | `OnError
                | `OnFocus
                | `OnFormChange
                | `OnFormInput
                | `OnInput
                | `OnInvalid
                | `OnKeyDown
                | `OnKeyPress
                | `OnKeyUp
                | `OnLoad
                | `OnLoadStart
                | `OnLoadedData
                | `OnLoadedMetaData
                | `OnMouseDown
                | `OnMouseMove
                | `OnMouseOut
                | `OnMouseOver
                | `OnMouseUp
                | `OnMouseWheel
                | `OnPause
                | `OnPlay
                | `OnPlaying
                | `OnProgress
                | `OnRateChange
                | `OnReadyStateChange
                | `OnScroll
                | `OnSeeked
                | `OnSeeking
                | `OnSelect
                | `OnShow
                | `OnStalled
                | `OnSubmit
                | `OnSuspend
                | `OnTimeUpdate
                | `OnVolumeChange
                | `OnWaiting
                | `Spellcheck
                | `Style_Attr
                | `Tabindex
                | `Title
                | `User_data
                | `XML_lang
                | `XMLns ] attrib list * string * 'a soption *
                'a soption list
            | Option of 'a soption
          val select :
            ?a:[< Html_types.select_attrib ] attrib list ->
            ?required:Html_types.pcdata elt ->
            name:[ `One of 'a ] Eliom_parameter.param_name ->
            'a param ->
            'a select_opt -> 'a select_opt list -> [> Html_types.select ] elt
          val multiple_select :
            ?a:[< Html_types.select_attrib ] attrib list ->
            ?required:Html_types.pcdata elt ->
            name:[ `Set of 'a ] Eliom_parameter.param_name ->
            'a param ->
            'a select_opt -> 'a select_opt list -> [> Html_types.select ] elt
        end
    end
  module R :
    sig
      val node :
        'a Eliom_content.Html.elt React.signal Eliom_client_value.t ->
        'a Eliom_content.Html.elt
      val filter_attrib :
        'a Eliom_content.Html.attrib ->
        bool React.signal -> 'a Eliom_content.Html.attrib
      module Raw :
        sig
          type 'a elt = 'a elt
          type doc = [ `Html ] elt
          type 'a attrib = 'a attrib
          module Xml :
            sig
              module W :
                sig
                  type 'a t = 'a Eliom_content_core.Xml_wed.W.t
                  val return : 'a -> 'a t
                  type ('a, 'b) ft = ('a, 'b) Eliom_content_core.Xml_wed.W.ft
                  val fmap : ('a, 'b) ft -> 'a t -> 'b t
                  type 'a tlist = 'a Eliom_content_core.Xml_wed.W.tlist
                  val nil : unit -> 'a tlist
                  val singleton : 'a t -> 'a tlist
                  val cons : 'a t -> 'a tlist -> 'a tlist
                  val append : 'a tlist -> 'a tlist -> 'a tlist
                  val map : ('a, 'b) ft -> 'a tlist -> 'b tlist
                end
              type 'a wrap = 'a W.t
              type 'a list_wrap = 'a W.tlist
              type uri = Eliom_content_core.Xml_wed.uri
              val string_of_uri : (uri, string) W.ft
              val uri_of_string : (string, uri) W.ft
              type aname = string
              type event_handler = Eliom_content_core.Xml_wed.event_handler
              type mouse_event_handler =
                  Eliom_content_core.Xml_wed.mouse_event_handler
              type keyboard_event_handler =
                  Eliom_content_core.Xml_wed.keyboard_event_handler
              type attrib = Eliom_content_core.Xml_wed.attrib
              val float_attrib : aname -> float wrap -> attrib
              val int_attrib : aname -> int wrap -> attrib
              val string_attrib : aname -> string wrap -> attrib
              val space_sep_attrib : aname -> string list wrap -> attrib
              val comma_sep_attrib : aname -> string list wrap -> attrib
              val event_handler_attrib : aname -> event_handler -> attrib
              val mouse_event_handler_attrib :
                aname -> mouse_event_handler -> attrib
              val keyboard_event_handler_attrib :
                aname -> keyboard_event_handler -> attrib
              val uri_attrib : aname -> uri wrap -> attrib
              val uris_attrib : aname -> uri list wrap -> attrib
              type elt = Eliom_content_core.Xml_wed.elt
              type ename = string
              val empty : unit -> elt
              val comment : string -> elt
              val pcdata : string wrap -> elt
              val encodedpcdata : string wrap -> elt
              val entity : string -> elt
              val leaf : ?a:attrib list -> ename -> elt
              val node : ?a:attrib list -> ename -> elt list_wrap -> elt
              val cdata : string -> elt
              val cdata_script : string -> elt
              val cdata_style : string -> elt
            end
          type 'a wrap = 'a Xml.W.t
          type 'a list_wrap = 'a Xml.W.tlist
          type ('a, 'b) nullary = ?a:'a attrib list -> unit -> 'b elt
          type ('a, 'b, 'c) unary =
              ?a:'a attrib list -> 'b elt wrap -> 'c elt
          type ('a, 'b, 'c) star =
              ?a:'a attrib list -> 'b elt list_wrap -> 'c elt
          module Info : Xml_sigs.Info
          type uri = Xml.uri
          val string_of_uri : (uri, string) Xml.W.ft
          val uri_of_string : (string, uri) Xml.W.ft
          val a_class : Html_types.nmtokens wrap -> [> `Class ] attrib
          val a_user_data :
            Html_types.nmtoken ->
            Html_types.text wrap -> [> `User_data ] attrib
          val a_id : Html_types.text wrap -> [> `Id ] attrib
          val a_title : Html_types.text wrap -> [> `Title ] attrib
          val a_xml_lang :
            Html_types.languagecode wrap -> [> `XML_lang ] attrib
          val a_lang : Html_types.languagecode wrap -> [> `Lang ] attrib
          val a_onabort : Xml.event_handler -> [> `OnAbort ] attrib
          val a_onafterprint : Xml.event_handler -> [> `OnAfterPrint ] attrib
          val a_onbeforeprint :
            Xml.event_handler -> [> `OnBeforePrint ] attrib
          val a_onbeforeunload :
            Xml.event_handler -> [> `OnBeforeUnload ] attrib
          val a_onblur : Xml.event_handler -> [> `OnBlur ] attrib
          val a_oncanplay : Xml.event_handler -> [> `OnCanPlay ] attrib
          val a_oncanplaythrough :
            Xml.event_handler -> [> `OnCanPlayThrough ] attrib
          val a_onchange : Xml.event_handler -> [> `OnChange ] attrib
          val a_ondurationchange :
            Xml.event_handler -> [> `OnDurationChange ] attrib
          val a_onemptied : Xml.event_handler -> [> `OnEmptied ] attrib
          val a_onended : Xml.event_handler -> [> `OnEnded ] attrib
          val a_onerror : Xml.event_handler -> [> `OnError ] attrib
          val a_onfocus : Xml.event_handler -> [> `OnFocus ] attrib
          val a_onformchange : Xml.event_handler -> [> `OnFormChange ] attrib
          val a_onforminput : Xml.event_handler -> [> `OnFormInput ] attrib
          val a_onhashchange : Xml.event_handler -> [> `OnHashChange ] attrib
          val a_oninput : Xml.event_handler -> [> `OnInput ] attrib
          val a_oninvalid : Xml.event_handler -> [> `OnInvalid ] attrib
          val a_onmousewheel : Xml.event_handler -> [> `OnMouseWheel ] attrib
          val a_onoffline : Xml.event_handler -> [> `OnOffLine ] attrib
          val a_ononline : Xml.event_handler -> [> `OnOnLine ] attrib
          val a_onpause : Xml.event_handler -> [> `OnPause ] attrib
          val a_onplay : Xml.event_handler -> [> `OnPlay ] attrib
          val a_onplaying : Xml.event_handler -> [> `OnPlaying ] attrib
          val a_onpagehide : Xml.event_handler -> [> `OnPageHide ] attrib
          val a_onpageshow : Xml.event_handler -> [> `OnPageShow ] attrib
          val a_onpopstate : Xml.event_handler -> [> `OnPopState ] attrib
          val a_onprogress : Xml.event_handler -> [> `OnProgress ] attrib
          val a_onratechange : Xml.event_handler -> [> `OnRateChange ] attrib
          val a_onreadystatechange :
            Xml.event_handler -> [> `OnReadyStateChange ] attrib
          val a_onredo : Xml.event_handler -> [> `OnRedo ] attrib
          val a_onresize : Xml.event_handler -> [> `OnResize ] attrib
          val a_onscroll : Xml.event_handler -> [> `OnScroll ] attrib
          val a_onseeked : Xml.event_handler -> [> `OnSeeked ] attrib
          val a_onseeking : Xml.event_handler -> [> `OnSeeking ] attrib
          val a_onselect : Xml.event_handler -> [> `OnSelect ] attrib
          val a_onshow : Xml.event_handler -> [> `OnShow ] attrib
          val a_onstalled : Xml.event_handler -> [> `OnStalled ] attrib
          val a_onstorage : Xml.event_handler -> [> `OnStorage ] attrib
          val a_onsubmit : Xml.event_handler -> [> `OnSubmit ] attrib
          val a_onsuspend : Xml.event_handler -> [> `OnSuspend ] attrib
          val a_ontimeupdate : Xml.event_handler -> [> `OnTimeUpdate ] attrib
          val a_onundo : Xml.event_handler -> [> `OnUndo ] attrib
          val a_onunload : Xml.event_handler -> [> `OnUnload ] attrib
          val a_onvolumechange :
            Xml.event_handler -> [> `OnVolumeChange ] attrib
          val a_onwaiting : Xml.event_handler -> [> `OnWaiting ] attrib
          val a_onload : Xml.event_handler -> [> `OnLoad ] attrib
          val a_onloadeddata : Xml.event_handler -> [> `OnLoadedData ] attrib
          val a_onloadedmetadata :
            Xml.event_handler -> [> `OnLoadedMetaData ] attrib
          val a_onloadstart : Xml.event_handler -> [> `OnLoadStart ] attrib
          val a_onmessage : Xml.event_handler -> [> `OnMessage ] attrib
          val a_onclick : Xml.mouse_event_handler -> [> `OnClick ] attrib
          val a_oncontextmenu :
            Xml.mouse_event_handler -> [> `OnContextMenu ] attrib
          val a_ondblclick :
            Xml.mouse_event_handler -> [> `OnDblClick ] attrib
          val a_ondrag : Xml.mouse_event_handler -> [> `OnDrag ] attrib
          val a_ondragend : Xml.mouse_event_handler -> [> `OnDragEnd ] attrib
          val a_ondragenter :
            Xml.mouse_event_handler -> [> `OnDragEnter ] attrib
          val a_ondragleave :
            Xml.mouse_event_handler -> [> `OnDragLeave ] attrib
          val a_ondragover :
            Xml.mouse_event_handler -> [> `OnDragOver ] attrib
          val a_ondragstart :
            Xml.mouse_event_handler -> [> `OnDragStart ] attrib
          val a_ondrop : Xml.mouse_event_handler -> [> `OnDrop ] attrib
          val a_onmousedown :
            Xml.mouse_event_handler -> [> `OnMouseDown ] attrib
          val a_onmouseup : Xml.mouse_event_handler -> [> `OnMouseUp ] attrib
          val a_onmouseover :
            Xml.mouse_event_handler -> [> `OnMouseOver ] attrib
          val a_onmousemove :
            Xml.mouse_event_handler -> [> `OnMouseMove ] attrib
          val a_onmouseout :
            Xml.mouse_event_handler -> [> `OnMouseOut ] attrib
          val a_onkeypress :
            Xml.keyboard_event_handler -> [> `OnKeyPress ] attrib
          val a_onkeydown :
            Xml.keyboard_event_handler -> [> `OnKeyDown ] attrib
          val a_onkeyup : Xml.keyboard_event_handler -> [> `OnKeyUp ] attrib
          val a_autocomplete : bool wrap -> [> `Autocomplete ] attrib
          val a_async : unit -> [> `Async ] attrib
          val a_autofocus : unit -> [> `Autofocus ] attrib
          val a_autoplay : unit -> [> `Autoplay ] attrib
          val a_muted : unit -> [> `Muted ] attrib
          val a_crossorigin :
            [< `Anonymous | `Use_credentials ] wrap ->
            [> `Crossorigin ] attrib
          val a_mediagroup : string wrap -> [> `Mediagroup ] attrib
          val a_challenge : Html_types.text wrap -> [> `Challenge ] attrib
          val a_contenteditable : bool wrap -> [> `Contenteditable ] attrib
          val a_contextmenu :
            Html_types.idref wrap -> [> `Contextmenu ] attrib
          val a_controls : unit -> [> `Controls ] attrib
          val a_dir : [< `Ltr | `Rtl ] wrap -> [> `Dir ] attrib
          val a_draggable : bool wrap -> [> `Draggable ] attrib
          val a_form : Html_types.idref wrap -> [> `Form ] attrib
          val a_formaction : Xml.uri wrap -> [> `Formaction ] attrib
          val a_formenctype :
            Html_types.contenttype wrap -> [> `Formenctype ] attrib
          val a_formnovalidate : unit -> [> `Formnovalidate ] attrib
          val a_formtarget : Html_types.text wrap -> [> `Formtarget ] attrib
          val a_hidden : unit -> [> `Hidden ] attrib
          val a_high : Html_types.float_number wrap -> [> `High ] attrib
          val a_icon : Xml.uri wrap -> [> `Icon ] attrib
          val a_ismap : unit -> [> `Ismap ] attrib
          val a_keytype : Html_types.text wrap -> [> `Keytype ] attrib
          val a_list : Html_types.idref wrap -> [> `List ] attrib
          val a_loop : unit -> [> `Loop ] attrib
          val a_low : Html_types.float_number wrap -> [> `High ] attrib
          val a_max : Html_types.float_number wrap -> [> `Max ] attrib
          val a_input_max :
            Html_types.number_or_datetime wrap -> [> `Input_Max ] attrib
          val a_min : Html_types.float_number wrap -> [> `Min ] attrib
          val a_input_min :
            Html_types.number_or_datetime wrap -> [> `Input_Min ] attrib
          val a_inputmode :
            [< `Email
             | `Full_width_latin
             | `Kana
             | `Katakana
             | `Latin
             | `Latin_name
             | `Latin_prose
             | `Numeric
             | `Tel
             | `Url
             | `Verbatim ]
            wrap -> [> `Inputmode ] attrib
          val a_novalidate : unit -> [> `Novalidate ] attrib
          val a_open : unit -> [> `Open ] attrib
          val a_optimum :
            Html_types.float_number wrap -> [> `Optimum ] attrib
          val a_pattern : Html_types.text wrap -> [> `Pattern ] attrib
          val a_placeholder :
            Html_types.text wrap -> [> `Placeholder ] attrib
          val a_poster : Xml.uri wrap -> [> `Poster ] attrib
          val a_preload :
            [< `Audio | `Metadata | `None ] wrap -> [> `Preload ] attrib
          val a_pubdate : unit -> [> `Pubdate ] attrib
          val a_radiogroup : Html_types.text wrap -> [> `Radiogroup ] attrib
          val a_required : unit -> [> `Required ] attrib
          val a_reversed : unit -> [> `Reversed ] attrib
          val a_sandbox :
            [< Html_types.sandbox_token ] list wrap -> [> `Sandbox ] attrib
          val a_spellcheck : bool wrap -> [> `Spellcheck ] attrib
          val a_scoped : unit -> [> `Scoped ] attrib
          val a_seamless : unit -> [> `Seamless ] attrib
          val a_sizes :
            (Html_types.number * Html_types.number) list option wrap ->
            [> `Sizes ] attrib
          val a_span : Html_types.number wrap -> [> `Span ] attrib
          val a_srclang : Html_types.nmtoken wrap -> [> `XML_lang ] attrib
          type image_candidate =
              [ `Url of uri
              | `Url_pixel of uri * Html_types.float_number
              | `Url_width of uri * Html_types.number ]
          val a_srcset : image_candidate list wrap -> [> `Srcset ] attrib
          val a_img_sizes :
            Html_types.text list wrap -> [> `Img_sizes ] attrib
          val a_start : Html_types.number wrap -> [> `Start ] attrib
          val a_step :
            Html_types.float_number option wrap -> [> `Step ] attrib
          val a_wrap : [< `Hard | `Soft ] wrap -> [> `Wrap ] attrib
          val a_version : Html_types.cdata wrap -> [> `Version ] attrib
          val a_xmlns : [< `W3_org_1999_xhtml ] wrap -> [> `XMLns ] attrib
          val a_manifest : Xml.uri wrap -> [> `Manifest ] attrib
          val a_cite : Xml.uri wrap -> [> `Cite ] attrib
          val a_xml_space :
            [< `Default | `Preserve ] wrap -> [> `XML_space ] attrib
          val a_accesskey :
            Html_types.character wrap -> [> `Accesskey ] attrib
          val a_charset : Html_types.charset wrap -> [> `Charset ] attrib
          val a_accept_charset :
            Html_types.charsets wrap -> [> `Accept_charset ] attrib
          val a_accept : Html_types.contenttypes wrap -> [> `Accept ] attrib
          val a_href : Xml.uri wrap -> [> `Href ] attrib
          val a_hreflang :
            Html_types.languagecode wrap -> [> `Hreflang ] attrib
          val a_download : string option wrap -> [> `Download ] attrib
          val a_rel : Html_types.linktypes wrap -> [> `Rel ] attrib
          val a_tabindex : Html_types.number wrap -> [> `Tabindex ] attrib
          val a_mime_type :
            Html_types.contenttype wrap -> [> `Mime_type ] attrib
          val a_datetime : Html_types.cdata wrap -> [> `Datetime ] attrib
          val a_action : Xml.uri wrap -> [> `Action ] attrib
          val a_checked : unit -> [> `Checked ] attrib
          val a_cols : Html_types.number wrap -> [> `Cols ] attrib
          val a_enctype : Html_types.contenttype wrap -> [> `Enctype ] attrib
          val a_label_for : Html_types.idref wrap -> [> `Label_for ] attrib
          val a_for : Html_types.idref wrap -> [> `Label_for ] attrib
          val a_output_for :
            Html_types.idrefs wrap -> [> `Output_for ] attrib
          val a_for_list : Html_types.idrefs wrap -> [> `Output_for ] attrib
          val a_maxlength : Html_types.number wrap -> [> `Maxlength ] attrib
          val a_method : [< `Get | `Post ] wrap -> [> `Method ] attrib
          val a_formmethod : [< `Get | `Post ] wrap -> [> `Method ] attrib
          val a_multiple : unit -> [> `Multiple ] attrib
          val a_name : Html_types.text wrap -> [> `Name ] attrib
          val a_rows : Html_types.number wrap -> [> `Rows ] attrib
          val a_selected : unit -> [> `Selected ] attrib
          val a_size : Html_types.number wrap -> [> `Size ] attrib
          val a_src : Xml.uri wrap -> [> `Src ] attrib
          val a_input_type :
            [< `Button
             | `Checkbox
             | `Color
             | `Date
             | `Datetime
             | `Datetime_local
             | `Email
             | `File
             | `Hidden
             | `Image
             | `Month
             | `Number
             | `Password
             | `Radio
             | `Range
             | `Reset
             | `Search
             | `Submit
             | `Tel
             | `Text
             | `Time
             | `Url
             | `Week ]
            wrap -> [> `Input_Type ] attrib
          val a_text_value : Html_types.text wrap -> [> `Text_Value ] attrib
          val a_int_value : Html_types.number wrap -> [> `Int_Value ] attrib
          val a_value : Html_types.cdata wrap -> [> `Value ] attrib
          val a_float_value :
            Html_types.float_number wrap -> [> `Float_Value ] attrib
          val a_disabled : unit -> [> `Disabled ] attrib
          val a_readonly : unit -> [> `ReadOnly ] attrib
          val a_button_type :
            [< `Button | `Reset | `Submit ] wrap -> [> `Button_Type ] attrib
          val a_command_type :
            [< `Checkbox | `Command | `Radio ] wrap ->
            [> `Command_Type ] attrib
          val a_menu_type :
            [< `Context | `Toolbar ] wrap -> [> `Menu_Type ] attrib
          val a_label : Html_types.text wrap -> [> `Label ] attrib
          val a_align :
            [< `Char | `Justify | `Left | `Right ] wrap -> [> `Align ] attrib
          val a_axis : Html_types.cdata wrap -> [> `Axis ] attrib
          val a_colspan : Html_types.number wrap -> [> `Colspan ] attrib
          val a_headers : Html_types.idrefs wrap -> [> `Headers ] attrib
          val a_rowspan : Html_types.number wrap -> [> `Rowspan ] attrib
          val a_scope :
            [< `Col | `Colgroup | `Row | `Rowgroup ] wrap ->
            [> `Scope ] attrib
          val a_summary : Html_types.text wrap -> [> `Summary ] attrib
          val a_border : Html_types.pixels wrap -> [> `Border ] attrib
          val a_rules :
            [< `All | `Cols | `Groups | `None | `Rows ] wrap ->
            [> `Rules ] attrib
          val a_char : Html_types.character wrap -> [> `Char ] attrib
          val a_alt : Html_types.text wrap -> [> `Alt ] attrib
          val a_height : Html_types.number wrap -> [> `Height ] attrib
          val a_width : Html_types.number wrap -> [> `Width ] attrib
          type shape = [ `Circle | `Default | `Poly | `Rect ]
          val a_shape : shape wrap -> [> `Shape ] attrib
          val a_coords : Html_types.numbers wrap -> [> `Coords ] attrib
          val a_usemap : Html_types.idref wrap -> [> `Usemap ] attrib
          val a_data : Xml.uri wrap -> [> `Data ] attrib
          val a_codetype :
            Html_types.contenttype wrap -> [> `Codetype ] attrib
          val a_frameborder :
            [< `One | `Zero ] wrap -> [> `Frameborder ] attrib
          val a_marginheight :
            Html_types.pixels wrap -> [> `Marginheight ] attrib
          val a_marginwidth :
            Html_types.pixels wrap -> [> `Marginwidth ] attrib
          val a_scrolling :
            [< `Auto | `No | `Yes ] wrap -> [> `Scrolling ] attrib
          val a_target : Html_types.frametarget wrap -> [> `Target ] attrib
          val a_content : Html_types.text wrap -> [> `Content ] attrib
          val a_http_equiv : Html_types.text wrap -> [> `Http_equiv ] attrib
          val a_defer : unit -> [> `Defer ] attrib
          val a_media : Html_types.mediadesc wrap -> [> `Media ] attrib
          val a_style : string wrap -> [> `Style_Attr ] attrib
          val a_property : string wrap -> [> `Property ] attrib
          val pcdata : string wrap -> [> `PCDATA ] elt
          val html :
            ?a:Html_types.html_attrib attrib list ->
            [< `Head ] elt wrap -> [< `Body ] elt wrap -> [> `Html ] elt
          val head :
            ?a:Html_types.head_attrib attrib list ->
            [< `Title ] elt wrap ->
            Html_types.head_content_fun elt list_wrap ->
            [> Html_types.head ] elt
          val base :
            ([< Html_types.base_attrib ], [> Html_types.base ]) nullary
          val title :
            (Html_types.title_attrib, [< Html_types.title_content_fun ],
             [> Html_types.title ])
            unary
          val body :
            ([< Html_types.body_attrib ], [< Html_types.body_content_fun ],
             [> Html_types.body ])
            star
          val svg :
            ?a:[< Html_types.svg_attrib ] Svg.R.Raw.attrib list ->
            [< Html_types.svg_content ] Svg.R.Raw.elt list_wrap ->
            [> Html_types.svg ] elt
          val footer :
            ([< Html_types.common ],
             [< Html_types.flow5_without_header_footer ], [> `Footer ])
            star
          val header :
            ([< Html_types.common ],
             [< Html_types.flow5_without_header_footer ], [> `Header ])
            star
          val section :
            ([< Html_types.section_attrib ],
             [< Html_types.section_content_fun ], [> Html_types.section ])
            star
          val nav :
            ([< Html_types.nav_attrib ], [< Html_types.nav_content_fun ],
             [> Html_types.nav ])
            star
          val h1 :
            ([< Html_types.h1_attrib ], [< Html_types.h1_content_fun ],
             [> Html_types.h1 ])
            star
          val h2 :
            ([< Html_types.h2_attrib ], [< Html_types.h2_content_fun ],
             [> Html_types.h2 ])
            star
          val h3 :
            ([< Html_types.h3_attrib ], [< Html_types.h3_content_fun ],
             [> Html_types.h3 ])
            star
          val h4 :
            ([< Html_types.h4_attrib ], [< Html_types.h4_content_fun ],
             [> Html_types.h4 ])
            star
          val h5 :
            ([< Html_types.h5_attrib ], [< Html_types.h5_content_fun ],
             [> Html_types.h5 ])
            star
          val h6 :
            ([< Html_types.h6_attrib ], [< Html_types.h6_content_fun ],
             [> Html_types.h6 ])
            star
          val hgroup :
            ([< Html_types.hgroup_attrib ],
             [< Html_types.hgroup_content_fun ], [> Html_types.hgroup ])
            star
          val address :
            ([< Html_types.address_attrib ],
             [< Html_types.address_content_fun ], [> Html_types.address ])
            star
          val article :
            ([< Html_types.article_attrib ],
             [< Html_types.article_content_fun ], [> Html_types.article ])
            star
          val aside :
            ([< Html_types.aside_attrib ], [< Html_types.aside_content_fun ],
             [> Html_types.aside ])
            star
          val main :
            ([< Html_types.main_attrib ], [< Html_types.main_content_fun ],
             [> Html_types.main ])
            star
          val p :
            ([< Html_types.p_attrib ], [< Html_types.p_content_fun ],
             [> Html_types.p ])
            star
          val pre :
            ([< Html_types.pre_attrib ], [< Html_types.pre_content_fun ],
             [> Html_types.pre ])
            star
          val blockquote :
            ([< Html_types.blockquote_attrib ],
             [< Html_types.blockquote_content_fun ],
             [> Html_types.blockquote ])
            star
          val div :
            ([< Html_types.div_attrib ], [< Html_types.div_content_fun ],
             [> Html_types.div ])
            star
          val dl :
            ([< Html_types.dl_attrib ], [< Html_types.dl_content_fun ],
             [> Html_types.dl ])
            star
          val ol :
            ([< Html_types.ol_attrib ], [< Html_types.ol_content_fun ],
             [> Html_types.ol ])
            star
          val ul :
            ([< Html_types.ul_attrib ], [< Html_types.ul_content_fun ],
             [> Html_types.ul ])
            star
          val dd :
            ([< Html_types.dd_attrib ], [< Html_types.dd_content_fun ],
             [> Html_types.dd ])
            star
          val dt :
            ([< Html_types.dt_attrib ], [< Html_types.dt_content_fun ],
             [> Html_types.dt ])
            star
          val li :
            ([< Html_types.li_attrib ], [< Html_types.li_content_fun ],
             [> Html_types.li ])
            star
          val figcaption :
            ([< Html_types.figcaption_attrib ],
             [< Html_types.figcaption_content_fun ],
             [> Html_types.figcaption ])
            star
          val figure :
            ?figcaption:[ `Bottom of [< `Figcaption ] elt wrap
                        | `Top of [< `Figcaption ] elt wrap ] ->
            ([< Html_types.figure_attrib ],
             [< Html_types.figure_content_fun ], [> Html_types.figure ])
            star
          val hr : ([< Html_types.hr_attrib ], [> Html_types.hr ]) nullary
          val b :
            ([< Html_types.b_attrib ], [< Html_types.b_content_fun ],
             [> Html_types.b ])
            star
          val i :
            ([< Html_types.i_attrib ], [< Html_types.i_content_fun ],
             [> Html_types.i ])
            star
          val u :
            ([< Html_types.u_attrib ], [< Html_types.u_content_fun ],
             [> Html_types.u ])
            star
          val small :
            ([< Html_types.small_attrib ], [< Html_types.small_content_fun ],
             [> Html_types.small ])
            star
          val sub :
            ([< Html_types.sub_attrib ], [< Html_types.sub_content_fun ],
             [> Html_types.sub ])
            star
          val sup :
            ([< Html_types.sup_attrib ], [< Html_types.sup_content_fun ],
             [> Html_types.sup ])
            star
          val mark :
            ([< Html_types.mark_attrib ], [< Html_types.mark_content_fun ],
             [> Html_types.mark ])
            star
          val wbr : ([< Html_types.wbr_attrib ], [> Html_types.wbr ]) nullary
          val bdo :
            dir:[< `Ltr | `Rtl ] wrap ->
            ([< Html_types.common ], [< Html_types.phrasing ], [> `Bdo ])
            star
          val abbr :
            ([< Html_types.abbr_attrib ], [< Html_types.abbr_content_fun ],
             [> Html_types.abbr ])
            star
          val br : ([< Html_types.br_attrib ], [> Html_types.br ]) nullary
          val cite :
            ([< Html_types.cite_attrib ], [< Html_types.cite_content_fun ],
             [> Html_types.cite ])
            star
          val code :
            ([< Html_types.code_attrib ], [< Html_types.code_content_fun ],
             [> Html_types.code ])
            star
          val dfn :
            ([< Html_types.dfn_attrib ], [< Html_types.dfn_content_fun ],
             [> Html_types.dfn ])
            star
          val em :
            ([< Html_types.em_attrib ], [< Html_types.em_content_fun ],
             [> Html_types.em ])
            star
          val kbd :
            ([< Html_types.kbd_attrib ], [< Html_types.kbd_content_fun ],
             [> Html_types.kbd ])
            star
          val q :
            ([< Html_types.q_attrib ], [< Html_types.q_content_fun ],
             [> Html_types.q ])
            star
          val samp :
            ([< Html_types.samp_attrib ], [< Html_types.samp_content_fun ],
             [> Html_types.samp ])
            star
          val span :
            ([< Html_types.span_attrib ], [< Html_types.span_content_fun ],
             [> Html_types.span ])
            star
          val strong :
            ([< Html_types.strong_attrib ],
             [< Html_types.strong_content_fun ], [> Html_types.strong ])
            star
          val time :
            ([< Html_types.time_attrib ], [< Html_types.time_content_fun ],
             [> Html_types.time ])
            star
          val var :
            ([< Html_types.var_attrib ], [< Html_types.var_content_fun ],
             [> Html_types.var ])
            star
          val a : ([< Html_types.a_attrib ], 'a, [> `A of 'a ]) star
          val del : ([< Html_types.del_attrib ], 'a, [> `Del of 'a ]) star
          val ins : ([< Html_types.ins_attrib ], 'a, [> `Ins of 'a ]) star
          val img :
            src:Xml.uri wrap ->
            alt:Html_types.text wrap ->
            ([< Html_types.img_attrib ], [> Html_types.img ]) nullary
          val iframe :
            ([< `Accesskey
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Dir
              | `Draggable
              | `Height
              | `Hidden
              | `Id
              | `Lang
              | `Name
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Sandbox
              | `Seamless
              | `Spellcheck
              | `Src
              | `Style_Attr
              | `Tabindex
              | `Title
              | `User_data
              | `Width
              | `XML_lang
              | `XMLns ],
             [< `PCDATA ], [> `Iframe ])
            star
          val object_ :
            ?params:[< `Param ] elt list_wrap ->
            ([< `Accesskey
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Data
              | `Dir
              | `Draggable
              | `Form
              | `Height
              | `Hidden
              | `Id
              | `Lang
              | `Mime_type
              | `Name
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Spellcheck
              | `Style_Attr
              | `Tabindex
              | `Title
              | `Usemap
              | `User_data
              | `Width
              | `XML_lang
              | `XMLns ],
             'a, [> `Object of 'a ])
            star
          val param :
            ([< Html_types.param_attrib ], [> Html_types.param ]) nullary
          val embed :
            ([< `Accesskey
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Dir
              | `Draggable
              | `Height
              | `Hidden
              | `Id
              | `Lang
              | `Mime_type
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Spellcheck
              | `Src
              | `Style_Attr
              | `Tabindex
              | `Title
              | `User_data
              | `Width
              | `XML_lang
              | `XMLns ],
             [> `Embed ])
            nullary
          val audio :
            ?src:Xml.uri wrap ->
            ?srcs:[< Html_types.source ] elt list_wrap ->
            ([< Html_types.audio_attrib ], 'a, [> 'a Html_types.audio ]) star
          val video :
            ?src:Xml.uri wrap ->
            ?srcs:[< Html_types.source ] elt list_wrap ->
            ([< Html_types.video_attrib ], 'a, [> 'a Html_types.video ]) star
          val canvas :
            ([< Html_types.canvas_attrib ], 'a, [> 'a Html_types.canvas ])
            star
          val source :
            ([< Html_types.source_attrib ], [> Html_types.source ]) nullary
          val area :
            alt:Html_types.text wrap ->
            ([< `Accesskey
              | `Alt
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Coords
              | `Dir
              | `Draggable
              | `Hidden
              | `Hreflang
              | `Id
              | `Lang
              | `Media
              | `Mime_type
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Rel
              | `Shape
              | `Spellcheck
              | `Style_Attr
              | `Tabindex
              | `Target
              | `Title
              | `User_data
              | `XML_lang
              | `XMLns ],
             [> `Area ])
            nullary
          val map : ([< Html_types.map_attrib ], 'a, [> `A of 'a ]) star
          val caption :
            ([< Html_types.caption_attrib ],
             [< Html_types.caption_content_fun ], [> Html_types.caption ])
            star
          val table :
            ?caption:[< Html_types.caption ] elt wrap ->
            ?columns:[< Html_types.colgroup ] elt list_wrap ->
            ?thead:[< Html_types.thead ] elt wrap ->
            ?tfoot:[< Html_types.tfoot ] elt wrap ->
            ([< Html_types.table_attrib ], [< Html_types.table_content_fun ],
             [> Html_types.table ])
            star
          val tablex :
            ?caption:[< Html_types.caption ] elt wrap ->
            ?columns:[< Html_types.colgroup ] elt list_wrap ->
            ?thead:[< Html_types.thead ] elt wrap ->
            ?tfoot:[< Html_types.tfoot ] elt wrap ->
            ([< Html_types.tablex_attrib ],
             [< Html_types.tablex_content_fun ], [> Html_types.tablex ])
            star
          val colgroup :
            ([< Html_types.colgroup_attrib ],
             [< Html_types.colgroup_content_fun ], [> Html_types.colgroup ])
            star
          val col : ([< Html_types.col_attrib ], [> Html_types.col ]) nullary
          val thead :
            ([< Html_types.thead_attrib ], [< Html_types.thead_content_fun ],
             [> Html_types.thead ])
            star
          val tbody :
            ([< Html_types.tbody_attrib ], [< Html_types.tbody_content_fun ],
             [> Html_types.tbody ])
            star
          val tfoot :
            ([< Html_types.tfoot_attrib ], [< Html_types.tfoot_content_fun ],
             [> Html_types.tfoot ])
            star
          val td :
            ([< Html_types.td_attrib ], [< Html_types.td_content_fun ],
             [> Html_types.td ])
            star
          val th :
            ([< Html_types.th_attrib ], [< Html_types.th_content_fun ],
             [> Html_types.th ])
            star
          val tr :
            ([< Html_types.tr_attrib ], [< Html_types.tr_content_fun ],
             [> Html_types.tr ])
            star
          val form :
            ([< Html_types.form_attrib ], [< Html_types.form_content_fun ],
             [> Html_types.form ])
            star
          val fieldset :
            ?legend:[ `Legend ] elt wrap ->
            ([< `Accesskey
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Dir
              | `Disabled
              | `Draggable
              | `Form
              | `Hidden
              | `Id
              | `Lang
              | `Name
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Spellcheck
              | `Style_Attr
              | `Tabindex
              | `Title
              | `User_data
              | `XML_lang
              | `XMLns ],
             [< Html_types.flow5 ], [> `Fieldset ])
            star
          val legend :
            ([< Html_types.legend_attrib ],
             [< Html_types.legend_content_fun ], [> Html_types.legend ])
            star
          val label :
            ([< Html_types.label_attrib ], [< Html_types.label_content_fun ],
             [> Html_types.label ])
            star
          val input :
            ([< Html_types.input_attrib ], [> Html_types.input ]) nullary
          val button :
            ([< Html_types.button_attrib ],
             [< Html_types.button_content_fun ], [> Html_types.button ])
            star
          val select :
            ([< Html_types.select_attrib ],
             [< Html_types.select_content_fun ], [> Html_types.select ])
            star
          val datalist :
            ?children:[< `Options of [< `Option ] elt list_wrap
                       | `Phras of [< Html_types.phrasing ] elt list_wrap ] ->
            ([< Html_types.common ], [> `Datalist ]) nullary
          val optgroup :
            label:Html_types.text wrap ->
            ([< `Accesskey
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Dir
              | `Disabled
              | `Draggable
              | `Hidden
              | `Id
              | `Label
              | `Lang
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Spellcheck
              | `Style_Attr
              | `Tabindex
              | `Title
              | `User_data
              | `XML_lang
              | `XMLns ],
             [< `Option ], [> `Optgroup ])
            star
          val option :
            ([< Html_types.option_attrib ],
             [< Html_types.option_content_fun ],
             [> Html_types.selectoption ])
            unary
          val textarea :
            ([< Html_types.textarea_attrib ],
             [< Html_types.textarea_content_fun ], [> Html_types.textarea ])
            unary
          val keygen :
            ([< Html_types.keygen_attrib ], [> Html_types.keygen ]) nullary
          val progress :
            ([< Html_types.progress_attrib ],
             [< Html_types.progress_content_fun ], [> Html_types.progress ])
            star
          val meter :
            ([< Html_types.meter_attrib ], [< Html_types.meter_content_fun ],
             [> Html_types.meter ])
            star
          val output_elt :
            ([< Html_types.output_elt_attrib ],
             [< Html_types.output_elt_content_fun ],
             [> Html_types.output_elt ])
            star
          val entity : string -> [> `PCDATA ] elt
          val space : unit -> [> `PCDATA ] elt
          val cdata : string -> [> `PCDATA ] elt
          val cdata_script : string -> [> `PCDATA ] elt
          val cdata_style : string -> [> `PCDATA ] elt
          val details :
            [< `Summary ] elt wrap ->
            ([< `Accesskey
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Dir
              | `Draggable
              | `Hidden
              | `Id
              | `Lang
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Open
              | `Spellcheck
              | `Style_Attr
              | `Tabindex
              | `Title
              | `User_data
              | `XML_lang
              | `XMLns ],
             [< Html_types.flow5 ], [> `Details ])
            star
          val summary :
            ([< Html_types.summary_attrib ],
             [< Html_types.summary_content_fun ], [> Html_types.summary ])
            star
          val command :
            label:Html_types.text wrap ->
            ([< `Accesskey
              | `Checked
              | `Class
              | `Command_Type
              | `Contenteditable
              | `Contextmenu
              | `Dir
              | `Disabled
              | `Draggable
              | `Hidden
              | `Icon
              | `Id
              | `Lang
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Radiogroup
              | `Spellcheck
              | `Style_Attr
              | `Tabindex
              | `Title
              | `User_data
              | `XML_lang
              | `XMLns ],
             [> `Command ])
            nullary
          val menu :
            ?children:[< `Flows of [< Html_types.flow5 ] elt list_wrap
                       | `Lis of
                           [< `Li of [< Html_types.common ] ] elt list_wrap ] ->
            ([< `Accesskey
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Dir
              | `Draggable
              | `Hidden
              | `Id
              | `Label
              | `Lang
              | `Menu_Type
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Spellcheck
              | `Style_Attr
              | `Tabindex
              | `Title
              | `User_data
              | `XML_lang
              | `XMLns ],
             [> `Menu ])
            nullary
          val script :
            ([< Html_types.script_attrib ],
             [< Html_types.script_content_fun ], [> Html_types.script ])
            unary
          val noscript :
            ([< Html_types.noscript_attrib ],
             [< Html_types.noscript_content_fun ], [> Html_types.noscript ])
            star
          val meta :
            ([< Html_types.meta_attrib ], [> Html_types.meta ]) nullary
          val style :
            ([< Html_types.style_attrib ], [< Html_types.style_content_fun ],
             [> Html_types.style ])
            star
          val link :
            rel:Html_types.linktypes wrap ->
            href:Xml.uri wrap ->
            ([< `Accesskey
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Dir
              | `Draggable
              | `Hidden
              | `Href
              | `Hreflang
              | `Id
              | `Lang
              | `Media
              | `Mime_type
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Rel
              | `Sizes
              | `Spellcheck
              | `Style_Attr
              | `Tabindex
              | `Title
              | `User_data
              | `XML_lang
              | `XMLns ],
             [> `Link ])
            nullary
          val rt :
            ([< Html_types.rt_attrib ], [< Html_types.rt_content_fun ],
             [> Html_types.rt ])
            star
          val rp :
            ([< Html_types.rp_attrib ], [< Html_types.rp_content_fun ],
             [> Html_types.rp ])
            star
          val ruby :
            ([< Html_types.ruby_attrib ], [< Html_types.ruby_content_fun ],
             [> Html_types.ruby ])
            star
          val tot : Xml.elt -> 'a elt
          val totl : Xml.elt list_wrap -> 'a elt list_wrap
          val toelt : 'a elt -> Xml.elt
          val toeltl : 'a elt list_wrap -> Xml.elt list_wrap
          val doc_toelt : doc -> Xml.elt
          val to_xmlattribs : 'a attrib list -> Xml.attrib list
          val to_attrib : Xml.attrib -> 'a attrib
          module Unsafe :
            sig
              val data : string wrap -> 'a elt
              val node :
                string -> ?a:'a attrib list -> 'b elt list_wrap -> 'c elt
              val leaf : string -> ?a:'a attrib list -> unit -> 'b elt
              val coerce_elt : 'a elt -> 'b elt
              val string_attrib : string -> string wrap -> 'a attrib
              val float_attrib : string -> float wrap -> 'a attrib
              val int_attrib : string -> int wrap -> 'a attrib
              val uri_attrib : string -> uri wrap -> 'a attrib
              val space_sep_attrib : string -> string list wrap -> 'a attrib
              val comma_sep_attrib : string -> string list wrap -> 'a attrib
            end
        end
      type 'a elt = 'a elt
      type doc = [ `Html ] elt
      type 'a attrib = 'a attrib
      module Xml :
        sig
          module W :
            sig
              type 'a t = 'a Eliom_content_core.Xml_wed.W.t
              val return : 'a -> 'a t
              type ('a, 'b) ft = ('a, 'b) Eliom_content_core.Xml_wed.W.ft
              val fmap : ('a, 'b) ft -> 'a t -> 'b t
              type 'a tlist = 'a Eliom_content_core.Xml_wed.W.tlist
              val nil : unit -> 'a tlist
              val singleton : 'a t -> 'a tlist
              val cons : 'a t -> 'a tlist -> 'a tlist
              val append : 'a tlist -> 'a tlist -> 'a tlist
              val map : ('a, 'b) ft -> 'a tlist -> 'b tlist
            end
          type 'a wrap = 'a W.t
          type 'a list_wrap = 'a W.tlist
          type uri = Eliom_content_core.Xml_wed.uri
          val string_of_uri : (uri, string) W.ft
          val uri_of_string : (string, uri) W.ft
          type aname = string
          type event_handler = Eliom_content_core.Xml_wed.event_handler
          type mouse_event_handler =
              Eliom_content_core.Xml_wed.mouse_event_handler
          type keyboard_event_handler =
              Eliom_content_core.Xml_wed.keyboard_event_handler
          type attrib = Eliom_content_core.Xml_wed.attrib
          val float_attrib : aname -> float wrap -> attrib
          val int_attrib : aname -> int wrap -> attrib
          val string_attrib : aname -> string wrap -> attrib
          val space_sep_attrib : aname -> string list wrap -> attrib
          val comma_sep_attrib : aname -> string list wrap -> attrib
          val event_handler_attrib : aname -> event_handler -> attrib
          val mouse_event_handler_attrib :
            aname -> mouse_event_handler -> attrib
          val keyboard_event_handler_attrib :
            aname -> keyboard_event_handler -> attrib
          val uri_attrib : aname -> uri wrap -> attrib
          val uris_attrib : aname -> uri list wrap -> attrib
          type elt = Eliom_content_core.Xml_wed.elt
          type ename = string
          val empty : unit -> elt
          val comment : string -> elt
          val pcdata : string wrap -> elt
          val encodedpcdata : string wrap -> elt
          val entity : string -> elt
          val leaf : ?a:attrib list -> ename -> elt
          val node : ?a:attrib list -> ename -> elt list_wrap -> elt
          val cdata : string -> elt
          val cdata_script : string -> elt
          val cdata_style : string -> elt
        end
      type 'a wrap = 'a Xml.W.t
      type 'a list_wrap = 'a Xml.W.tlist
      type ('a, 'b) nullary = ?a:'a attrib list -> unit -> 'b elt
      type ('a, 'b, 'c) unary = ?a:'a attrib list -> 'b elt wrap -> 'c elt
      type ('a, 'b, 'c) star =
          ?a:'a attrib list -> 'b elt list_wrap -> 'c elt
      module Info : Xml_sigs.Info
      type uri = Xml.uri
      val string_of_uri : (uri, string) Xml.W.ft
      val uri_of_string : (string, uri) Xml.W.ft
      val a_class : Html_types.nmtokens wrap -> [> `Class ] attrib
      val a_user_data :
        Html_types.nmtoken -> Html_types.text wrap -> [> `User_data ] attrib
      val a_id : Html_types.text wrap -> [> `Id ] attrib
      val a_title : Html_types.text wrap -> [> `Title ] attrib
      val a_xml_lang : Html_types.languagecode wrap -> [> `XML_lang ] attrib
      val a_lang : Html_types.languagecode wrap -> [> `Lang ] attrib
      val a_onabort : Xml.event_handler -> [> `OnAbort ] attrib
      val a_onafterprint : Xml.event_handler -> [> `OnAfterPrint ] attrib
      val a_onbeforeprint : Xml.event_handler -> [> `OnBeforePrint ] attrib
      val a_onbeforeunload : Xml.event_handler -> [> `OnBeforeUnload ] attrib
      val a_onblur : Xml.event_handler -> [> `OnBlur ] attrib
      val a_oncanplay : Xml.event_handler -> [> `OnCanPlay ] attrib
      val a_oncanplaythrough :
        Xml.event_handler -> [> `OnCanPlayThrough ] attrib
      val a_onchange : Xml.event_handler -> [> `OnChange ] attrib
      val a_ondurationchange :
        Xml.event_handler -> [> `OnDurationChange ] attrib
      val a_onemptied : Xml.event_handler -> [> `OnEmptied ] attrib
      val a_onended : Xml.event_handler -> [> `OnEnded ] attrib
      val a_onerror : Xml.event_handler -> [> `OnError ] attrib
      val a_onfocus : Xml.event_handler -> [> `OnFocus ] attrib
      val a_onformchange : Xml.event_handler -> [> `OnFormChange ] attrib
      val a_onforminput : Xml.event_handler -> [> `OnFormInput ] attrib
      val a_onhashchange : Xml.event_handler -> [> `OnHashChange ] attrib
      val a_oninput : Xml.event_handler -> [> `OnInput ] attrib
      val a_oninvalid : Xml.event_handler -> [> `OnInvalid ] attrib
      val a_onmousewheel : Xml.event_handler -> [> `OnMouseWheel ] attrib
      val a_onoffline : Xml.event_handler -> [> `OnOffLine ] attrib
      val a_ononline : Xml.event_handler -> [> `OnOnLine ] attrib
      val a_onpause : Xml.event_handler -> [> `OnPause ] attrib
      val a_onplay : Xml.event_handler -> [> `OnPlay ] attrib
      val a_onplaying : Xml.event_handler -> [> `OnPlaying ] attrib
      val a_onpagehide : Xml.event_handler -> [> `OnPageHide ] attrib
      val a_onpageshow : Xml.event_handler -> [> `OnPageShow ] attrib
      val a_onpopstate : Xml.event_handler -> [> `OnPopState ] attrib
      val a_onprogress : Xml.event_handler -> [> `OnProgress ] attrib
      val a_onratechange : Xml.event_handler -> [> `OnRateChange ] attrib
      val a_onreadystatechange :
        Xml.event_handler -> [> `OnReadyStateChange ] attrib
      val a_onredo : Xml.event_handler -> [> `OnRedo ] attrib
      val a_onresize : Xml.event_handler -> [> `OnResize ] attrib
      val a_onscroll : Xml.event_handler -> [> `OnScroll ] attrib
      val a_onseeked : Xml.event_handler -> [> `OnSeeked ] attrib
      val a_onseeking : Xml.event_handler -> [> `OnSeeking ] attrib
      val a_onselect : Xml.event_handler -> [> `OnSelect ] attrib
      val a_onshow : Xml.event_handler -> [> `OnShow ] attrib
      val a_onstalled : Xml.event_handler -> [> `OnStalled ] attrib
      val a_onstorage : Xml.event_handler -> [> `OnStorage ] attrib
      val a_onsubmit : Xml.event_handler -> [> `OnSubmit ] attrib
      val a_onsuspend : Xml.event_handler -> [> `OnSuspend ] attrib
      val a_ontimeupdate : Xml.event_handler -> [> `OnTimeUpdate ] attrib
      val a_onundo : Xml.event_handler -> [> `OnUndo ] attrib
      val a_onunload : Xml.event_handler -> [> `OnUnload ] attrib
      val a_onvolumechange : Xml.event_handler -> [> `OnVolumeChange ] attrib
      val a_onwaiting : Xml.event_handler -> [> `OnWaiting ] attrib
      val a_onload : Xml.event_handler -> [> `OnLoad ] attrib
      val a_onloadeddata : Xml.event_handler -> [> `OnLoadedData ] attrib
      val a_onloadedmetadata :
        Xml.event_handler -> [> `OnLoadedMetaData ] attrib
      val a_onloadstart : Xml.event_handler -> [> `OnLoadStart ] attrib
      val a_onmessage : Xml.event_handler -> [> `OnMessage ] attrib
      val a_onclick : Xml.mouse_event_handler -> [> `OnClick ] attrib
      val a_oncontextmenu :
        Xml.mouse_event_handler -> [> `OnContextMenu ] attrib
      val a_ondblclick : Xml.mouse_event_handler -> [> `OnDblClick ] attrib
      val a_ondrag : Xml.mouse_event_handler -> [> `OnDrag ] attrib
      val a_ondragend : Xml.mouse_event_handler -> [> `OnDragEnd ] attrib
      val a_ondragenter : Xml.mouse_event_handler -> [> `OnDragEnter ] attrib
      val a_ondragleave : Xml.mouse_event_handler -> [> `OnDragLeave ] attrib
      val a_ondragover : Xml.mouse_event_handler -> [> `OnDragOver ] attrib
      val a_ondragstart : Xml.mouse_event_handler -> [> `OnDragStart ] attrib
      val a_ondrop : Xml.mouse_event_handler -> [> `OnDrop ] attrib
      val a_onmousedown : Xml.mouse_event_handler -> [> `OnMouseDown ] attrib
      val a_onmouseup : Xml.mouse_event_handler -> [> `OnMouseUp ] attrib
      val a_onmouseover : Xml.mouse_event_handler -> [> `OnMouseOver ] attrib
      val a_onmousemove : Xml.mouse_event_handler -> [> `OnMouseMove ] attrib
      val a_onmouseout : Xml.mouse_event_handler -> [> `OnMouseOut ] attrib
      val a_onkeypress :
        Xml.keyboard_event_handler -> [> `OnKeyPress ] attrib
      val a_onkeydown : Xml.keyboard_event_handler -> [> `OnKeyDown ] attrib
      val a_onkeyup : Xml.keyboard_event_handler -> [> `OnKeyUp ] attrib
      val a_autocomplete : bool wrap -> [> `Autocomplete ] attrib
      val a_async : unit -> [> `Async ] attrib
      val a_autofocus : unit -> [> `Autofocus ] attrib
      val a_autoplay : unit -> [> `Autoplay ] attrib
      val a_muted : unit -> [> `Muted ] attrib
      val a_crossorigin :
        [< `Anonymous | `Use_credentials ] wrap -> [> `Crossorigin ] attrib
      val a_mediagroup : string wrap -> [> `Mediagroup ] attrib
      val a_challenge : Html_types.text wrap -> [> `Challenge ] attrib
      val a_contenteditable : bool wrap -> [> `Contenteditable ] attrib
      val a_contextmenu : Html_types.idref wrap -> [> `Contextmenu ] attrib
      val a_controls : unit -> [> `Controls ] attrib
      val a_dir : [< `Ltr | `Rtl ] wrap -> [> `Dir ] attrib
      val a_draggable : bool wrap -> [> `Draggable ] attrib
      val a_form : Html_types.idref wrap -> [> `Form ] attrib
      val a_formaction : Xml.uri wrap -> [> `Formaction ] attrib
      val a_formenctype :
        Html_types.contenttype wrap -> [> `Formenctype ] attrib
      val a_formnovalidate : unit -> [> `Formnovalidate ] attrib
      val a_formtarget : Html_types.text wrap -> [> `Formtarget ] attrib
      val a_hidden : unit -> [> `Hidden ] attrib
      val a_high : Html_types.float_number wrap -> [> `High ] attrib
      val a_icon : Xml.uri wrap -> [> `Icon ] attrib
      val a_ismap : unit -> [> `Ismap ] attrib
      val a_keytype : Html_types.text wrap -> [> `Keytype ] attrib
      val a_list : Html_types.idref wrap -> [> `List ] attrib
      val a_loop : unit -> [> `Loop ] attrib
      val a_low : Html_types.float_number wrap -> [> `High ] attrib
      val a_max : Html_types.float_number wrap -> [> `Max ] attrib
      val a_input_max :
        Html_types.number_or_datetime wrap -> [> `Input_Max ] attrib
      val a_min : Html_types.float_number wrap -> [> `Min ] attrib
      val a_input_min :
        Html_types.number_or_datetime wrap -> [> `Input_Min ] attrib
      val a_inputmode :
        [< `Email
         | `Full_width_latin
         | `Kana
         | `Katakana
         | `Latin
         | `Latin_name
         | `Latin_prose
         | `Numeric
         | `Tel
         | `Url
         | `Verbatim ]
        wrap -> [> `Inputmode ] attrib
      val a_novalidate : unit -> [> `Novalidate ] attrib
      val a_open : unit -> [> `Open ] attrib
      val a_optimum : Html_types.float_number wrap -> [> `Optimum ] attrib
      val a_pattern : Html_types.text wrap -> [> `Pattern ] attrib
      val a_placeholder : Html_types.text wrap -> [> `Placeholder ] attrib
      val a_poster : Xml.uri wrap -> [> `Poster ] attrib
      val a_preload :
        [< `Audio | `Metadata | `None ] wrap -> [> `Preload ] attrib
      val a_pubdate : unit -> [> `Pubdate ] attrib
      val a_radiogroup : Html_types.text wrap -> [> `Radiogroup ] attrib
      val a_required : unit -> [> `Required ] attrib
      val a_reversed : unit -> [> `Reversed ] attrib
      val a_sandbox :
        [< Html_types.sandbox_token ] list wrap -> [> `Sandbox ] attrib
      val a_spellcheck : bool wrap -> [> `Spellcheck ] attrib
      val a_scoped : unit -> [> `Scoped ] attrib
      val a_seamless : unit -> [> `Seamless ] attrib
      val a_sizes :
        (Html_types.number * Html_types.number) list option wrap ->
        [> `Sizes ] attrib
      val a_span : Html_types.number wrap -> [> `Span ] attrib
      val a_srclang : Html_types.nmtoken wrap -> [> `XML_lang ] attrib
      type image_candidate =
          [ `Url of uri
          | `Url_pixel of uri * Html_types.float_number
          | `Url_width of uri * Html_types.number ]
      val a_srcset : image_candidate list wrap -> [> `Srcset ] attrib
      val a_img_sizes : Html_types.text list wrap -> [> `Img_sizes ] attrib
      val a_start : Html_types.number wrap -> [> `Start ] attrib
      val a_step : Html_types.float_number option wrap -> [> `Step ] attrib
      val a_wrap : [< `Hard | `Soft ] wrap -> [> `Wrap ] attrib
      val a_version : Html_types.cdata wrap -> [> `Version ] attrib
      val a_xmlns : [< `W3_org_1999_xhtml ] wrap -> [> `XMLns ] attrib
      val a_manifest : Xml.uri wrap -> [> `Manifest ] attrib
      val a_cite : Xml.uri wrap -> [> `Cite ] attrib
      val a_xml_space :
        [< `Default | `Preserve ] wrap -> [> `XML_space ] attrib
      val a_accesskey : Html_types.character wrap -> [> `Accesskey ] attrib
      val a_charset : Html_types.charset wrap -> [> `Charset ] attrib
      val a_accept_charset :
        Html_types.charsets wrap -> [> `Accept_charset ] attrib
      val a_accept : Html_types.contenttypes wrap -> [> `Accept ] attrib
      val a_href : Xml.uri wrap -> [> `Href ] attrib
      val a_hreflang : Html_types.languagecode wrap -> [> `Hreflang ] attrib
      val a_download : string option wrap -> [> `Download ] attrib
      val a_rel : Html_types.linktypes wrap -> [> `Rel ] attrib
      val a_tabindex : Html_types.number wrap -> [> `Tabindex ] attrib
      val a_mime_type : Html_types.contenttype wrap -> [> `Mime_type ] attrib
      val a_datetime : Html_types.cdata wrap -> [> `Datetime ] attrib
      val a_action : Xml.uri wrap -> [> `Action ] attrib
      val a_checked : unit -> [> `Checked ] attrib
      val a_cols : Html_types.number wrap -> [> `Cols ] attrib
      val a_enctype : Html_types.contenttype wrap -> [> `Enctype ] attrib
      val a_label_for : Html_types.idref wrap -> [> `Label_for ] attrib
      val a_for : Html_types.idref wrap -> [> `Label_for ] attrib
      val a_output_for : Html_types.idrefs wrap -> [> `Output_for ] attrib
      val a_for_list : Html_types.idrefs wrap -> [> `Output_for ] attrib
      val a_maxlength : Html_types.number wrap -> [> `Maxlength ] attrib
      val a_method : [< `Get | `Post ] wrap -> [> `Method ] attrib
      val a_formmethod : [< `Get | `Post ] wrap -> [> `Method ] attrib
      val a_multiple : unit -> [> `Multiple ] attrib
      val a_name : Html_types.text wrap -> [> `Name ] attrib
      val a_rows : Html_types.number wrap -> [> `Rows ] attrib
      val a_selected : unit -> [> `Selected ] attrib
      val a_size : Html_types.number wrap -> [> `Size ] attrib
      val a_src : Xml.uri wrap -> [> `Src ] attrib
      val a_input_type :
        [< `Button
         | `Checkbox
         | `Color
         | `Date
         | `Datetime
         | `Datetime_local
         | `Email
         | `File
         | `Hidden
         | `Image
         | `Month
         | `Number
         | `Password
         | `Radio
         | `Range
         | `Reset
         | `Search
         | `Submit
         | `Tel
         | `Text
         | `Time
         | `Url
         | `Week ]
        wrap -> [> `Input_Type ] attrib
      val a_text_value : Html_types.text wrap -> [> `Text_Value ] attrib
      val a_int_value : Html_types.number wrap -> [> `Int_Value ] attrib
      val a_value : Html_types.cdata wrap -> [> `Value ] attrib
      val a_float_value :
        Html_types.float_number wrap -> [> `Float_Value ] attrib
      val a_disabled : unit -> [> `Disabled ] attrib
      val a_readonly : unit -> [> `ReadOnly ] attrib
      val a_button_type :
        [< `Button | `Reset | `Submit ] wrap -> [> `Button_Type ] attrib
      val a_command_type :
        [< `Checkbox | `Command | `Radio ] wrap -> [> `Command_Type ] attrib
      val a_menu_type :
        [< `Context | `Toolbar ] wrap -> [> `Menu_Type ] attrib
      val a_label : Html_types.text wrap -> [> `Label ] attrib
      val a_align :
        [< `Char | `Justify | `Left | `Right ] wrap -> [> `Align ] attrib
      val a_axis : Html_types.cdata wrap -> [> `Axis ] attrib
      val a_colspan : Html_types.number wrap -> [> `Colspan ] attrib
      val a_headers : Html_types.idrefs wrap -> [> `Headers ] attrib
      val a_rowspan : Html_types.number wrap -> [> `Rowspan ] attrib
      val a_scope :
        [< `Col | `Colgroup | `Row | `Rowgroup ] wrap -> [> `Scope ] attrib
      val a_summary : Html_types.text wrap -> [> `Summary ] attrib
      val a_border : Html_types.pixels wrap -> [> `Border ] attrib
      val a_rules :
        [< `All | `Cols | `Groups | `None | `Rows ] wrap ->
        [> `Rules ] attrib
      val a_char : Html_types.character wrap -> [> `Char ] attrib
      val a_alt : Html_types.text wrap -> [> `Alt ] attrib
      val a_height : Html_types.number wrap -> [> `Height ] attrib
      val a_width : Html_types.number wrap -> [> `Width ] attrib
      type shape = [ `Circle | `Default | `Poly | `Rect ]
      val a_shape : shape wrap -> [> `Shape ] attrib
      val a_coords : Html_types.numbers wrap -> [> `Coords ] attrib
      val a_usemap : Html_types.idref wrap -> [> `Usemap ] attrib
      val a_data : Xml.uri wrap -> [> `Data ] attrib
      val a_codetype : Html_types.contenttype wrap -> [> `Codetype ] attrib
      val a_frameborder : [< `One | `Zero ] wrap -> [> `Frameborder ] attrib
      val a_marginheight :
        Html_types.pixels wrap -> [> `Marginheight ] attrib
      val a_marginwidth : Html_types.pixels wrap -> [> `Marginwidth ] attrib
      val a_scrolling :
        [< `Auto | `No | `Yes ] wrap -> [> `Scrolling ] attrib
      val a_target : Html_types.frametarget wrap -> [> `Target ] attrib
      val a_content : Html_types.text wrap -> [> `Content ] attrib
      val a_http_equiv : Html_types.text wrap -> [> `Http_equiv ] attrib
      val a_defer : unit -> [> `Defer ] attrib
      val a_media : Html_types.mediadesc wrap -> [> `Media ] attrib
      val a_style : string wrap -> [> `Style_Attr ] attrib
      val a_property : string wrap -> [> `Property ] attrib
      val pcdata : string wrap -> [> `PCDATA ] elt
      val html :
        ?a:Html_types.html_attrib attrib list ->
        [< `Head ] elt wrap -> [< `Body ] elt wrap -> [> `Html ] elt
      val head :
        ?a:Html_types.head_attrib attrib list ->
        [< `Title ] elt wrap ->
        Html_types.head_content_fun elt list_wrap -> [> Html_types.head ] elt
      val base : ([< Html_types.base_attrib ], [> Html_types.base ]) nullary
      val title :
        (Html_types.title_attrib, [< Html_types.title_content_fun ],
         [> Html_types.title ])
        unary
      val body :
        ([< Html_types.body_attrib ], [< Html_types.body_content_fun ],
         [> Html_types.body ])
        star
      val svg :
        ?a:[< Html_types.svg_attrib ] Svg.R.Raw.attrib list ->
        [< Html_types.svg_content ] Svg.R.Raw.elt list_wrap ->
        [> Html_types.svg ] elt
      val footer :
        ([< Html_types.common ], [< Html_types.flow5_without_header_footer ],
         [> `Footer ])
        star
      val header :
        ([< Html_types.common ], [< Html_types.flow5_without_header_footer ],
         [> `Header ])
        star
      val section :
        ([< Html_types.section_attrib ], [< Html_types.section_content_fun ],
         [> Html_types.section ])
        star
      val nav :
        ([< Html_types.nav_attrib ], [< Html_types.nav_content_fun ],
         [> Html_types.nav ])
        star
      val h1 :
        ([< Html_types.h1_attrib ], [< Html_types.h1_content_fun ],
         [> Html_types.h1 ])
        star
      val h2 :
        ([< Html_types.h2_attrib ], [< Html_types.h2_content_fun ],
         [> Html_types.h2 ])
        star
      val h3 :
        ([< Html_types.h3_attrib ], [< Html_types.h3_content_fun ],
         [> Html_types.h3 ])
        star
      val h4 :
        ([< Html_types.h4_attrib ], [< Html_types.h4_content_fun ],
         [> Html_types.h4 ])
        star
      val h5 :
        ([< Html_types.h5_attrib ], [< Html_types.h5_content_fun ],
         [> Html_types.h5 ])
        star
      val h6 :
        ([< Html_types.h6_attrib ], [< Html_types.h6_content_fun ],
         [> Html_types.h6 ])
        star
      val hgroup :
        ([< Html_types.hgroup_attrib ], [< Html_types.hgroup_content_fun ],
         [> Html_types.hgroup ])
        star
      val address :
        ([< Html_types.address_attrib ], [< Html_types.address_content_fun ],
         [> Html_types.address ])
        star
      val article :
        ([< Html_types.article_attrib ], [< Html_types.article_content_fun ],
         [> Html_types.article ])
        star
      val aside :
        ([< Html_types.aside_attrib ], [< Html_types.aside_content_fun ],
         [> Html_types.aside ])
        star
      val main :
        ([< Html_types.main_attrib ], [< Html_types.main_content_fun ],
         [> Html_types.main ])
        star
      val p :
        ([< Html_types.p_attrib ], [< Html_types.p_content_fun ],
         [> Html_types.p ])
        star
      val pre :
        ([< Html_types.pre_attrib ], [< Html_types.pre_content_fun ],
         [> Html_types.pre ])
        star
      val blockquote :
        ([< Html_types.blockquote_attrib ],
         [< Html_types.blockquote_content_fun ], [> Html_types.blockquote ])
        star
      val div :
        ([< Html_types.div_attrib ], [< Html_types.div_content_fun ],
         [> Html_types.div ])
        star
      val dl :
        ([< Html_types.dl_attrib ], [< Html_types.dl_content_fun ],
         [> Html_types.dl ])
        star
      val ol :
        ([< Html_types.ol_attrib ], [< Html_types.ol_content_fun ],
         [> Html_types.ol ])
        star
      val ul :
        ([< Html_types.ul_attrib ], [< Html_types.ul_content_fun ],
         [> Html_types.ul ])
        star
      val dd :
        ([< Html_types.dd_attrib ], [< Html_types.dd_content_fun ],
         [> Html_types.dd ])
        star
      val dt :
        ([< Html_types.dt_attrib ], [< Html_types.dt_content_fun ],
         [> Html_types.dt ])
        star
      val li :
        ([< Html_types.li_attrib ], [< Html_types.li_content_fun ],
         [> Html_types.li ])
        star
      val figcaption :
        ([< Html_types.figcaption_attrib ],
         [< Html_types.figcaption_content_fun ], [> Html_types.figcaption ])
        star
      val figure :
        ?figcaption:[ `Bottom of [< `Figcaption ] elt wrap
                    | `Top of [< `Figcaption ] elt wrap ] ->
        ([< Html_types.figure_attrib ], [< Html_types.figure_content_fun ],
         [> Html_types.figure ])
        star
      val hr : ([< Html_types.hr_attrib ], [> Html_types.hr ]) nullary
      val b :
        ([< Html_types.b_attrib ], [< Html_types.b_content_fun ],
         [> Html_types.b ])
        star
      val i :
        ([< Html_types.i_attrib ], [< Html_types.i_content_fun ],
         [> Html_types.i ])
        star
      val u :
        ([< Html_types.u_attrib ], [< Html_types.u_content_fun ],
         [> Html_types.u ])
        star
      val small :
        ([< Html_types.small_attrib ], [< Html_types.small_content_fun ],
         [> Html_types.small ])
        star
      val sub :
        ([< Html_types.sub_attrib ], [< Html_types.sub_content_fun ],
         [> Html_types.sub ])
        star
      val sup :
        ([< Html_types.sup_attrib ], [< Html_types.sup_content_fun ],
         [> Html_types.sup ])
        star
      val mark :
        ([< Html_types.mark_attrib ], [< Html_types.mark_content_fun ],
         [> Html_types.mark ])
        star
      val wbr : ([< Html_types.wbr_attrib ], [> Html_types.wbr ]) nullary
      val bdo :
        dir:[< `Ltr | `Rtl ] wrap ->
        ([< Html_types.common ], [< Html_types.phrasing ], [> `Bdo ]) star
      val abbr :
        ([< Html_types.abbr_attrib ], [< Html_types.abbr_content_fun ],
         [> Html_types.abbr ])
        star
      val br : ([< Html_types.br_attrib ], [> Html_types.br ]) nullary
      val cite :
        ([< Html_types.cite_attrib ], [< Html_types.cite_content_fun ],
         [> Html_types.cite ])
        star
      val code :
        ([< Html_types.code_attrib ], [< Html_types.code_content_fun ],
         [> Html_types.code ])
        star
      val dfn :
        ([< Html_types.dfn_attrib ], [< Html_types.dfn_content_fun ],
         [> Html_types.dfn ])
        star
      val em :
        ([< Html_types.em_attrib ], [< Html_types.em_content_fun ],
         [> Html_types.em ])
        star
      val kbd :
        ([< Html_types.kbd_attrib ], [< Html_types.kbd_content_fun ],
         [> Html_types.kbd ])
        star
      val q :
        ([< Html_types.q_attrib ], [< Html_types.q_content_fun ],
         [> Html_types.q ])
        star
      val samp :
        ([< Html_types.samp_attrib ], [< Html_types.samp_content_fun ],
         [> Html_types.samp ])
        star
      val span :
        ([< Html_types.span_attrib ], [< Html_types.span_content_fun ],
         [> Html_types.span ])
        star
      val strong :
        ([< Html_types.strong_attrib ], [< Html_types.strong_content_fun ],
         [> Html_types.strong ])
        star
      val time :
        ([< Html_types.time_attrib ], [< Html_types.time_content_fun ],
         [> Html_types.time ])
        star
      val var :
        ([< Html_types.var_attrib ], [< Html_types.var_content_fun ],
         [> Html_types.var ])
        star
      val a : ([< Html_types.a_attrib ], 'a, [> `A of 'a ]) star
      val del : ([< Html_types.del_attrib ], 'a, [> `Del of 'a ]) star
      val ins : ([< Html_types.ins_attrib ], 'a, [> `Ins of 'a ]) star
      val img :
        src:Xml.uri wrap ->
        alt:Html_types.text wrap ->
        ([< Html_types.img_attrib ], [> Html_types.img ]) nullary
      val iframe :
        ([< `Accesskey
          | `Class
          | `Contenteditable
          | `Contextmenu
          | `Dir
          | `Draggable
          | `Height
          | `Hidden
          | `Id
          | `Lang
          | `Name
          | `OnAbort
          | `OnBlur
          | `OnCanPlay
          | `OnCanPlayThrough
          | `OnChange
          | `OnClick
          | `OnContextMenu
          | `OnDblClick
          | `OnDrag
          | `OnDragEnd
          | `OnDragEnter
          | `OnDragLeave
          | `OnDragOver
          | `OnDragStart
          | `OnDrop
          | `OnDurationChange
          | `OnEmptied
          | `OnEnded
          | `OnError
          | `OnFocus
          | `OnFormChange
          | `OnFormInput
          | `OnInput
          | `OnInvalid
          | `OnKeyDown
          | `OnKeyPress
          | `OnKeyUp
          | `OnLoad
          | `OnLoadStart
          | `OnLoadedData
          | `OnLoadedMetaData
          | `OnMouseDown
          | `OnMouseMove
          | `OnMouseOut
          | `OnMouseOver
          | `OnMouseUp
          | `OnMouseWheel
          | `OnPause
          | `OnPlay
          | `OnPlaying
          | `OnProgress
          | `OnRateChange
          | `OnReadyStateChange
          | `OnScroll
          | `OnSeeked
          | `OnSeeking
          | `OnSelect
          | `OnShow
          | `OnStalled
          | `OnSubmit
          | `OnSuspend
          | `OnTimeUpdate
          | `OnVolumeChange
          | `OnWaiting
          | `Sandbox
          | `Seamless
          | `Spellcheck
          | `Src
          | `Style_Attr
          | `Tabindex
          | `Title
          | `User_data
          | `Width
          | `XML_lang
          | `XMLns ],
         [< `PCDATA ], [> `Iframe ])
        star
      val object_ :
        ?params:[< `Param ] elt list_wrap ->
        ([< `Accesskey
          | `Class
          | `Contenteditable
          | `Contextmenu
          | `Data
          | `Dir
          | `Draggable
          | `Form
          | `Height
          | `Hidden
          | `Id
          | `Lang
          | `Mime_type
          | `Name
          | `OnAbort
          | `OnBlur
          | `OnCanPlay
          | `OnCanPlayThrough
          | `OnChange
          | `OnClick
          | `OnContextMenu
          | `OnDblClick
          | `OnDrag
          | `OnDragEnd
          | `OnDragEnter
          | `OnDragLeave
          | `OnDragOver
          | `OnDragStart
          | `OnDrop
          | `OnDurationChange
          | `OnEmptied
          | `OnEnded
          | `OnError
          | `OnFocus
          | `OnFormChange
          | `OnFormInput
          | `OnInput
          | `OnInvalid
          | `OnKeyDown
          | `OnKeyPress
          | `OnKeyUp
          | `OnLoad
          | `OnLoadStart
          | `OnLoadedData
          | `OnLoadedMetaData
          | `OnMouseDown
          | `OnMouseMove
          | `OnMouseOut
          | `OnMouseOver
          | `OnMouseUp
          | `OnMouseWheel
          | `OnPause
          | `OnPlay
          | `OnPlaying
          | `OnProgress
          | `OnRateChange
          | `OnReadyStateChange
          | `OnScroll
          | `OnSeeked
          | `OnSeeking
          | `OnSelect
          | `OnShow
          | `OnStalled
          | `OnSubmit
          | `OnSuspend
          | `OnTimeUpdate
          | `OnVolumeChange
          | `OnWaiting
          | `Spellcheck
          | `Style_Attr
          | `Tabindex
          | `Title
          | `Usemap
          | `User_data
          | `Width
          | `XML_lang
          | `XMLns ],
         'a, [> `Object of 'a ])
        star
      val param :
        ([< Html_types.param_attrib ], [> Html_types.param ]) nullary
      val embed :
        ([< `Accesskey
          | `Class
          | `Contenteditable
          | `Contextmenu
          | `Dir
          | `Draggable
          | `Height
          | `Hidden
          | `Id
          | `Lang
          | `Mime_type
          | `OnAbort
          | `OnBlur
          | `OnCanPlay
          | `OnCanPlayThrough
          | `OnChange
          | `OnClick
          | `OnContextMenu
          | `OnDblClick
          | `OnDrag
          | `OnDragEnd
          | `OnDragEnter
          | `OnDragLeave
          | `OnDragOver
          | `OnDragStart
          | `OnDrop
          | `OnDurationChange
          | `OnEmptied
          | `OnEnded
          | `OnError
          | `OnFocus
          | `OnFormChange
          | `OnFormInput
          | `OnInput
          | `OnInvalid
          | `OnKeyDown
          | `OnKeyPress
          | `OnKeyUp
          | `OnLoad
          | `OnLoadStart
          | `OnLoadedData
          | `OnLoadedMetaData
          | `OnMouseDown
          | `OnMouseMove
          | `OnMouseOut
          | `OnMouseOver
          | `OnMouseUp
          | `OnMouseWheel
          | `OnPause
          | `OnPlay
          | `OnPlaying
          | `OnProgress
          | `OnRateChange
          | `OnReadyStateChange
          | `OnScroll
          | `OnSeeked
          | `OnSeeking
          | `OnSelect
          | `OnShow
          | `OnStalled
          | `OnSubmit
          | `OnSuspend
          | `OnTimeUpdate
          | `OnVolumeChange
          | `OnWaiting
          | `Spellcheck
          | `Src
          | `Style_Attr
          | `Tabindex
          | `Title
          | `User_data
          | `Width
          | `XML_lang
          | `XMLns ],
         [> `Embed ])
        nullary
      val audio :
        ?src:Xml.uri wrap ->
        ?srcs:[< Html_types.source ] elt list_wrap ->
        ([< Html_types.audio_attrib ], 'a, [> 'a Html_types.audio ]) star
      val video :
        ?src:Xml.uri wrap ->
        ?srcs:[< Html_types.source ] elt list_wrap ->
        ([< Html_types.video_attrib ], 'a, [> 'a Html_types.video ]) star
      val canvas :
        ([< Html_types.canvas_attrib ], 'a, [> 'a Html_types.canvas ]) star
      val source :
        ([< Html_types.source_attrib ], [> Html_types.source ]) nullary
      val area :
        alt:Html_types.text wrap ->
        ([< `Accesskey
          | `Alt
          | `Class
          | `Contenteditable
          | `Contextmenu
          | `Coords
          | `Dir
          | `Draggable
          | `Hidden
          | `Hreflang
          | `Id
          | `Lang
          | `Media
          | `Mime_type
          | `OnAbort
          | `OnBlur
          | `OnCanPlay
          | `OnCanPlayThrough
          | `OnChange
          | `OnClick
          | `OnContextMenu
          | `OnDblClick
          | `OnDrag
          | `OnDragEnd
          | `OnDragEnter
          | `OnDragLeave
          | `OnDragOver
          | `OnDragStart
          | `OnDrop
          | `OnDurationChange
          | `OnEmptied
          | `OnEnded
          | `OnError
          | `OnFocus
          | `OnFormChange
          | `OnFormInput
          | `OnInput
          | `OnInvalid
          | `OnKeyDown
          | `OnKeyPress
          | `OnKeyUp
          | `OnLoad
          | `OnLoadStart
          | `OnLoadedData
          | `OnLoadedMetaData
          | `OnMouseDown
          | `OnMouseMove
          | `OnMouseOut
          | `OnMouseOver
          | `OnMouseUp
          | `OnMouseWheel
          | `OnPause
          | `OnPlay
          | `OnPlaying
          | `OnProgress
          | `OnRateChange
          | `OnReadyStateChange
          | `OnScroll
          | `OnSeeked
          | `OnSeeking
          | `OnSelect
          | `OnShow
          | `OnStalled
          | `OnSubmit
          | `OnSuspend
          | `OnTimeUpdate
          | `OnVolumeChange
          | `OnWaiting
          | `Rel
          | `Shape
          | `Spellcheck
          | `Style_Attr
          | `Tabindex
          | `Target
          | `Title
          | `User_data
          | `XML_lang
          | `XMLns ],
         [> `Area ])
        nullary
      val map : ([< Html_types.map_attrib ], 'a, [> `A of 'a ]) star
      val caption :
        ([< Html_types.caption_attrib ], [< Html_types.caption_content_fun ],
         [> Html_types.caption ])
        star
      val table :
        ?caption:[< Html_types.caption ] elt wrap ->
        ?columns:[< Html_types.colgroup ] elt list_wrap ->
        ?thead:[< Html_types.thead ] elt wrap ->
        ?tfoot:[< Html_types.tfoot ] elt wrap ->
        ([< Html_types.table_attrib ], [< Html_types.table_content_fun ],
         [> Html_types.table ])
        star
      val tablex :
        ?caption:[< Html_types.caption ] elt wrap ->
        ?columns:[< Html_types.colgroup ] elt list_wrap ->
        ?thead:[< Html_types.thead ] elt wrap ->
        ?tfoot:[< Html_types.tfoot ] elt wrap ->
        ([< Html_types.tablex_attrib ], [< Html_types.tablex_content_fun ],
         [> Html_types.tablex ])
        star
      val colgroup :
        ([< Html_types.colgroup_attrib ],
         [< Html_types.colgroup_content_fun ], [> Html_types.colgroup ])
        star
      val col : ([< Html_types.col_attrib ], [> Html_types.col ]) nullary
      val thead :
        ([< Html_types.thead_attrib ], [< Html_types.thead_content_fun ],
         [> Html_types.thead ])
        star
      val tbody :
        ([< Html_types.tbody_attrib ], [< Html_types.tbody_content_fun ],
         [> Html_types.tbody ])
        star
      val tfoot :
        ([< Html_types.tfoot_attrib ], [< Html_types.tfoot_content_fun ],
         [> Html_types.tfoot ])
        star
      val td :
        ([< Html_types.td_attrib ], [< Html_types.td_content_fun ],
         [> Html_types.td ])
        star
      val th :
        ([< Html_types.th_attrib ], [< Html_types.th_content_fun ],
         [> Html_types.th ])
        star
      val tr :
        ([< Html_types.tr_attrib ], [< Html_types.tr_content_fun ],
         [> Html_types.tr ])
        star
      val form :
        ([< Html_types.form_attrib ], [< Html_types.form_content_fun ],
         [> Html_types.form ])
        star
      val fieldset :
        ?legend:[ `Legend ] elt wrap ->
        ([< `Accesskey
          | `Class
          | `Contenteditable
          | `Contextmenu
          | `Dir
          | `Disabled
          | `Draggable
          | `Form
          | `Hidden
          | `Id
          | `Lang
          | `Name
          | `OnAbort
          | `OnBlur
          | `OnCanPlay
          | `OnCanPlayThrough
          | `OnChange
          | `OnClick
          | `OnContextMenu
          | `OnDblClick
          | `OnDrag
          | `OnDragEnd
          | `OnDragEnter
          | `OnDragLeave
          | `OnDragOver
          | `OnDragStart
          | `OnDrop
          | `OnDurationChange
          | `OnEmptied
          | `OnEnded
          | `OnError
          | `OnFocus
          | `OnFormChange
          | `OnFormInput
          | `OnInput
          | `OnInvalid
          | `OnKeyDown
          | `OnKeyPress
          | `OnKeyUp
          | `OnLoad
          | `OnLoadStart
          | `OnLoadedData
          | `OnLoadedMetaData
          | `OnMouseDown
          | `OnMouseMove
          | `OnMouseOut
          | `OnMouseOver
          | `OnMouseUp
          | `OnMouseWheel
          | `OnPause
          | `OnPlay
          | `OnPlaying
          | `OnProgress
          | `OnRateChange
          | `OnReadyStateChange
          | `OnScroll
          | `OnSeeked
          | `OnSeeking
          | `OnSelect
          | `OnShow
          | `OnStalled
          | `OnSubmit
          | `OnSuspend
          | `OnTimeUpdate
          | `OnVolumeChange
          | `OnWaiting
          | `Spellcheck
          | `Style_Attr
          | `Tabindex
          | `Title
          | `User_data
          | `XML_lang
          | `XMLns ],
         [< Html_types.flow5 ], [> `Fieldset ])
        star
      val legend :
        ([< Html_types.legend_attrib ], [< Html_types.legend_content_fun ],
         [> Html_types.legend ])
        star
      val label :
        ([< Html_types.label_attrib ], [< Html_types.label_content_fun ],
         [> Html_types.label ])
        star
      val input :
        ([< Html_types.input_attrib ], [> Html_types.input ]) nullary
      val button :
        ([< Html_types.button_attrib ], [< Html_types.button_content_fun ],
         [> Html_types.button ])
        star
      val select :
        ([< Html_types.select_attrib ], [< Html_types.select_content_fun ],
         [> Html_types.select ])
        star
      val datalist :
        ?children:[< `Options of [< `Option ] elt list_wrap
                   | `Phras of [< Html_types.phrasing ] elt list_wrap ] ->
        ([< Html_types.common ], [> `Datalist ]) nullary
      val optgroup :
        label:Html_types.text wrap ->
        ([< `Accesskey
          | `Class
          | `Contenteditable
          | `Contextmenu
          | `Dir
          | `Disabled
          | `Draggable
          | `Hidden
          | `Id
          | `Label
          | `Lang
          | `OnAbort
          | `OnBlur
          | `OnCanPlay
          | `OnCanPlayThrough
          | `OnChange
          | `OnClick
          | `OnContextMenu
          | `OnDblClick
          | `OnDrag
          | `OnDragEnd
          | `OnDragEnter
          | `OnDragLeave
          | `OnDragOver
          | `OnDragStart
          | `OnDrop
          | `OnDurationChange
          | `OnEmptied
          | `OnEnded
          | `OnError
          | `OnFocus
          | `OnFormChange
          | `OnFormInput
          | `OnInput
          | `OnInvalid
          | `OnKeyDown
          | `OnKeyPress
          | `OnKeyUp
          | `OnLoad
          | `OnLoadStart
          | `OnLoadedData
          | `OnLoadedMetaData
          | `OnMouseDown
          | `OnMouseMove
          | `OnMouseOut
          | `OnMouseOver
          | `OnMouseUp
          | `OnMouseWheel
          | `OnPause
          | `OnPlay
          | `OnPlaying
          | `OnProgress
          | `OnRateChange
          | `OnReadyStateChange
          | `OnScroll
          | `OnSeeked
          | `OnSeeking
          | `OnSelect
          | `OnShow
          | `OnStalled
          | `OnSubmit
          | `OnSuspend
          | `OnTimeUpdate
          | `OnVolumeChange
          | `OnWaiting
          | `Spellcheck
          | `Style_Attr
          | `Tabindex
          | `Title
          | `User_data
          | `XML_lang
          | `XMLns ],
         [< `Option ], [> `Optgroup ])
        star
      val option :
        ([< Html_types.option_attrib ], [< Html_types.option_content_fun ],
         [> Html_types.selectoption ])
        unary
      val textarea :
        ([< Html_types.textarea_attrib ],
         [< Html_types.textarea_content_fun ], [> Html_types.textarea ])
        unary
      val keygen :
        ([< Html_types.keygen_attrib ], [> Html_types.keygen ]) nullary
      val progress :
        ([< Html_types.progress_attrib ],
         [< Html_types.progress_content_fun ], [> Html_types.progress ])
        star
      val meter :
        ([< Html_types.meter_attrib ], [< Html_types.meter_content_fun ],
         [> Html_types.meter ])
        star
      val output_elt :
        ([< Html_types.output_elt_attrib ],
         [< Html_types.output_elt_content_fun ], [> Html_types.output_elt ])
        star
      val entity : string -> [> `PCDATA ] elt
      val space : unit -> [> `PCDATA ] elt
      val cdata : string -> [> `PCDATA ] elt
      val cdata_script : string -> [> `PCDATA ] elt
      val cdata_style : string -> [> `PCDATA ] elt
      val details :
        [< `Summary ] elt wrap ->
        ([< `Accesskey
          | `Class
          | `Contenteditable
          | `Contextmenu
          | `Dir
          | `Draggable
          | `Hidden
          | `Id
          | `Lang
          | `OnAbort
          | `OnBlur
          | `OnCanPlay
          | `OnCanPlayThrough
          | `OnChange
          | `OnClick
          | `OnContextMenu
          | `OnDblClick
          | `OnDrag
          | `OnDragEnd
          | `OnDragEnter
          | `OnDragLeave
          | `OnDragOver
          | `OnDragStart
          | `OnDrop
          | `OnDurationChange
          | `OnEmptied
          | `OnEnded
          | `OnError
          | `OnFocus
          | `OnFormChange
          | `OnFormInput
          | `OnInput
          | `OnInvalid
          | `OnKeyDown
          | `OnKeyPress
          | `OnKeyUp
          | `OnLoad
          | `OnLoadStart
          | `OnLoadedData
          | `OnLoadedMetaData
          | `OnMouseDown
          | `OnMouseMove
          | `OnMouseOut
          | `OnMouseOver
          | `OnMouseUp
          | `OnMouseWheel
          | `OnPause
          | `OnPlay
          | `OnPlaying
          | `OnProgress
          | `OnRateChange
          | `OnReadyStateChange
          | `OnScroll
          | `OnSeeked
          | `OnSeeking
          | `OnSelect
          | `OnShow
          | `OnStalled
          | `OnSubmit
          | `OnSuspend
          | `OnTimeUpdate
          | `OnVolumeChange
          | `OnWaiting
          | `Open
          | `Spellcheck
          | `Style_Attr
          | `Tabindex
          | `Title
          | `User_data
          | `XML_lang
          | `XMLns ],
         [< Html_types.flow5 ], [> `Details ])
        star
      val summary :
        ([< Html_types.summary_attrib ], [< Html_types.summary_content_fun ],
         [> Html_types.summary ])
        star
      val command :
        label:Html_types.text wrap ->
        ([< `Accesskey
          | `Checked
          | `Class
          | `Command_Type
          | `Contenteditable
          | `Contextmenu
          | `Dir
          | `Disabled
          | `Draggable
          | `Hidden
          | `Icon
          | `Id
          | `Lang
          | `OnAbort
          | `OnBlur
          | `OnCanPlay
          | `OnCanPlayThrough
          | `OnChange
          | `OnClick
          | `OnContextMenu
          | `OnDblClick
          | `OnDrag
          | `OnDragEnd
          | `OnDragEnter
          | `OnDragLeave
          | `OnDragOver
          | `OnDragStart
          | `OnDrop
          | `OnDurationChange
          | `OnEmptied
          | `OnEnded
          | `OnError
          | `OnFocus
          | `OnFormChange
          | `OnFormInput
          | `OnInput
          | `OnInvalid
          | `OnKeyDown
          | `OnKeyPress
          | `OnKeyUp
          | `OnLoad
          | `OnLoadStart
          | `OnLoadedData
          | `OnLoadedMetaData
          | `OnMouseDown
          | `OnMouseMove
          | `OnMouseOut
          | `OnMouseOver
          | `OnMouseUp
          | `OnMouseWheel
          | `OnPause
          | `OnPlay
          | `OnPlaying
          | `OnProgress
          | `OnRateChange
          | `OnReadyStateChange
          | `OnScroll
          | `OnSeeked
          | `OnSeeking
          | `OnSelect
          | `OnShow
          | `OnStalled
          | `OnSubmit
          | `OnSuspend
          | `OnTimeUpdate
          | `OnVolumeChange
          | `OnWaiting
          | `Radiogroup
          | `Spellcheck
          | `Style_Attr
          | `Tabindex
          | `Title
          | `User_data
          | `XML_lang
          | `XMLns ],
         [> `Command ])
        nullary
      val menu :
        ?children:[< `Flows of [< Html_types.flow5 ] elt list_wrap
                   | `Lis of [< `Li of [< Html_types.common ] ] elt list_wrap ] ->
        ([< `Accesskey
          | `Class
          | `Contenteditable
          | `Contextmenu
          | `Dir
          | `Draggable
          | `Hidden
          | `Id
          | `Label
          | `Lang
          | `Menu_Type
          | `OnAbort
          | `OnBlur
          | `OnCanPlay
          | `OnCanPlayThrough
          | `OnChange
          | `OnClick
          | `OnContextMenu
          | `OnDblClick
          | `OnDrag
          | `OnDragEnd
          | `OnDragEnter
          | `OnDragLeave
          | `OnDragOver
          | `OnDragStart
          | `OnDrop
          | `OnDurationChange
          | `OnEmptied
          | `OnEnded
          | `OnError
          | `OnFocus
          | `OnFormChange
          | `OnFormInput
          | `OnInput
          | `OnInvalid
          | `OnKeyDown
          | `OnKeyPress
          | `OnKeyUp
          | `OnLoad
          | `OnLoadStart
          | `OnLoadedData
          | `OnLoadedMetaData
          | `OnMouseDown
          | `OnMouseMove
          | `OnMouseOut
          | `OnMouseOver
          | `OnMouseUp
          | `OnMouseWheel
          | `OnPause
          | `OnPlay
          | `OnPlaying
          | `OnProgress
          | `OnRateChange
          | `OnReadyStateChange
          | `OnScroll
          | `OnSeeked
          | `OnSeeking
          | `OnSelect
          | `OnShow
          | `OnStalled
          | `OnSubmit
          | `OnSuspend
          | `OnTimeUpdate
          | `OnVolumeChange
          | `OnWaiting
          | `Spellcheck
          | `Style_Attr
          | `Tabindex
          | `Title
          | `User_data
          | `XML_lang
          | `XMLns ],
         [> `Menu ])
        nullary
      val script :
        ([< Html_types.script_attrib ], [< Html_types.script_content_fun ],
         [> Html_types.script ])
        unary
      val noscript :
        ([< Html_types.noscript_attrib ],
         [< Html_types.noscript_content_fun ], [> Html_types.noscript ])
        star
      val meta : ([< Html_types.meta_attrib ], [> Html_types.meta ]) nullary
      val style :
        ([< Html_types.style_attrib ], [< Html_types.style_content_fun ],
         [> Html_types.style ])
        star
      val link :
        rel:Html_types.linktypes wrap ->
        href:Xml.uri wrap ->
        ([< `Accesskey
          | `Class
          | `Contenteditable
          | `Contextmenu
          | `Dir
          | `Draggable
          | `Hidden
          | `Href
          | `Hreflang
          | `Id
          | `Lang
          | `Media
          | `Mime_type
          | `OnAbort
          | `OnBlur
          | `OnCanPlay
          | `OnCanPlayThrough
          | `OnChange
          | `OnClick
          | `OnContextMenu
          | `OnDblClick
          | `OnDrag
          | `OnDragEnd
          | `OnDragEnter
          | `OnDragLeave
          | `OnDragOver
          | `OnDragStart
          | `OnDrop
          | `OnDurationChange
          | `OnEmptied
          | `OnEnded
          | `OnError
          | `OnFocus
          | `OnFormChange
          | `OnFormInput
          | `OnInput
          | `OnInvalid
          | `OnKeyDown
          | `OnKeyPress
          | `OnKeyUp
          | `OnLoad
          | `OnLoadStart
          | `OnLoadedData
          | `OnLoadedMetaData
          | `OnMouseDown
          | `OnMouseMove
          | `OnMouseOut
          | `OnMouseOver
          | `OnMouseUp
          | `OnMouseWheel
          | `OnPause
          | `OnPlay
          | `OnPlaying
          | `OnProgress
          | `OnRateChange
          | `OnReadyStateChange
          | `OnScroll
          | `OnSeeked
          | `OnSeeking
          | `OnSelect
          | `OnShow
          | `OnStalled
          | `OnSubmit
          | `OnSuspend
          | `OnTimeUpdate
          | `OnVolumeChange
          | `OnWaiting
          | `Rel
          | `Sizes
          | `Spellcheck
          | `Style_Attr
          | `Tabindex
          | `Title
          | `User_data
          | `XML_lang
          | `XMLns ],
         [> `Link ])
        nullary
      val rt :
        ([< Html_types.rt_attrib ], [< Html_types.rt_content_fun ],
         [> Html_types.rt ])
        star
      val rp :
        ([< Html_types.rp_attrib ], [< Html_types.rp_content_fun ],
         [> Html_types.rp ])
        star
      val ruby :
        ([< Html_types.ruby_attrib ], [< Html_types.ruby_content_fun ],
         [> Html_types.ruby ])
        star
      val tot : Xml.elt -> 'a elt
      val totl : Xml.elt list_wrap -> 'a elt list_wrap
      val toelt : 'a elt -> Xml.elt
      val toeltl : 'a elt list_wrap -> Xml.elt list_wrap
      val doc_toelt : doc -> Xml.elt
      val to_xmlattribs : 'a attrib list -> Xml.attrib list
      val to_attrib : Xml.attrib -> 'a attrib
      module Unsafe :
        sig
          val data : string wrap -> 'a elt
          val node :
            string -> ?a:'a attrib list -> 'b elt list_wrap -> 'c elt
          val leaf : string -> ?a:'a attrib list -> unit -> 'b elt
          val coerce_elt : 'a elt -> 'b elt
          val string_attrib : string -> string wrap -> 'a attrib
          val float_attrib : string -> float wrap -> 'a attrib
          val int_attrib : string -> int wrap -> 'a attrib
          val uri_attrib : string -> uri wrap -> 'a attrib
          val space_sep_attrib : string -> string list wrap -> 'a attrib
          val comma_sep_attrib : string -> string list wrap -> 'a attrib
        end
    end
  module C :
    sig
      val node :
        ?init:'a Eliom_content.Html.D.elt ->
        'a Eliom_content.Html.elt Eliom_client_value.t ->
        'a Eliom_content.Html.D.elt
      val attr :
        ?init:'a Eliom_content.Html.attrib ->
        'a Eliom_content.Html.attrib Eliom_client_value.t ->
        'a Eliom_content.Html.attrib
    end
  module Id :
    sig
      type +'a id
      val new_elt_id : ?global:bool -> unit -> 'a Eliom_content.Html.Id.id
      val create_named_elt :
        id:'a Eliom_content.Html.Id.id ->
        'a Eliom_content.Html.elt -> 'a Eliom_content.Html.elt
      val create_global_elt :
        'a Eliom_content.Html.elt -> 'a Eliom_content.Html.elt
      val create_request_elt :
        ?reset:bool -> 'a Eliom_content.Html.elt -> 'a Eliom_content.Html.elt
      val get_element :
        'a Eliom_content.Html.Id.id -> 'a Eliom_content.Html.elt option
    end
  module Custom_data :
    sig
      type 'a t
      val create :
        name:string ->
        ?default:'a ->
        to_string:('a -> string) ->
        of_string:(string -> 'a) ->
        unit -> 'a Eliom_content.Html.Custom_data.t
      val create_json :
        name:string ->
        ?default:'a ->
        'a Deriving_Json.t -> 'a Eliom_content.Html.Custom_data.t
      val attrib :
        'a Eliom_content.Html.Custom_data.t ->
        'a -> [> `User_data ] Eliom_content.Html.attrib
      val get_dom :
        Dom_html.element Js.t -> 'a Eliom_content.Html.Custom_data.t -> 'a
      val set_dom :
        Dom_html.element Js.t ->
        'a Eliom_content.Html.Custom_data.t -> 'a -> unit
    end
  module To_dom :
    sig
      type 'a elt = 'a elt
      val of_element : 'a elt -> Dom_html.element Js.t
      val of_node : 'a elt -> Dom.node Js.t
      val of_pcdata : [< Html_types.pcdata ] elt -> Dom.text Js.t
      val of_html : [< Html_types.html ] elt -> Dom_html.htmlElement Js.t
      val of_head : [< Html_types.head ] elt -> Dom_html.headElement Js.t
      val of_link : [< Html_types.link ] elt -> Dom_html.linkElement Js.t
      val of_title : [< Html_types.title ] elt -> Dom_html.titleElement Js.t
      val of_meta : [< Html_types.meta ] elt -> Dom_html.metaElement Js.t
      val of_base : [< Html_types.base ] elt -> Dom_html.baseElement Js.t
      val of_style : [< Html_types.style ] elt -> Dom_html.styleElement Js.t
      val of_body : [< Html_types.body ] elt -> Dom_html.bodyElement Js.t
      val of_form : [< Html_types.form ] elt -> Dom_html.formElement Js.t
      val of_optgroup :
        [< Html_types.optgroup ] elt -> Dom_html.optGroupElement Js.t
      val of_option :
        [< Html_types.selectoption ] elt -> Dom_html.optionElement Js.t
      val of_select :
        [< Html_types.select ] elt -> Dom_html.selectElement Js.t
      val of_input : [< Html_types.input ] elt -> Dom_html.inputElement Js.t
      val of_textarea :
        [< Html_types.textarea ] elt -> Dom_html.textAreaElement Js.t
      val of_button :
        [< Html_types.button ] elt -> Dom_html.buttonElement Js.t
      val of_label : [< Html_types.label ] elt -> Dom_html.labelElement Js.t
      val of_fieldset :
        [< Html_types.fieldset ] elt -> Dom_html.fieldSetElement Js.t
      val of_legend :
        [< Html_types.legend ] elt -> Dom_html.legendElement Js.t
      val of_ul : [< Html_types.ul ] elt -> Dom_html.uListElement Js.t
      val of_ol : [< Html_types.ol ] elt -> Dom_html.oListElement Js.t
      val of_dl : [< Html_types.dl ] elt -> Dom_html.dListElement Js.t
      val of_li : [< Html_types.li ] elt -> Dom_html.liElement Js.t
      val of_div : [< Html_types.div ] elt -> Dom_html.divElement Js.t
      val of_p : [< Html_types.p ] elt -> Dom_html.paragraphElement Js.t
      val of_heading :
        [< Html_types.heading ] elt -> Dom_html.headingElement Js.t
      val of_blockquote :
        [< Html_types.blockquote ] elt -> Dom_html.quoteElement Js.t
      val of_pre : [< Html_types.pre ] elt -> Dom_html.preElement Js.t
      val of_br : [< Html_types.br ] elt -> Dom_html.brElement Js.t
      val of_hr : [< Html_types.hr ] elt -> Dom_html.hrElement Js.t
      val of_del : [< 'a Html_types.del ] elt -> Dom_html.modElement Js.t
      val of_ins : [< 'a Html_types.ins ] elt -> Dom_html.modElement Js.t
      val of_a : [< 'a Html_types.a ] elt -> Dom_html.anchorElement Js.t
      val of_img :
        [< Html_types.img_interactive ] elt -> Dom_html.imageElement Js.t
      val of_object :
        [< 'a Html_types.object_ ] elt -> Dom_html.objectElement Js.t
      val of_param : [< Html_types.param ] elt -> Dom_html.paramElement Js.t
      val of_area : [< Html_types.area ] elt -> Dom_html.areaElement Js.t
      val of_map : [< 'a Html_types.map ] elt -> Dom_html.mapElement Js.t
      val of_script :
        [< Html_types.script ] elt -> Dom_html.scriptElement Js.t
      val of_td : [< `Td ] elt -> Dom_html.tableCellElement Js.t
      val of_tr : [< Html_types.tr ] elt -> Dom_html.tableRowElement Js.t
      val of_col : [< Html_types.col ] elt -> Dom_html.tableColElement Js.t
      val of_tfoot :
        [< Html_types.tfoot ] elt -> Dom_html.tableSectionElement Js.t
      val of_thead :
        [< Html_types.thead ] elt -> Dom_html.tableSectionElement Js.t
      val of_tbody :
        [< Html_types.tbody ] elt -> Dom_html.tableSectionElement Js.t
      val of_caption :
        [< Html_types.caption ] elt -> Dom_html.tableCaptionElement Js.t
      val of_table : [< Html_types.table ] elt -> Dom_html.tableElement Js.t
      val of_canvas :
        [< 'a Html_types.canvas ] elt -> Dom_html.canvasElement Js.t
      val of_iframe :
        [< Html_types.iframe ] elt -> Dom_html.iFrameElement Js.t
      val of_audio :
        [< 'a Html_types.audio_interactive ] elt ->
        Dom_html.audioElement Js.t
      val of_video :
        [< 'a Html_types.video_interactive ] elt ->
        Dom_html.videoElement Js.t
      val of_h1 : Html_types.heading elt -> Dom_html.headingElement Js.t
      val of_h2 : Html_types.heading elt -> Dom_html.headingElement Js.t
      val of_h3 : Html_types.heading elt -> Dom_html.headingElement Js.t
      val of_h4 : Html_types.heading elt -> Dom_html.headingElement Js.t
      val of_h5 : Html_types.heading elt -> Dom_html.headingElement Js.t
      val of_h6 : Html_types.heading elt -> Dom_html.headingElement Js.t
      val of_abbr : [> Html_types.abbr ] elt -> Dom_html.element Js.t
      val of_address : [> Html_types.address ] elt -> Dom_html.element Js.t
      val of_article : [> Html_types.article ] elt -> Dom_html.element Js.t
      val of_aside : [> Html_types.aside ] elt -> Dom_html.element Js.t
      val of_b : [> Html_types.b ] elt -> Dom_html.element Js.t
      val of_bdo : [> Html_types.bdo ] elt -> Dom_html.element Js.t
      val of_cite : [> Html_types.cite ] elt -> Dom_html.element Js.t
      val of_code : [> Html_types.code ] elt -> Dom_html.element Js.t
      val of_colgroup : [> Html_types.colgroup ] elt -> Dom_html.element Js.t
      val of_command : [> Html_types.command ] elt -> Dom_html.element Js.t
      val of_datalist : [> Html_types.datalist ] elt -> Dom_html.element Js.t
      val of_dd : [> Html_types.dd ] elt -> Dom_html.element Js.t
      val of_details : [> Html_types.details ] elt -> Dom_html.element Js.t
      val of_dfn : [> Html_types.dfn ] elt -> Dom_html.element Js.t
      val of_dt : [> Html_types.dt ] elt -> Dom_html.element Js.t
      val of_em : [> Html_types.em ] elt -> Dom_html.element Js.t
      val of_embed : [> Html_types.embed ] elt -> Dom_html.element Js.t
      val of_figcaption :
        [> Html_types.figcaption ] elt -> Dom_html.element Js.t
      val of_figure : [> Html_types.figure ] elt -> Dom_html.element Js.t
      val of_footer : [> Html_types.footer ] elt -> Dom_html.element Js.t
      val of_header : [> Html_types.header ] elt -> Dom_html.element Js.t
      val of_hgroup : [> Html_types.hgroup ] elt -> Dom_html.element Js.t
      val of_i : [> Html_types.i ] elt -> Dom_html.element Js.t
      val of_kbd : [> Html_types.kbd ] elt -> Dom_html.element Js.t
      val of_keygen : [> Html_types.keygen ] elt -> Dom_html.element Js.t
      val of_main : [> Html_types.main ] elt -> Dom_html.element Js.t
      val of_mark : [> Html_types.mark ] elt -> Dom_html.element Js.t
      val of_menu : [> Html_types.menu ] elt -> Dom_html.element Js.t
      val of_meter : [> Html_types.meter ] elt -> Dom_html.element Js.t
      val of_nav : [> Html_types.nav ] elt -> Dom_html.element Js.t
      val of_noscript : [> Html_types.noscript ] elt -> Dom_html.element Js.t
      val of_output : [> Html_types.output_elt ] elt -> Dom_html.element Js.t
      val of_progress : [> Html_types.progress ] elt -> Dom_html.element Js.t
      val of_q : [> Html_types.q ] elt -> Dom_html.element Js.t
      val of_rp : [> Html_types.rp ] elt -> Dom_html.element Js.t
      val of_rt : [> Html_types.rt ] elt -> Dom_html.element Js.t
      val of_ruby : [> Html_types.ruby ] elt -> Dom_html.element Js.t
      val of_samp : [> Html_types.samp ] elt -> Dom_html.element Js.t
      val of_section : [> Html_types.section ] elt -> Dom_html.element Js.t
      val of_small : [> Html_types.small ] elt -> Dom_html.element Js.t
      val of_source : [> Html_types.source ] elt -> Dom_html.element Js.t
      val of_span : [> Html_types.span ] elt -> Dom_html.element Js.t
      val of_strong : [> Html_types.strong ] elt -> Dom_html.element Js.t
      val of_sub : [> Html_types.sub ] elt -> Dom_html.element Js.t
      val of_summary : [> Html_types.summary ] elt -> Dom_html.element Js.t
      val of_sup : [> Html_types.sup ] elt -> Dom_html.element Js.t
      val of_th : [> Html_types.th ] elt -> Dom_html.element Js.t
      val of_time : [> Html_types.time ] elt -> Dom_html.element Js.t
      val of_u : [> Html_types.u ] elt -> Dom_html.element Js.t
      val of_var : [> Html_types.var ] elt -> Dom_html.element Js.t
      val of_wbr : [> Html_types.wbr ] elt -> Dom_html.element Js.t
    end
  module Manip :
    sig
      val appendChild :
        ?before:'a Eliom_content.Html.elt ->
        'b Eliom_content.Html.elt -> 'c Eliom_content.Html.elt -> unit
      val appendToBody :
        ?before:'a Eliom_content.Html.elt ->
        'c Eliom_content.Html.elt -> unit
      val appendChildren :
        ?before:'a Eliom_content.Html.elt ->
        'b Eliom_content.Html.elt -> 'c Eliom_content.Html.elt list -> unit
      val insertFirstChild :
        'b Eliom_content.Html.elt -> 'c Eliom_content.Html.elt -> unit
      val nth :
        'a Eliom_content.Html.elt -> int -> 'b Eliom_content.Html.elt option
      val childLength : 'a Eliom_content.Html.elt -> int
      val removeChild :
        'a Eliom_content.Html.elt -> 'b Eliom_content.Html.elt -> unit
      val replaceChild :
        'a Eliom_content.Html.elt ->
        'b Eliom_content.Html.elt -> 'c Eliom_content.Html.elt -> unit
      val removeChildren : 'a Eliom_content.Html.elt -> unit
      val removeSelf : 'a Eliom_content.Html.elt -> unit
      val replaceChildren :
        'a Eliom_content.Html.elt -> 'b Eliom_content.Html.elt list -> unit
      val parentNode :
        'a Eliom_content.Html.elt -> 'b Eliom_content.Html.elt option
      val nextSibling :
        'a Eliom_content.Html.elt -> 'b Eliom_content.Html.elt option
      val previousSibling :
        'a Eliom_content.Html.elt -> 'b Eliom_content.Html.elt option
      val insertBefore :
        before:'a Eliom_content.Html.elt -> 'b Eliom_content.Html.elt -> unit
      val insertAfter :
        after:'a Eliom_content.Html.elt -> 'b Eliom_content.Html.elt -> unit
      val replaceSelf :
        'a Eliom_content.Html.elt -> 'b Eliom_content.Html.elt -> unit
      val children :
        'a Eliom_content.Html.elt -> 'b Eliom_content.Html.elt list
      val addEventListener :
        ?capture:bool ->
        'a Eliom_content.Html.elt ->
        (#Dom_html.event as 'b) Js.t Dom_html.Event.typ ->
        ('a Eliom_content.Html.elt -> 'b Js.t -> bool) ->
        Dom_html.event_listener_id
      module Named :
        sig
          val appendChild :
            ?before:'a Eliom_content.Html.elt ->
            'b Eliom_content.Html.Id.id -> 'c Eliom_content.Html.elt -> unit
          val appendChildren :
            ?before:'a Eliom_content.Html.elt ->
            'b Eliom_content.Html.Id.id ->
            'c Eliom_content.Html.elt list -> unit
          val removeChild :
            'a Eliom_content.Html.Id.id -> 'b Eliom_content.Html.elt -> unit
          val replaceChild :
            'a Eliom_content.Html.Id.id ->
            'b Eliom_content.Html.elt -> 'c Eliom_content.Html.elt -> unit
          val removeChildren : 'a Eliom_content.Html.Id.id -> unit
          val replaceChildren :
            'a Eliom_content.Html.Id.id ->
            'b Eliom_content.Html.elt list -> unit
          val addEventListener :
            ?capture:bool ->
            'a Eliom_content.Html.Id.id ->
            (#Dom_html.event as 'b) Js.t Dom_html.Event.typ ->
            ('a Eliom_content.Html.elt -> 'b Js.t -> bool) ->
            Dom_html.event_listener_id
        end
      val scrollIntoView : ?bottom:bool -> 'a Eliom_content.Html.elt -> unit
      val childNodes : 'a Eliom_content.Html.elt -> Dom.node Js.t list
      val childElements : 'a Eliom_content.Html.elt -> Dom.element Js.t list
      module Class :
        sig
          val contain : 'a Eliom_content.Html.elt -> string -> bool
          val remove : 'a Eliom_content.Html.elt -> string -> unit
          val removes : 'a Eliom_content.Html.elt -> string list -> unit
          val add : 'a Eliom_content.Html.elt -> string -> unit
          val adds : 'a Eliom_content.Html.elt -> string list -> unit
          val replace : 'a Eliom_content.Html.elt -> string -> string -> unit
          val clear : 'a Eliom_content.Html.elt -> unit
          val toggle : 'a Eliom_content.Html.elt -> string -> unit
          val toggle2 : 'a Eliom_content.Html.elt -> string -> string -> unit
        end
      module Elt :
        sig val body : unit -> [ `Body ] Eliom_content.Html.elt end
      module Ev :
        sig
          type ('a, 'b) ev =
              'a Eliom_content.Html.elt -> ('b Js.t -> bool) -> unit
          type ('a, 'b) ev_unit =
              'a Eliom_content.Html.elt -> ('b Js.t -> unit) -> unit
          val onkeyup :
            ('a, Dom_html.keyboardEvent) Eliom_content.Html.Manip.Ev.ev
          val onkeydown :
            ('a, Dom_html.keyboardEvent) Eliom_content.Html.Manip.Ev.ev
          val onmouseup :
            ('a, Dom_html.mouseEvent) Eliom_content.Html.Manip.Ev.ev
          val onmousedown :
            ('a, Dom_html.mouseEvent) Eliom_content.Html.Manip.Ev.ev
          val onmouseout :
            ('a, Dom_html.mouseEvent) Eliom_content.Html.Manip.Ev.ev
          val onmouseover :
            ('a, Dom_html.mouseEvent) Eliom_content.Html.Manip.Ev.ev
          val onclick :
            ('a, Dom_html.mouseEvent) Eliom_content.Html.Manip.Ev.ev
          val ondblclick :
            ('a, Dom_html.mouseEvent) Eliom_content.Html.Manip.Ev.ev
          val onload : ('a, Dom_html.event) Eliom_content.Html.Manip.Ev.ev
          val onerror : ('a, Dom_html.event) Eliom_content.Html.Manip.Ev.ev
          val onabort : ('a, Dom_html.event) Eliom_content.Html.Manip.Ev.ev
          val onfocus : ('a, Dom_html.event) Eliom_content.Html.Manip.Ev.ev
          val onblur : ('a, Dom_html.event) Eliom_content.Html.Manip.Ev.ev
          val onfocus_textarea :
            ('a, Dom_html.event) Eliom_content.Html.Manip.Ev.ev
          val onblur_textarea :
            ('a, Dom_html.event) Eliom_content.Html.Manip.Ev.ev
          val onscroll : ('a, Dom_html.event) Eliom_content.Html.Manip.Ev.ev
          val onreturn :
            ('a, Dom_html.keyboardEvent) Eliom_content.Html.Manip.Ev.ev_unit
          val onchange : ('a, Dom_html.event) Eliom_content.Html.Manip.Ev.ev
          val onchange_select :
            ('a, Dom_html.event) Eliom_content.Html.Manip.Ev.ev
        end
      module Attr :
        sig
          val clientWidth : 'a Eliom_content.Html.elt -> int
          val clientHeight : 'a Eliom_content.Html.elt -> int
          val offsetWidth : 'a Eliom_content.Html.elt -> int
          val offsetHeight : 'a Eliom_content.Html.elt -> int
          val clientLeft : 'a Eliom_content.Html.elt -> int
          val clientTop : 'a Eliom_content.Html.elt -> int
        end
      module Css :
        sig
          val background : 'a Eliom_content.Html.elt -> string
          val backgroundAttachment : 'a Eliom_content.Html.elt -> string
          val backgroundColor : 'a Eliom_content.Html.elt -> string
          val backgroundImage : 'a Eliom_content.Html.elt -> string
          val backgroundPosition : 'a Eliom_content.Html.elt -> string
          val backgroundRepeat : 'a Eliom_content.Html.elt -> string
          val border : 'a Eliom_content.Html.elt -> string
          val borderBottom : 'a Eliom_content.Html.elt -> string
          val borderBottomColor : 'a Eliom_content.Html.elt -> string
          val borderBottomStyle : 'a Eliom_content.Html.elt -> string
          val borderBottomWidth : 'a Eliom_content.Html.elt -> string
          val borderBottomWidthPx : 'a Eliom_content.Html.elt -> int
          val borderCollapse : 'a Eliom_content.Html.elt -> string
          val borderColor : 'a Eliom_content.Html.elt -> string
          val borderLeft : 'a Eliom_content.Html.elt -> string
          val borderLeftColor : 'a Eliom_content.Html.elt -> string
          val borderLeftStyle : 'a Eliom_content.Html.elt -> string
          val borderLeftWidth : 'a Eliom_content.Html.elt -> string
          val borderLeftWidthPx : 'a Eliom_content.Html.elt -> int
          val borderRight : 'a Eliom_content.Html.elt -> string
          val borderRightColor : 'a Eliom_content.Html.elt -> string
          val borderRightStyle : 'a Eliom_content.Html.elt -> string
          val borderRightWidth : 'a Eliom_content.Html.elt -> string
          val borderRightWidthPx : 'a Eliom_content.Html.elt -> int
          val borderSpacing : 'a Eliom_content.Html.elt -> string
          val borderStyle : 'a Eliom_content.Html.elt -> string
          val borderTop : 'a Eliom_content.Html.elt -> string
          val borderTopColor : 'a Eliom_content.Html.elt -> string
          val borderTopStyle : 'a Eliom_content.Html.elt -> string
          val borderTopWidth : 'a Eliom_content.Html.elt -> string
          val borderTopWidthPx : 'a Eliom_content.Html.elt -> int
          val borderWidth : 'a Eliom_content.Html.elt -> string
          val bottom : 'a Eliom_content.Html.elt -> string
          val captionSide : 'a Eliom_content.Html.elt -> string
          val clear : 'a Eliom_content.Html.elt -> string
          val clip : 'a Eliom_content.Html.elt -> string
          val color : 'a Eliom_content.Html.elt -> string
          val content : 'a Eliom_content.Html.elt -> string
          val counterIncrement : 'a Eliom_content.Html.elt -> string
          val counterReset : 'a Eliom_content.Html.elt -> string
          val cssFloat : 'a Eliom_content.Html.elt -> string
          val cssText : 'a Eliom_content.Html.elt -> string
          val cursor : 'a Eliom_content.Html.elt -> string
          val direction : 'a Eliom_content.Html.elt -> string
          val display : 'a Eliom_content.Html.elt -> string
          val emptyCells : 'a Eliom_content.Html.elt -> string
          val font : 'a Eliom_content.Html.elt -> string
          val fontFamily : 'a Eliom_content.Html.elt -> string
          val fontSize : 'a Eliom_content.Html.elt -> string
          val fontStyle : 'a Eliom_content.Html.elt -> string
          val fontVariant : 'a Eliom_content.Html.elt -> string
          val fontWeight : 'a Eliom_content.Html.elt -> string
          val height : 'a Eliom_content.Html.elt -> string
          val heightPx : 'a Eliom_content.Html.elt -> int
          val left : 'a Eliom_content.Html.elt -> string
          val leftPx : 'a Eliom_content.Html.elt -> int
          val letterSpacing : 'a Eliom_content.Html.elt -> string
          val lineHeight : 'a Eliom_content.Html.elt -> string
          val listStyle : 'a Eliom_content.Html.elt -> string
          val listStyleImage : 'a Eliom_content.Html.elt -> string
          val listStylePosition : 'a Eliom_content.Html.elt -> string
          val listStyleType : 'a Eliom_content.Html.elt -> string
          val margin : 'a Eliom_content.Html.elt -> string
          val marginBottom : 'a Eliom_content.Html.elt -> string
          val marginBottomPx : 'a Eliom_content.Html.elt -> int
          val marginLeft : 'a Eliom_content.Html.elt -> string
          val marginLeftPx : 'a Eliom_content.Html.elt -> int
          val marginRight : 'a Eliom_content.Html.elt -> string
          val marginRightPx : 'a Eliom_content.Html.elt -> int
          val marginTop : 'a Eliom_content.Html.elt -> string
          val marginTopPx : 'a Eliom_content.Html.elt -> int
          val maxHeight : 'a Eliom_content.Html.elt -> string
          val maxHeightPx : 'a Eliom_content.Html.elt -> int
          val maxWidth : 'a Eliom_content.Html.elt -> string
          val maxWidthPx : 'a Eliom_content.Html.elt -> int
          val minHeight : 'a Eliom_content.Html.elt -> string
          val minHeightPx : 'a Eliom_content.Html.elt -> int
          val minWidth : 'a Eliom_content.Html.elt -> string
          val minWidthPx : 'a Eliom_content.Html.elt -> int
          val opacity : 'a Eliom_content.Html.elt -> string option
          val outline : 'a Eliom_content.Html.elt -> string
          val outlineColor : 'a Eliom_content.Html.elt -> string
          val outlineOffset : 'a Eliom_content.Html.elt -> string
          val outlineStyle : 'a Eliom_content.Html.elt -> string
          val outlineWidth : 'a Eliom_content.Html.elt -> string
          val overflow : 'a Eliom_content.Html.elt -> string
          val overflowX : 'a Eliom_content.Html.elt -> string
          val overflowY : 'a Eliom_content.Html.elt -> string
          val padding : 'a Eliom_content.Html.elt -> string
          val paddingBottom : 'a Eliom_content.Html.elt -> string
          val paddingBottomPx : 'a Eliom_content.Html.elt -> int
          val paddingLeft : 'a Eliom_content.Html.elt -> string
          val paddingLeftPx : 'a Eliom_content.Html.elt -> int
          val paddingRight : 'a Eliom_content.Html.elt -> string
          val paddingRightPx : 'a Eliom_content.Html.elt -> int
          val paddingTop : 'a Eliom_content.Html.elt -> string
          val paddingTopPx : 'a Eliom_content.Html.elt -> int
          val pageBreakAfter : 'a Eliom_content.Html.elt -> string
          val pageBreakBefore : 'a Eliom_content.Html.elt -> string
          val position : 'a Eliom_content.Html.elt -> string
          val right : 'a Eliom_content.Html.elt -> string
          val rightPx : 'a Eliom_content.Html.elt -> int
          val tableLayout : 'a Eliom_content.Html.elt -> string
          val textAlign : 'a Eliom_content.Html.elt -> string
          val textDecoration : 'a Eliom_content.Html.elt -> string
          val textIndent : 'a Eliom_content.Html.elt -> string
          val textTransform : 'a Eliom_content.Html.elt -> string
          val top : 'a Eliom_content.Html.elt -> string
          val topPx : 'a Eliom_content.Html.elt -> int
          val verticalAlign : 'a Eliom_content.Html.elt -> string
          val visibility : 'a Eliom_content.Html.elt -> string
          val whiteSpace : 'a Eliom_content.Html.elt -> string
          val width : 'a Eliom_content.Html.elt -> string
          val widthPx : 'a Eliom_content.Html.elt -> int
          val wordSpacing : 'a Eliom_content.Html.elt -> string
          val zIndex : 'a Eliom_content.Html.elt -> string
        end
      module SetCss :
        sig
          val background : 'a Eliom_content.Html.elt -> string -> unit
          val backgroundAttachment :
            'a Eliom_content.Html.elt -> string -> unit
          val backgroundColor : 'a Eliom_content.Html.elt -> string -> unit
          val backgroundImage : 'a Eliom_content.Html.elt -> string -> unit
          val backgroundPosition :
            'a Eliom_content.Html.elt -> string -> unit
          val backgroundRepeat : 'a Eliom_content.Html.elt -> string -> unit
          val border : 'a Eliom_content.Html.elt -> string -> unit
          val borderBottom : 'a Eliom_content.Html.elt -> string -> unit
          val borderBottomColor : 'a Eliom_content.Html.elt -> string -> unit
          val borderBottomStyle : 'a Eliom_content.Html.elt -> string -> unit
          val borderBottomWidth : 'a Eliom_content.Html.elt -> string -> unit
          val borderBottomWidthPx : 'a Eliom_content.Html.elt -> int -> unit
          val borderCollapse : 'a Eliom_content.Html.elt -> string -> unit
          val borderColor : 'a Eliom_content.Html.elt -> string -> unit
          val borderLeft : 'a Eliom_content.Html.elt -> string -> unit
          val borderLeftColor : 'a Eliom_content.Html.elt -> string -> unit
          val borderLeftStyle : 'a Eliom_content.Html.elt -> string -> unit
          val borderLeftWidth : 'a Eliom_content.Html.elt -> string -> unit
          val borderLeftWidthPx : 'a Eliom_content.Html.elt -> int -> unit
          val borderRight : 'a Eliom_content.Html.elt -> string -> unit
          val borderRightColor : 'a Eliom_content.Html.elt -> string -> unit
          val borderRightStyle : 'a Eliom_content.Html.elt -> string -> unit
          val borderRightWidth : 'a Eliom_content.Html.elt -> string -> unit
          val borderRightWidthPx : 'a Eliom_content.Html.elt -> int -> unit
          val borderSpacing : 'a Eliom_content.Html.elt -> string -> unit
          val borderStyle : 'a Eliom_content.Html.elt -> string -> unit
          val borderTop : 'a Eliom_content.Html.elt -> string -> unit
          val borderTopColor : 'a Eliom_content.Html.elt -> string -> unit
          val borderTopStyle : 'a Eliom_content.Html.elt -> string -> unit
          val borderTopWidth : 'a Eliom_content.Html.elt -> string -> unit
          val borderTopWidthPx : 'a Eliom_content.Html.elt -> int -> unit
          val borderWidth : 'a Eliom_content.Html.elt -> string -> unit
          val bottom : 'a Eliom_content.Html.elt -> string -> unit
          val bottomPx : 'a Eliom_content.Html.elt -> int -> unit
          val captionSide : 'a Eliom_content.Html.elt -> string -> unit
          val clear : 'a Eliom_content.Html.elt -> string -> unit
          val clip : 'a Eliom_content.Html.elt -> string -> unit
          val color : 'a Eliom_content.Html.elt -> string -> unit
          val content : 'a Eliom_content.Html.elt -> string -> unit
          val counterIncrement : 'a Eliom_content.Html.elt -> string -> unit
          val counterReset : 'a Eliom_content.Html.elt -> string -> unit
          val cssFloat : 'a Eliom_content.Html.elt -> string -> unit
          val cssText : 'a Eliom_content.Html.elt -> string -> unit
          val cursor : 'a Eliom_content.Html.elt -> string -> unit
          val direction : 'a Eliom_content.Html.elt -> string -> unit
          val display : 'a Eliom_content.Html.elt -> string -> unit
          val emptyCells : 'a Eliom_content.Html.elt -> string -> unit
          val font : 'a Eliom_content.Html.elt -> string -> unit
          val fontFamily : 'a Eliom_content.Html.elt -> string -> unit
          val fontSize : 'a Eliom_content.Html.elt -> string -> unit
          val fontStyle : 'a Eliom_content.Html.elt -> string -> unit
          val fontVariant : 'a Eliom_content.Html.elt -> string -> unit
          val fontWeight : 'a Eliom_content.Html.elt -> string -> unit
          val height : 'a Eliom_content.Html.elt -> string -> unit
          val heightPx : 'a Eliom_content.Html.elt -> int -> unit
          val left : 'a Eliom_content.Html.elt -> string -> unit
          val leftPx : 'a Eliom_content.Html.elt -> int -> unit
          val letterSpacing : 'a Eliom_content.Html.elt -> string -> unit
          val lineHeight : 'a Eliom_content.Html.elt -> string -> unit
          val listStyle : 'a Eliom_content.Html.elt -> string -> unit
          val listStyleImage : 'a Eliom_content.Html.elt -> string -> unit
          val listStylePosition : 'a Eliom_content.Html.elt -> string -> unit
          val listStyleType : 'a Eliom_content.Html.elt -> string -> unit
          val margin : 'a Eliom_content.Html.elt -> string -> unit
          val marginBottom : 'a Eliom_content.Html.elt -> string -> unit
          val marginBottomPx : 'a Eliom_content.Html.elt -> int -> unit
          val marginLeft : 'a Eliom_content.Html.elt -> string -> unit
          val marginLeftPx : 'a Eliom_content.Html.elt -> int -> unit
          val marginRight : 'a Eliom_content.Html.elt -> string -> unit
          val marginRightPx : 'a Eliom_content.Html.elt -> int -> unit
          val marginTop : 'a Eliom_content.Html.elt -> string -> unit
          val marginTopPx : 'a Eliom_content.Html.elt -> int -> unit
          val maxHeight : 'a Eliom_content.Html.elt -> string -> unit
          val maxHeightPx : 'a Eliom_content.Html.elt -> int -> unit
          val maxWidth : 'a Eliom_content.Html.elt -> string -> unit
          val maxWidthPx : 'a Eliom_content.Html.elt -> int -> unit
          val minHeight : 'a Eliom_content.Html.elt -> string -> unit
          val minHeightPx : 'a Eliom_content.Html.elt -> int -> unit
          val minWidth : 'a Eliom_content.Html.elt -> string -> unit
          val minWidthPx : 'a Eliom_content.Html.elt -> int -> unit
          val opacity : 'a Eliom_content.Html.elt -> string -> unit
          val outline : 'a Eliom_content.Html.elt -> string -> unit
          val outlineColor : 'a Eliom_content.Html.elt -> string -> unit
          val outlineOffset : 'a Eliom_content.Html.elt -> string -> unit
          val outlineStyle : 'a Eliom_content.Html.elt -> string -> unit
          val outlineWidth : 'a Eliom_content.Html.elt -> string -> unit
          val overflow : 'a Eliom_content.Html.elt -> string -> unit
          val overflowX : 'a Eliom_content.Html.elt -> string -> unit
          val overflowY : 'a Eliom_content.Html.elt -> string -> unit
          val padding : 'a Eliom_content.Html.elt -> string -> unit
          val paddingBottom : 'a Eliom_content.Html.elt -> string -> unit
          val paddingBottomPx : 'a Eliom_content.Html.elt -> int -> unit
          val paddingLeft : 'a Eliom_content.Html.elt -> string -> unit
          val paddingLeftPx : 'a Eliom_content.Html.elt -> int -> unit
          val paddingRight : 'a Eliom_content.Html.elt -> string -> unit
          val paddingRightPx : 'a Eliom_content.Html.elt -> int -> unit
          val paddingTop : 'a Eliom_content.Html.elt -> string -> unit
          val paddingTopPx : 'a Eliom_content.Html.elt -> int -> unit
          val pageBreakAfter : 'a Eliom_content.Html.elt -> string -> unit
          val pageBreakBefore : 'a Eliom_content.Html.elt -> string -> unit
          val position : 'a Eliom_content.Html.elt -> string -> unit
          val right : 'a Eliom_content.Html.elt -> string -> unit
          val rightPx : 'a Eliom_content.Html.elt -> int -> unit
          val tableLayout : 'a Eliom_content.Html.elt -> string -> unit
          val textAlign : 'a Eliom_content.Html.elt -> string -> unit
          val textDecoration : 'a Eliom_content.Html.elt -> string -> unit
          val textIndent : 'a Eliom_content.Html.elt -> string -> unit
          val textTransform : 'a Eliom_content.Html.elt -> string -> unit
          val top : 'a Eliom_content.Html.elt -> string -> unit
          val topPx : 'a Eliom_content.Html.elt -> int -> unit
          val verticalAlign : 'a Eliom_content.Html.elt -> string -> unit
          val visibility : 'a Eliom_content.Html.elt -> string -> unit
          val whiteSpace : 'a Eliom_content.Html.elt -> string -> unit
          val width : 'a Eliom_content.Html.elt -> string -> unit
          val widthPx : 'a Eliom_content.Html.elt -> int -> unit
          val wordSpacing : 'a Eliom_content.Html.elt -> string -> unit
          val zIndex : 'a Eliom_content.Html.elt -> string -> unit
        end
    end
  module Of_dom :
    sig
      type 'a elt = 'a elt
      val of_element : Dom_html.element Js.t -> 'a elt
      val of_html : Dom_html.htmlElement Js.t -> [> Html_types.html ] elt
      val of_head : Dom_html.headElement Js.t -> [> Html_types.head ] elt
      val of_link : Dom_html.linkElement Js.t -> [> Html_types.link ] elt
      val of_title : Dom_html.titleElement Js.t -> [> Html_types.title ] elt
      val of_meta : Dom_html.metaElement Js.t -> [> Html_types.meta ] elt
      val of_base : Dom_html.baseElement Js.t -> [> Html_types.base ] elt
      val of_style : Dom_html.styleElement Js.t -> [> Html_types.style ] elt
      val of_body : Dom_html.bodyElement Js.t -> [> Html_types.body ] elt
      val of_form : Dom_html.formElement Js.t -> [> Html_types.form ] elt
      val of_optGroup :
        Dom_html.optGroupElement Js.t -> [> Html_types.optgroup ] elt
      val of_option :
        Dom_html.optionElement Js.t -> [> Html_types.selectoption ] elt
      val of_select :
        Dom_html.selectElement Js.t -> [> Html_types.select ] elt
      val of_input : Dom_html.inputElement Js.t -> [> Html_types.input ] elt
      val of_textArea :
        Dom_html.textAreaElement Js.t -> [> Html_types.textarea ] elt
      val of_button :
        Dom_html.buttonElement Js.t -> [> Html_types.button ] elt
      val of_label : Dom_html.labelElement Js.t -> [> Html_types.label ] elt
      val of_fieldSet :
        Dom_html.fieldSetElement Js.t -> [> Html_types.fieldset ] elt
      val of_legend :
        Dom_html.legendElement Js.t -> [> Html_types.legend ] elt
      val of_uList : Dom_html.uListElement Js.t -> [> Html_types.ul ] elt
      val of_oList : Dom_html.oListElement Js.t -> [> Html_types.ol ] elt
      val of_dList : Dom_html.dListElement Js.t -> [> Html_types.dl ] elt
      val of_li : Dom_html.liElement Js.t -> [> Html_types.li ] elt
      val of_div : Dom_html.divElement Js.t -> [> Html_types.div ] elt
      val of_paragraph :
        Dom_html.paragraphElement Js.t -> [> Html_types.p ] elt
      val of_heading :
        Dom_html.headingElement Js.t -> [> Html_types.heading ] elt
      val of_quote :
        Dom_html.quoteElement Js.t -> [> Html_types.blockquote ] elt
      val of_pre : Dom_html.preElement Js.t -> [> Html_types.pre ] elt
      val of_br : Dom_html.brElement Js.t -> [> Html_types.br ] elt
      val of_hr : Dom_html.hrElement Js.t -> [> Html_types.hr ] elt
      val of_mod :
        Dom_html.modElement Js.t -> [> `Del of 'a | `Ins of 'a ] elt
      val of_anchor : Dom_html.anchorElement Js.t -> [> 'a Html_types.a ] elt
      val of_image : Dom_html.imageElement Js.t -> [> Html_types.img ] elt
      val of_object :
        Dom_html.objectElement Js.t -> [> 'a Html_types.object_ ] elt
      val of_param : Dom_html.paramElement Js.t -> [> Html_types.param ] elt
      val of_area : Dom_html.areaElement Js.t -> [> Html_types.area ] elt
      val of_map : Dom_html.mapElement Js.t -> [> 'a Html_types.map ] elt
      val of_script :
        Dom_html.scriptElement Js.t -> [> Html_types.script ] elt
      val of_embed : Dom_html.embedElement Js.t -> [> Html_types.embed ] elt
      val of_tableCell : Dom_html.tableCellElement Js.t -> [> `Td | `Th ] elt
      val of_tableRow :
        Dom_html.tableRowElement Js.t -> [> Html_types.tr ] elt
      val of_tableCol :
        Dom_html.tableColElement Js.t -> [> Html_types.col ] elt
      val of_tableSection :
        Dom_html.tableSectionElement Js.t ->
        [> `Tbody | `Tfoot | `Thead ] elt
      val of_tableCaption :
        Dom_html.tableCaptionElement Js.t -> [> Html_types.caption ] elt
      val of_table : Dom_html.tableElement Js.t -> [> Html_types.table ] elt
      val of_canvas :
        Dom_html.canvasElement Js.t -> [> 'a Html_types.canvas ] elt
      val of_iFrame :
        Dom_html.iFrameElement Js.t -> [> Html_types.iframe ] elt
      val of_audio :
        Dom_html.audioElement Js.t -> [> 'a Html_types.audio ] elt
      val of_video :
        Dom_html.videoElement Js.t -> [> 'a Html_types.video ] elt
    end
end >>