=Module <<a_api_type subproject="server" | module Eliom_service >> =
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<span class="ocsforge_color_uid"|<<span class="ocsforge_color_uid"|Eliom_service>>>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="ocsforge_color_keyword"|sig>><<a_api subproject="server" text=".." | module Eliom_service >><<span class="ocsforge_color_keyword"|end>>>>~Creation and manipulation of ~Eliom services~.

----

~See the ~Eliom manual for a detailed introduction to the concept of
    <<a_manual chapter="server-services"|Eliom services>>~.

~See the ~Eliom manual for a detailed introduction to the concept of
    <<a_manual chapter="server-services"|Eliom services>>~.

~The main functions to create services are documented in
    <<a_api | module Eliom_service_sigs.S >>~.
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|include>> <<a_api subproject="server" | module type Eliom_service_sigs.S_WITH_CREATE >>>>


==@@id="2_StaticloadingofEliommodules"@@~Static loading of ~Eliom modules==



==@@id="2_StaticloadingofEliommodules"@@~Static loading of ~Eliom modules==


~This functionality allows one to register initialization functions
    for ~Eliom modules which will be executed when the corresponding
    module is loaded in <<span class="odocwiki_inlinecode"|ocsigenserver~.conf>>~.  ~If the module is loaded
    dynamically~, you probably don~'t need this~.  ~But if the module is
    linked statically~, some computations~, like service registrations
    must be delayed~.
<<pre id="VALregister_eliom_module" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|register~_eliom~_module>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|string <<span class="ocsforge_color_delimiter"| -> >> <<span class="ocsforge_color_delimiter"| ( >>unit <<span class="ocsforge_color_delimiter"| -> >> unit<<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >> unit>>>><<div class="odocwiki_info"|~The function <<span class="odocwiki_inlinecode"|register~_eliom~_module mod f>> is used to register the
    initialization function <<span class="odocwiki_inlinecode"|f>> to be executed when then module <<span class="odocwiki_inlinecode"|mod>>
    is loaded by ~Ocsigen server~. ~The module <<span class="odocwiki_inlinecode"|mod>> could either be a
    dynamically loaded module or linked statically into the server~: in
    each case~, the <<span class="odocwiki_inlinecode"|f>> function will be invoked when the module is
    initialized in the configuration file using <<span class="odocwiki_inlinecode"|~<eliommodule ~.~.~.~>
    ~.~.~. ~<~/eliommodule~>>>~. ~If <<span class="odocwiki_inlinecode"|register~_eliom~_module>> is called twice
    with the same module name~, the second initialization function will
    replace the previous one~.
>>
<<pre id="VALunregister" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|unregister>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| ?scope: >>[< <<a_api subproject="server" text="Eliom_common.scope" | type Eliom_common.scope >> ] <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?secure: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_delimiter"| ( >>'a, 'b, 'c, 'd, 'e, non_ext, 'f, [< `WithSuffix | `WithoutSuffix ],\\   'g, 'h, 'i<<span class="ocsforge_color_delimiter"| ) >>\\  t <<span class="ocsforge_color_delimiter"| -> >> unit>>>><<div class="odocwiki_info"|~The function <<span class="odocwiki_inlinecode"|unregister service>> unregister the service handler
    previously associated to <<span class="odocwiki_inlinecode"|service>> with
    <<span class="odocwiki_inlinecode"|~Eliom~_registration~.~Html~.register>>~,
    <<span class="odocwiki_inlinecode"|~Eliom~_registration~.~App~.register>> or any other
    <<a_api subproject="server" | module Eliom_registration >><<span class="odocwiki_inlinecode"|~.~*~.register>> functions~. ~See the
    documentation of those functions for a description of the <<span class="odocwiki_inlinecode"|~~scope>>
    and <<span class="odocwiki_inlinecode"|~~secure>> optional parameters~.
>>
<<pre id="VALis_external" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|is~_external>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_delimiter"| ( >>'a, 'b, 'c, 'd, 'e, 'f, 'g, [< `WithSuffix | `WithoutSuffix ], 'h,\\   'i, 'j<<span class="ocsforge_color_delimiter"| ) >>\\  t <<span class="ocsforge_color_delimiter"| -> >> bool>>>><<div class="odocwiki_info"|~Returns whether it is an external service or not~.
>>
