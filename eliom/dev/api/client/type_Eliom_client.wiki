<<code language="ocaml" | sig
  val init_client_app :
    app_name:string ->
    ?ssl:bool ->
    hostname:string ->
    ?port:int -> full_path:Eliom_lib.Url.path -> unit -> unit
  val is_client_app : unit -> bool
  val change_page :
    ?replace:bool ->
    ?absolute:bool ->
    ?absolute_path:bool ->
    ?https:bool ->
    service:('a, 'b, 'c, 'd, 'e, 'f, 'g, [< `WithSuffix | `WithoutSuffix ],
             'h, 'i, Eliom_service.non_ocaml)
            Eliom_service.t ->
    ?hostname:string ->
    ?port:int ->
    ?fragment:string ->
    ?keep_nl_params:[ `All | `None | `Persistent ] ->
    ?nl_params:Eliom_parameter.nl_params_set ->
    ?keep_get_na_params:bool ->
    ?progress:(int -> int -> unit) ->
    ?upload_progress:(int -> int -> unit) ->
    ?override_mime_type:string -> 'a -> 'b -> unit Lwt.t
  val call_ocaml_service :
    ?absolute:bool ->
    ?absolute_path:bool ->
    ?https:bool ->
    service:('a, 'b, 'c, 'd, 'e, 'f, 'g, [< `WithSuffix | `WithoutSuffix ],
             'h, 'i, 'return Eliom_service.ocaml)
            Eliom_service.t ->
    ?hostname:string ->
    ?port:int ->
    ?fragment:string ->
    ?keep_nl_params:[ `All | `None | `Persistent ] ->
    ?nl_params:Eliom_parameter.nl_params_set ->
    ?keep_get_na_params:bool ->
    ?progress:(int -> int -> unit) ->
    ?upload_progress:(int -> int -> unit) ->
    ?override_mime_type:string -> 'a -> 'b -> 'return Lwt.t
  val exit_to :
    ?absolute:bool ->
    ?absolute_path:bool ->
    ?https:bool ->
    service:('a, 'b, 'c, 'd, 'e, 'f, 'g, [< `WithSuffix | `WithoutSuffix ],
             'h, 'i, Eliom_service.non_ocaml)
            Eliom_service.t ->
    ?hostname:string ->
    ?port:int ->
    ?fragment:string ->
    ?keep_nl_params:[ `All | `None | `Persistent ] ->
    ?nl_params:Eliom_parameter.nl_params_set ->
    ?keep_get_na_params:bool -> 'a -> 'b -> unit
  val window_open :
    window_name:Js.js_string Js.t ->
    ?window_features:Js.js_string Js.t ->
    ?absolute:bool ->
    ?absolute_path:bool ->
    ?https:bool ->
    service:('a, unit, Eliom_service.get, 'b, 'c, 'd, 'e,
             [< `WithSuffix | `WithoutSuffix ], 'f, unit, 'g)
            Eliom_service.t ->
    ?hostname:string ->
    ?port:int ->
    ?fragment:string ->
    ?keep_nl_params:[ `All | `None | `Persistent ] ->
    ?nl_params:Eliom_parameter.nl_params_set ->
    ?keep_get_na_params:bool -> 'a -> Dom_html.window Js.t
  val change_url :
    ?replace:bool ->
    ?absolute:bool ->
    ?absolute_path:bool ->
    ?https:bool ->
    service:('get, unit, Eliom_service.get, 'a, 'b, 'c, 'd,
             [< `WithSuffix | `WithoutSuffix ], 'e, unit, 'f)
            Eliom_service.t ->
    ?hostname:string ->
    ?port:int ->
    ?fragment:string ->
    ?keep_nl_params:[ `All | `None | `Persistent ] ->
    ?nl_params:Eliom_parameter.nl_params_set -> 'get -> unit
  val call_service :
    ?absolute:bool ->
    ?absolute_path:bool ->
    ?https:bool ->
    service:('a, 'b, 'c, 'd, 'e, 'f, 'g, [< `WithSuffix | `WithoutSuffix ],
             'h, 'i, 'j)
            Eliom_service.t ->
    ?hostname:string ->
    ?port:int ->
    ?fragment:string ->
    ?keep_nl_params:[ `All | `None | `Persistent ] ->
    ?nl_params:Eliom_parameter.nl_params_set ->
    ?keep_get_na_params:bool ->
    ?progress:(int -> int -> unit) ->
    ?upload_progress:(int -> int -> unit) ->
    ?override_mime_type:string -> 'a -> 'b -> string Lwt.t
  val onload : (unit -> unit) -> unit
  val lwt_onload : unit -> unit Lwt.t
  val onbeforeunload : (unit -> string option) -> unit
  val onunload : (unit -> unit) -> unit
  val wait_load_end : unit -> unit Lwt.t
  val get_application_name : unit -> string
  val persist_document_head : unit -> unit
  type ('a, 'b) server_function = 'a -> 'b Lwt.t
  val change_page_uri : ?replace:bool -> string -> unit Lwt.t
  val change_page_unknown :
    ?meth:[ `Delete | `Get | `Post | `Put ] ->
    ?hostname:string ->
    ?replace:bool ->
    string list ->
    (string * string) list -> (string * string) list -> unit Lwt.t
  val init : unit -> unit
  val set_reload_function : (unit -> unit -> unit Lwt.t) -> unit
  val log_section : Eliom_lib.Lwt_log.section
  val middleClick : Dom_html.mouseEvent Js.t -> bool
  val set_content_local :
    ?offset:Eliommod_dom.position ->
    ?fragment:string -> Dom_html.element Js.t -> unit Lwt.t
  type client_form_handler = Dom_html.event Js.t -> bool Lwt.t
  val current_uri : string Pervasives.ref
  type _ redirection =
      Redirection :
        (unit, unit, Eliom_service.get, 'b, 'c, 'd, 'e, [ `WithoutSuffix ],
         unit, unit, 'a)
        Eliom_service.t -> 'a Eliom_client.redirection
  val register_redirect :
    Eliom_service.non_ocaml Eliom_client.redirection -> unit
  val register_reload : unit -> unit
end >>